

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Mar 29 19:49:34 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57  0000                     
    58                           ; Version 2.10
    59                           ; Generated 31/07/2019 GMT
    60                           ; 
    61                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F4550 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     _ADRES	set	4035
    93  0000                     _PORTBbits	set	3969
    94  0000                     _TRISA	set	3986
    95  0000                     _INTCON2bits	set	4081
    96  0000                     _TRISBbits	set	3987
    97  0000                     _LATDbits	set	3980
    98  0000                     _TRISDbits	set	3989
    99  0000                     _TRISD	set	3989
   100  0000                     _PORTD	set	3971
   101  0000                     _ADCON0bits	set	4034
   102  0000                     _ADCON2bits	set	4032
   103  0000                     _ADCON0	set	4034
   104  0000                     _ADCON1bits	set	4033
   105                           
   106                           	psect	smallconst
   107  000800                     __psmallconst:
   108                           	opt callstack 0
   109  000800  00                 	db	0
   110  000801                     STR_1:
   111  000801  2A                 	db	42
   112  000802  2A                 	db	42
   113  000803  20                 	db	32
   114  000804  43                 	db	67	;'C'
   115  000805  61                 	db	97	;'a'
   116  000806  6E                 	db	110	;'n'
   117  000807  61                 	db	97	;'a'
   118  000808  6C                 	db	108	;'l'
   119  000809  65                 	db	101	;'e'
   120  00080A  73                 	db	115	;'s'
   121  00080B  20                 	db	32
   122  00080C  41                 	db	65	;'A'
   123  00080D  44                 	db	68	;'D'
   124  00080E  43                 	db	67	;'C'
   125  00080F  20                 	db	32
   126  000810  2A                 	db	42
   127  000811  2A                 	db	42
   128  000812  00                 	db	0
   129  000813                     STR_6:
   130  000813  54                 	db	84	;'T'
   131  000814  65                 	db	101	;'e'
   132  000815  6E                 	db	110	;'n'
   133  000816  73                 	db	115	;'s'
   134  000817  69                 	db	105	;'i'
   135  000818  6F                 	db	111	;'o'
   136  000819  6E                 	db	110	;'n'
   137  00081A  20                 	db	32
   138  00081B  41                 	db	65	;'A'
   139  00081C  44                 	db	68	;'D'
   140  00081D  43                 	db	67	;'C'
   141  00081E  5F                 	db	95	;'_'
   142  00081F  31                 	db	49	;'1'
   143  000820  3A                 	db	58	;':'
   144  000821  20                 	db	32
   145  000822  00                 	db	0
   146  000823                     STR_8:
   147  000823  54                 	db	84	;'T'
   148  000824  65                 	db	101	;'e'
   149  000825  6E                 	db	110	;'n'
   150  000826  73                 	db	115	;'s'
   151  000827  69                 	db	105	;'i'
   152  000828  6F                 	db	111	;'o'
   153  000829  6E                 	db	110	;'n'
   154  00082A  20                 	db	32
   155  00082B  41                 	db	65	;'A'
   156  00082C  44                 	db	68	;'D'
   157  00082D  43                 	db	67	;'C'
   158  00082E  5F                 	db	95	;'_'
   159  00082F  32                 	db	50	;'2'
   160  000830  3A                 	db	58	;':'
   161  000831  20                 	db	32
   162  000832  00                 	db	0
   163  000833                     STR_10:
   164  000833  54                 	db	84	;'T'
   165  000834  65                 	db	101	;'e'
   166  000835  6E                 	db	110	;'n'
   167  000836  73                 	db	115	;'s'
   168  000837  69                 	db	105	;'i'
   169  000838  6F                 	db	111	;'o'
   170  000839  6E                 	db	110	;'n'
   171  00083A  20                 	db	32
   172  00083B  41                 	db	65	;'A'
   173  00083C  44                 	db	68	;'D'
   174  00083D  43                 	db	67	;'C'
   175  00083E  5F                 	db	95	;'_'
   176  00083F  33                 	db	51	;'3'
   177  000840  3A                 	db	58	;':'
   178  000841  20                 	db	32
   179  000842  00                 	db	0
   180  000843                     STR_2:
   181  000843  20                 	db	32
   182  000844  42                 	db	66	;'B'
   183  000845  79                 	db	121	;'y'
   184  000846  3A                 	db	58	;':'
   185  000847  20                 	db	32
   186  000848  46                 	db	70	;'F'
   187  000849  65                 	db	101	;'e'
   188  00084A  72                 	db	114	;'r'
   189  00084B  6E                 	db	110	;'n'
   190  00084C  61                 	db	97	;'a'
   191  00084D  6E                 	db	110	;'n'
   192  00084E  64                 	db	100	;'d'
   193  00084F  6F                 	db	111	;'o'
   194  000850  20                 	db	32
   195  000851  00                 	db	0
   196  000852                     STR_3:
   197  000852  41                 	db	65	;'A'
   198  000853  44                 	db	68	;'D'
   199  000854  43                 	db	67	;'C'
   200  000855  5F                 	db	95	;'_'
   201  000856  31                 	db	49	;'1'
   202  000857  20                 	db	32
   203  000858  2D                 	db	45
   204  000859  3E                 	db	62	;'>'
   205  00085A  20                 	db	32
   206  00085B  50                 	db	80	;'P'
   207  00085C  75                 	db	117	;'u'
   208  00085D  6C                 	db	108	;'l'
   209  00085E  73                 	db	115	;'s'
   210  00085F  31                 	db	49	;'1'
   211  000860  00                 	db	0
   212  000861                     STR_4:
   213  000861  41                 	db	65	;'A'
   214  000862  44                 	db	68	;'D'
   215  000863  43                 	db	67	;'C'
   216  000864  5F                 	db	95	;'_'
   217  000865  32                 	db	50	;'2'
   218  000866  20                 	db	32
   219  000867  2D                 	db	45
   220  000868  3E                 	db	62	;'>'
   221  000869  20                 	db	32
   222  00086A  50                 	db	80	;'P'
   223  00086B  75                 	db	117	;'u'
   224  00086C  6C                 	db	108	;'l'
   225  00086D  73                 	db	115	;'s'
   226  00086E  32                 	db	50	;'2'
   227  00086F  00                 	db	0
   228  000870                     STR_5:
   229  000870  41                 	db	65	;'A'
   230  000871  44                 	db	68	;'D'
   231  000872  43                 	db	67	;'C'
   232  000873  5F                 	db	95	;'_'
   233  000874  33                 	db	51	;'3'
   234  000875  20                 	db	32
   235  000876  2D                 	db	45
   236  000877  3E                 	db	62	;'>'
   237  000878  20                 	db	32
   238  000879  50                 	db	80	;'P'
   239  00087A  75                 	db	117	;'u'
   240  00087B  6C                 	db	108	;'l'
   241  00087C  73                 	db	115	;'s'
   242  00087D  33                 	db	51	;'3'
   243  00087E  00                 	db	0
   244  00087F                     STR_7:
   245  00087F  25                 	db	37
   246  000880  2E                 	db	46
   247  000881  32                 	db	50	;'2'
   248  000882  66                 	db	102	;'f'
   249  000883  00                 	db	0
   250  000884                     STR_12:
   251  000884  49                 	db	73	;'I'
   252  000885  4E                 	db	78	;'N'
   253  000886  46                 	db	70	;'F'
   254  000887  00                 	db	0
   255  000888                     STR_16:
   256  000888  4E                 	db	78	;'N'
   257  000889  41                 	db	65	;'A'
   258  00088A  4E                 	db	78	;'N'
   259  00088B  00                 	db	0
   260  00088C                     STR_13:
   261  00088C  69                 	db	105	;'i'
   262  00088D  6E                 	db	110	;'n'
   263  00088E  66                 	db	102	;'f'
   264  00088F  00                 	db	0
   265  000890                     STR_17:
   266  000890  6E                 	db	110	;'n'
   267  000891  61                 	db	97	;'a'
   268  000892  6E                 	db	110	;'n'
   269  000893  00                 	db	0
   270  000894                     STR_20:
   271  000894  6C                 	db	108	;'l'
   272  000895  66                 	db	102	;'f'
   273  000896  00                 	db	0
   274  0000                     
   275                           ; #config settings
   276  000897  00                 	db	0	; dummy byte at the end
   277  0000                     
   278                           	psect	cinit
   279  003DD6                     __pcinit:
   280                           	opt callstack 0
   281  003DD6                     start_initialization:
   282                           	opt callstack 0
   283  003DD6                     __initialization:
   284                           	opt callstack 0
   285                           
   286                           ; Clear objects allocated to BANK1 (80 bytes)
   287  003DD6  EE01  F000         	lfsr	0,__pbssBANK1
   288  003DDA  0E50               	movlw	80
   289  003DDC                     clear_0:
   290  003DDC  6AEE               	clrf	postinc0,c
   291  003DDE  06E8               	decf	wreg,f,c
   292  003DE0  E1FD               	bnz	clear_0
   293                           
   294                           ; Clear objects allocated to BANK0 (42 bytes)
   295  003DE2  EE00  F0CB         	lfsr	0,__pbssBANK0
   296  003DE6  0E2A               	movlw	42
   297  003DE8                     clear_1:
   298  003DE8  6AEE               	clrf	postinc0,c
   299  003DEA  06E8               	decf	wreg,f,c
   300  003DEC  E1FD               	bnz	clear_1
   301  003DEE                     end_of_initialization:
   302                           	opt callstack 0
   303  003DEE                     __end_of__initialization:
   304                           	opt callstack 0
   305  003DEE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   306  003DF0  6EF8               	movwf	tblptru,c
   307  003DF2  0100               	movlb	0
   308  003DF4  EF24  F00A         	goto	_main	;jump to C main() function
   309                           
   310                           	psect	bssBANK0
   311  0000CB                     __pbssBANK0:
   312                           	opt callstack 0
   313  0000CB                     floorf@F524:
   314                           	opt callstack 0
   315  0000CB                     	ds	4
   316  0000CF                     ___fpclassifyf@F463:
   317                           	opt callstack 0
   318  0000CF                     	ds	4
   319  0000D3                     _tension:
   320                           	opt callstack 0
   321  0000D3                     	ds	4
   322  0000D7                     _nout:
   323                           	opt callstack 0
   324  0000D7                     	ds	2
   325  0000D9                     _width:
   326                           	opt callstack 0
   327  0000D9                     	ds	2
   328  0000DB                     _prec:
   329                           	opt callstack 0
   330  0000DB                     	ds	2
   331  0000DD                     _flags:
   332                           	opt callstack 0
   333  0000DD                     	ds	2
   334  0000DF                     _valorLectura:
   335                           	opt callstack 0
   336  0000DF                     	ds	2
   337  0000E1                     _datos:
   338                           	opt callstack 0
   339  0000E1                     	ds	20
   340                           
   341                           	psect	bssBANK1
   342  000100                     __pbssBANK1:
   343                           	opt callstack 0
   344  000100                     _dbuf:
   345                           	opt callstack 0
   346  000100                     	ds	80
   347                           
   348                           	psect	cstackBANK0
   349  000060                     __pcstackBANK0:
   350                           	opt callstack 0
   351  000060                     ??_efgtoa:
   352                           
   353                           ; 1 bytes @ 0x0
   354  000060                     	ds	5
   355  000065                     efgtoa@ou:
   356                           	opt callstack 0
   357                           
   358                           ; 4 bytes @ 0x5
   359  000065                     	ds	4
   360  000069                     _efgtoa$625:
   361                           	opt callstack 0
   362                           
   363                           ; 2 bytes @ 0x9
   364  000069                     	ds	2
   365  00006B                     _efgtoa$626:
   366                           	opt callstack 0
   367                           
   368                           ; 2 bytes @ 0xB
   369  00006B                     	ds	2
   370  00006D                     _efgtoa$631:
   371                           	opt callstack 0
   372                           
   373                           ; 2 bytes @ 0xD
   374  00006D                     	ds	2
   375  00006F                     _efgtoa$635:
   376                           	opt callstack 0
   377                           
   378                           ; 2 bytes @ 0xF
   379  00006F                     	ds	2
   380  000071                     _efgtoa$636:
   381                           	opt callstack 0
   382                           
   383                           ; 2 bytes @ 0x11
   384  000071                     	ds	2
   385  000073                     _efgtoa$637:
   386                           	opt callstack 0
   387                           
   388                           ; 2 bytes @ 0x13
   389  000073                     	ds	2
   390  000075                     efgtoa@t:
   391                           	opt callstack 0
   392                           
   393                           ; 2 bytes @ 0x15
   394  000075                     	ds	2
   395  000077                     efgtoa@pp:
   396                           	opt callstack 0
   397                           
   398                           ; 2 bytes @ 0x17
   399  000077                     	ds	2
   400  000079                     efgtoa@m:
   401                           	opt callstack 0
   402                           
   403                           ; 2 bytes @ 0x19
   404  000079                     	ds	2
   405  00007B                     efgtoa@ne:
   406                           	opt callstack 0
   407                           
   408                           ; 2 bytes @ 0x1B
   409  00007B                     	ds	2
   410  00007D                     efgtoa@d:
   411                           	opt callstack 0
   412                           
   413                           ; 2 bytes @ 0x1D
   414  00007D                     	ds	2
   415  00007F                     efgtoa@sign:
   416                           	opt callstack 0
   417                           
   418                           ; 2 bytes @ 0x1F
   419  00007F                     	ds	2
   420  000081                     efgtoa@p:
   421                           	opt callstack 0
   422                           
   423                           ; 2 bytes @ 0x21
   424  000081                     	ds	2
   425  000083                     efgtoa@nmode:
   426                           	opt callstack 0
   427                           
   428                           ; 1 bytes @ 0x23
   429  000083                     	ds	1
   430  000084                     efgtoa@w:
   431                           	opt callstack 0
   432                           
   433                           ; 2 bytes @ 0x24
   434  000084                     	ds	2
   435  000086                     efgtoa@mode:
   436                           	opt callstack 0
   437                           
   438                           ; 1 bytes @ 0x26
   439  000086                     	ds	1
   440  000087                     efgtoa@h:
   441                           	opt callstack 0
   442                           
   443                           ; 4 bytes @ 0x27
   444  000087                     	ds	4
   445  00008B                     efgtoa@l:
   446                           	opt callstack 0
   447                           
   448                           ; 4 bytes @ 0x2B
   449  00008B                     	ds	4
   450  00008F                     efgtoa@i:
   451                           	opt callstack 0
   452                           
   453                           ; 2 bytes @ 0x2F
   454  00008F                     	ds	2
   455  000091                     efgtoa@g:
   456                           	opt callstack 0
   457                           
   458                           ; 4 bytes @ 0x31
   459  000091                     	ds	4
   460  000095                     efgtoa@e:
   461                           	opt callstack 0
   462                           
   463                           ; 2 bytes @ 0x35
   464  000095                     	ds	2
   465  000097                     efgtoa@n:
   466                           	opt callstack 0
   467                           
   468                           ; 2 bytes @ 0x37
   469  000097                     	ds	2
   470  000099                     efgtoa@u:
   471                           	opt callstack 0
   472                           
   473                           ; 4 bytes @ 0x39
   474  000099                     	ds	4
   475  00009D                     ?_vfpfcnvrt:
   476                           	opt callstack 0
   477  00009D                     vfpfcnvrt@fp:
   478                           	opt callstack 0
   479                           
   480                           ; 2 bytes @ 0x3D
   481  00009D                     	ds	2
   482  00009F                     vfpfcnvrt@fmt:
   483                           	opt callstack 0
   484                           
   485                           ; 2 bytes @ 0x3F
   486  00009F                     	ds	2
   487  0000A1                     vfpfcnvrt@ap:
   488                           	opt callstack 0
   489                           
   490                           ; 2 bytes @ 0x41
   491  0000A1                     	ds	2
   492  0000A3                     _vfpfcnvrt$651:
   493                           	opt callstack 0
   494                           
   495                           ; 2 bytes @ 0x43
   496  0000A3                     	ds	2
   497  0000A5                     _vfpfcnvrt$655:
   498                           	opt callstack 0
   499                           
   500                           ; 2 bytes @ 0x45
   501  0000A5                     	ds	2
   502  0000A7                     vfpfcnvrt@f:
   503                           	opt callstack 0
   504                           
   505                           ; 4 bytes @ 0x47
   506  0000A7                     	ds	4
   507  0000AB                     vfpfcnvrt@ct:
   508                           	opt callstack 0
   509                           
   510                           ; 3 bytes @ 0x4B
   511  0000AB                     	ds	3
   512  0000AE                     vfpfcnvrt@c:
   513                           	opt callstack 0
   514                           
   515                           ; 1 bytes @ 0x4E
   516  0000AE                     	ds	1
   517  0000AF                     ?_vfprintf:
   518                           	opt callstack 0
   519  0000AF                     vfprintf@fp:
   520                           	opt callstack 0
   521                           
   522                           ; 2 bytes @ 0x4F
   523  0000AF                     	ds	2
   524  0000B1                     vfprintf@fmt:
   525                           	opt callstack 0
   526                           
   527                           ; 2 bytes @ 0x51
   528  0000B1                     	ds	2
   529  0000B3                     vfprintf@ap:
   530                           	opt callstack 0
   531                           
   532                           ; 2 bytes @ 0x53
   533  0000B3                     	ds	2
   534  0000B5                     vfprintf@cfmt:
   535                           	opt callstack 0
   536                           
   537                           ; 2 bytes @ 0x55
   538  0000B5                     	ds	2
   539  0000B7                     ?_sprintf:
   540                           	opt callstack 0
   541  0000B7                     sprintf@s:
   542                           	opt callstack 0
   543                           
   544                           ; 2 bytes @ 0x57
   545  0000B7                     	ds	2
   546  0000B9                     sprintf@fmt:
   547                           	opt callstack 0
   548                           
   549                           ; 2 bytes @ 0x59
   550  0000B9                     	ds	8
   551  0000C1                     sprintf@ap:
   552                           	opt callstack 0
   553                           
   554                           ; 2 bytes @ 0x61
   555  0000C1                     	ds	2
   556  0000C3                     sprintf@f:
   557                           	opt callstack 0
   558                           
   559                           ; 6 bytes @ 0x63
   560  0000C3                     	ds	6
   561  0000C9                     ??_main:
   562                           
   563                           ; 1 bytes @ 0x69
   564  0000C9                     	ds	2
   565                           
   566                           	psect	cstackCOMRAM
   567  000001                     __pcstackCOMRAM:
   568                           	opt callstack 0
   569  000001                     ??_SetDDRamAddr:
   570  000001                     ??_DelayPORXLCD:
   571  000001                     ?_strlen:
   572                           	opt callstack 0
   573  000001                     ?___fpclassifyf:
   574                           	opt callstack 0
   575  000001                     ?_isupper:
   576                           	opt callstack 0
   577  000001                     ?_isdigit:
   578                           	opt callstack 0
   579  000001                     ?_strncmp:
   580                           	opt callstack 0
   581  000001                     ?_isspace:
   582                           	opt callstack 0
   583  000001                     ?_ADC_Read:
   584                           	opt callstack 0
   585  000001                     ?___wmul:
   586                           	opt callstack 0
   587  000001                     ?___awdiv:
   588                           	opt callstack 0
   589  000001                     ?___awmod:
   590                           	opt callstack 0
   591  000001                     ?___fladd:
   592                           	opt callstack 0
   593  000001                     ?___flneg:
   594                           	opt callstack 0
   595  000001                     ?___fltol:
   596                           	opt callstack 0
   597  000001                     ?___xxtofl:
   598                           	opt callstack 0
   599  000001                     WriteCmdXLCD@cmd:
   600                           	opt callstack 0
   601  000001                     WriteDataXLCD@data:
   602                           	opt callstack 0
   603  000001                     ___wmul@multiplier:
   604                           	opt callstack 0
   605  000001                     ___awdiv@dividend:
   606                           	opt callstack 0
   607  000001                     ___awmod@dividend:
   608                           	opt callstack 0
   609  000001                     isdigit@c:
   610                           	opt callstack 0
   611  000001                     isspace@c:
   612                           	opt callstack 0
   613  000001                     isupper@c:
   614                           	opt callstack 0
   615  000001                     fputc@c:
   616                           	opt callstack 0
   617  000001                     strcpy@dest:
   618                           	opt callstack 0
   619  000001                     strlen@s:
   620                           	opt callstack 0
   621  000001                     strncmp@_l:
   622                           	opt callstack 0
   623  000001                     ___fleq@ff1:
   624                           	opt callstack 0
   625  000001                     ___flneg@f1:
   626                           	opt callstack 0
   627  000001                     ___fltol@f1:
   628                           	opt callstack 0
   629  000001                     ___fladd@b:
   630                           	opt callstack 0
   631  000001                     ___xxtofl@val:
   632                           	opt callstack 0
   633  000001                     ___fpclassifyf@x:
   634                           	opt callstack 0
   635                           
   636                           ; 4 bytes @ 0x0
   637  000001                     	ds	1
   638  000002                     LCD_gotoXY@x:
   639                           	opt callstack 0
   640  000002                     putrsXLCD@buffer:
   641                           	opt callstack 0
   642                           
   643                           ; 2 bytes @ 0x1
   644  000002                     	ds	1
   645  000003                     ??_isupper:
   646  000003                     ??_isdigit:
   647  000003                     ??_isspace:
   648  000003                     ADC_Read@ch:
   649                           	opt callstack 0
   650  000003                     ___wmul@multiplicand:
   651                           	opt callstack 0
   652  000003                     ___awdiv@divisor:
   653                           	opt callstack 0
   654  000003                     ___awmod@divisor:
   655                           	opt callstack 0
   656  000003                     fputc@fp:
   657                           	opt callstack 0
   658  000003                     strcpy@src:
   659                           	opt callstack 0
   660  000003                     strlen@a:
   661                           	opt callstack 0
   662  000003                     strncmp@_r:
   663                           	opt callstack 0
   664                           
   665                           ; 2 bytes @ 0x2
   666  000003                     	ds	1
   667  000004                     SetDDRamAddr@DDaddr:
   668                           	opt callstack 0
   669  000004                     LCD_gotoXY@y:
   670                           	opt callstack 0
   671                           
   672                           ; 2 bytes @ 0x3
   673  000004                     	ds	1
   674  000005                     ??_fputc:
   675  000005                     ??___fpclassifyf:
   676  000005                     ??_strcpy:
   677  000005                     ??___fltol:
   678  000005                     ??___xxtofl:
   679  000005                     OpenXLCD@lcdtype:
   680                           	opt callstack 0
   681  000005                     ___awdiv@counter:
   682                           	opt callstack 0
   683  000005                     ___awmod@counter:
   684                           	opt callstack 0
   685  000005                     ___wmul@product:
   686                           	opt callstack 0
   687  000005                     strncmp@n:
   688                           	opt callstack 0
   689  000005                     ___fleq@ff2:
   690                           	opt callstack 0
   691  000005                     ___fladd@a:
   692                           	opt callstack 0
   693                           
   694                           ; 4 bytes @ 0x4
   695  000005                     	ds	1
   696  000006                     ___awdiv@sign:
   697                           	opt callstack 0
   698  000006                     ___awmod@sign:
   699                           	opt callstack 0
   700                           
   701                           ; 1 bytes @ 0x5
   702  000006                     	ds	1
   703  000007                     ??_strncmp:
   704  000007                     ?_tolower:
   705                           	opt callstack 0
   706  000007                     _isspace$1157:
   707                           	opt callstack 0
   708  000007                     ___awdiv@quotient:
   709                           	opt callstack 0
   710  000007                     strcpy@s:
   711                           	opt callstack 0
   712  000007                     tolower@c:
   713                           	opt callstack 0
   714                           
   715                           ; 2 bytes @ 0x6
   716  000007                     	ds	1
   717  000008                     ?_atoi:
   718                           	opt callstack 0
   719  000008                     atoi@s:
   720                           	opt callstack 0
   721  000008                     strncmp@l:
   722                           	opt callstack 0
   723                           
   724                           ; 2 bytes @ 0x7
   725  000008                     	ds	1
   726  000009                     ??_tolower:
   727  000009                     ??___fladd:
   728  000009                     ??___fleq:
   729  000009                     ___fltol@sign1:
   730                           	opt callstack 0
   731  000009                     ___xxtofl@sign:
   732                           	opt callstack 0
   733  000009                     ___fpclassifyf@e:
   734                           	opt callstack 0
   735  000009                     strcpy@d:
   736                           	opt callstack 0
   737                           
   738                           ; 2 bytes @ 0x8
   739  000009                     	ds	1
   740  00000A                     ??_atoi:
   741  00000A                     ___fltol@exp1:
   742                           	opt callstack 0
   743  00000A                     ___xxtofl@exp:
   744                           	opt callstack 0
   745  00000A                     fputs@s:
   746                           	opt callstack 0
   747  00000A                     strncmp@r:
   748                           	opt callstack 0
   749                           
   750                           ; 2 bytes @ 0x9
   751  00000A                     	ds	1
   752  00000B                     ___xxtofl@arg:
   753                           	opt callstack 0
   754  00000B                     ___fpclassifyf@u:
   755                           	opt callstack 0
   756                           
   757                           ; 4 bytes @ 0xA
   758  00000B                     	ds	1
   759  00000C                     fputs@fp:
   760                           	opt callstack 0
   761                           
   762                           ; 2 bytes @ 0xB
   763  00000C                     	ds	1
   764  00000D                     ___fladd@signs:
   765                           	opt callstack 0
   766  00000D                     _tolower$1242:
   767                           	opt callstack 0
   768                           
   769                           ; 2 bytes @ 0xC
   770  00000D                     	ds	1
   771  00000E                     ___fladd@aexp:
   772                           	opt callstack 0
   773  00000E                     fputs@c:
   774                           	opt callstack 0
   775  00000E                     atoi@neg:
   776                           	opt callstack 0
   777                           
   778                           ; 2 bytes @ 0xD
   779  00000E                     	ds	1
   780  00000F                     ?___flmul:
   781                           	opt callstack 0
   782  00000F                     ___fladd@bexp:
   783                           	opt callstack 0
   784  00000F                     fputs@i:
   785                           	opt callstack 0
   786  00000F                     ___flmul@b:
   787                           	opt callstack 0
   788                           
   789                           ; 4 bytes @ 0xE
   790  00000F                     	ds	1
   791  000010                     ___fladd@grs:
   792                           	opt callstack 0
   793  000010                     _atoi$1126:
   794                           	opt callstack 0
   795                           
   796                           ; 2 bytes @ 0xF
   797  000010                     	ds	1
   798  000011                     ?_pad:
   799                           	opt callstack 0
   800  000011                     pad@fp:
   801                           	opt callstack 0
   802                           
   803                           ; 2 bytes @ 0x10
   804  000011                     	ds	1
   805  000012                     _atoi$1128:
   806                           	opt callstack 0
   807                           
   808                           ; 2 bytes @ 0x11
   809  000012                     	ds	1
   810  000013                     pad@buf:
   811                           	opt callstack 0
   812  000013                     ___flmul@a:
   813                           	opt callstack 0
   814                           
   815                           ; 4 bytes @ 0x12
   816  000013                     	ds	1
   817  000014                     _atoi$1127:
   818                           	opt callstack 0
   819                           
   820                           ; 1 bytes @ 0x13
   821  000014                     	ds	1
   822  000015                     pad@p:
   823                           	opt callstack 0
   824  000015                     atoi@n:
   825                           	opt callstack 0
   826                           
   827                           ; 2 bytes @ 0x14
   828  000015                     	ds	2
   829  000017                     ??___flmul:
   830  000017                     ??_pad:
   831                           
   832                           ; 1 bytes @ 0x16
   833  000017                     	ds	1
   834  000018                     pad@i:
   835                           	opt callstack 0
   836                           
   837                           ; 2 bytes @ 0x17
   838  000018                     	ds	2
   839  00001A                     pad@w:
   840                           	opt callstack 0
   841                           
   842                           ; 2 bytes @ 0x19
   843  00001A                     	ds	1
   844  00001B                     ___flmul@sign:
   845                           	opt callstack 0
   846                           
   847                           ; 1 bytes @ 0x1A
   848  00001B                     	ds	1
   849  00001C                     ___flmul@grs:
   850                           	opt callstack 0
   851                           
   852                           ; 4 bytes @ 0x1B
   853  00001C                     	ds	4
   854  000020                     ___flmul@aexp:
   855                           	opt callstack 0
   856                           
   857                           ; 1 bytes @ 0x1F
   858  000020                     	ds	1
   859  000021                     ___flmul@bexp:
   860                           	opt callstack 0
   861                           
   862                           ; 1 bytes @ 0x20
   863  000021                     	ds	1
   864  000022                     ___flmul@prod:
   865                           	opt callstack 0
   866                           
   867                           ; 4 bytes @ 0x21
   868  000022                     	ds	4
   869  000026                     ___flmul@temp:
   870                           	opt callstack 0
   871                           
   872                           ; 2 bytes @ 0x25
   873  000026                     	ds	2
   874  000028                     ?___fldiv:
   875                           	opt callstack 0
   876  000028                     ?___flsub:
   877                           	opt callstack 0
   878  000028                     ___flge@ff1:
   879                           	opt callstack 0
   880  000028                     ___flsub@b:
   881                           	opt callstack 0
   882  000028                     ___fldiv@b:
   883                           	opt callstack 0
   884                           
   885                           ; 4 bytes @ 0x27
   886  000028                     	ds	4
   887  00002C                     ___flge@ff2:
   888                           	opt callstack 0
   889  00002C                     ___flsub@a:
   890                           	opt callstack 0
   891  00002C                     ___fldiv@a:
   892                           	opt callstack 0
   893                           
   894                           ; 4 bytes @ 0x2B
   895  00002C                     	ds	4
   896  000030                     ??___fldiv:
   897  000030                     ??___flge:
   898                           
   899                           ; 1 bytes @ 0x2F
   900  000030                     	ds	4
   901  000034                     ___fldiv@rem:
   902                           	opt callstack 0
   903                           
   904                           ; 4 bytes @ 0x33
   905  000034                     	ds	4
   906  000038                     ___fldiv@sign:
   907                           	opt callstack 0
   908                           
   909                           ; 1 bytes @ 0x37
   910  000038                     	ds	1
   911  000039                     ___fldiv@new_exp:
   912                           	opt callstack 0
   913                           
   914                           ; 2 bytes @ 0x38
   915  000039                     	ds	2
   916  00003B                     ___fldiv@grs:
   917                           	opt callstack 0
   918                           
   919                           ; 4 bytes @ 0x3A
   920  00003B                     	ds	4
   921  00003F                     ___fldiv@bexp:
   922                           	opt callstack 0
   923                           
   924                           ; 1 bytes @ 0x3E
   925  00003F                     	ds	1
   926  000040                     ___fldiv@aexp:
   927                           	opt callstack 0
   928                           
   929                           ; 1 bytes @ 0x3F
   930  000040                     	ds	1
   931  000041                     ?_floorf:
   932                           	opt callstack 0
   933  000041                     floorf@x:
   934                           	opt callstack 0
   935                           
   936                           ; 4 bytes @ 0x40
   937  000041                     	ds	4
   938  000045                     ??_floorf:
   939                           
   940                           ; 1 bytes @ 0x44
   941  000045                     	ds	6
   942  00004B                     floorf@m:
   943                           	opt callstack 0
   944                           
   945                           ; 4 bytes @ 0x4A
   946  00004B                     	ds	4
   947  00004F                     floorf@e:
   948                           	opt callstack 0
   949                           
   950                           ; 2 bytes @ 0x4E
   951  00004F                     	ds	2
   952  000051                     floorf@u:
   953                           	opt callstack 0
   954                           
   955                           ; 4 bytes @ 0x50
   956  000051                     	ds	4
   957  000055                     ?_efgtoa:
   958                           	opt callstack 0
   959  000055                     efgtoa@fp:
   960                           	opt callstack 0
   961                           
   962                           ; 2 bytes @ 0x54
   963  000055                     	ds	2
   964  000057                     efgtoa@f:
   965                           	opt callstack 0
   966                           
   967                           ; 4 bytes @ 0x56
   968  000057                     	ds	4
   969  00005B                     efgtoa@c:
   970                           	opt callstack 0
   971                           
   972                           ; 1 bytes @ 0x5A
   973  00005B                     	ds	1
   974  00005C                     ??_vfpfcnvrt:
   975                           
   976                           ; 1 bytes @ 0x5B
   977  00005C                     	ds	4
   978  000060                     
   979                           ; 1 bytes @ 0x5F
   980 ;;
   981 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   982 ;;
   983 ;; *************** function _main *****************
   984 ;; Defined at:
   985 ;;		line 33 in file "Main_Program.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;		None
   988 ;; Auto vars:     Size  Location     Type
   989 ;;		None
   990 ;; Return value:  Size  Location     Type
   991 ;;                  1    wreg      void 
   992 ;; Registers used:
   993 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   999 ;;      Params:         0       0       0       0       0       0       0       0       0
  1000 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1001 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1002 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1003 ;;Total ram usage:        2 bytes
  1004 ;; Hardware stack levels required when called:    8
  1005 ;; This function calls:
  1006 ;;		_ADC_Init
  1007 ;;		_ADC_Read
  1008 ;;		_LCD_Init
  1009 ;;		_LCD_gotoXY
  1010 ;;		_Port_Init
  1011 ;;		_WriteCmdXLCD
  1012 ;;		___fldiv
  1013 ;;		___flmul
  1014 ;;		___xxtofl
  1015 ;;		_putrsXLCD
  1016 ;;		_sprintf
  1017 ;; This function is called by:
  1018 ;;		Startup code after reset
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           	psect	text0
  1023  001448                     __ptext0:
  1024                           	opt callstack 0
  1025  001448                     _main:
  1026                           	opt callstack 23
  1027  001448                     
  1028                           ;Main_Program.c: 34:     LCD_Init();
  1029  001448  ECB2  F01E         	call	_LCD_Init	;wreg free
  1030  00144C                     
  1031                           ;Main_Program.c: 35:     ADC_Init();
  1032  00144C  ECD9  F01E         	call	_ADC_Init	;wreg free
  1033  001450                     
  1034                           ;Main_Program.c: 36:     Port_Init();
  1035  001450  EC11  F01F         	call	_Port_Init	;wreg free
  1036                           
  1037                           ;Main_Program.c: 38:     LCD_gotoXY(0,0);
  1038  001454  0E00               	movlw	0
  1039  001456  6E03               	movwf	(LCD_gotoXY@x+1)^0,c
  1040  001458  0E00               	movlw	0
  1041  00145A  6E02               	movwf	LCD_gotoXY@x^0,c
  1042  00145C  0E00               	movlw	0
  1043  00145E  6E05               	movwf	(LCD_gotoXY@y+1)^0,c
  1044  001460  0E00               	movlw	0
  1045  001462  6E04               	movwf	LCD_gotoXY@y^0,c
  1046  001464  EC9A  F01E         	call	_LCD_gotoXY	;wreg free
  1047  001468                     
  1048                           ;Main_Program.c: 39:     putrsXLCD("** Canales ADC **");
  1049  001468  0E01               	movlw	low STR_1
  1050  00146A  6E02               	movwf	putrsXLCD@buffer^0,c
  1051  00146C  0E08               	movlw	high STR_1
  1052  00146E  6E03               	movwf	(putrsXLCD@buffer+1)^0,c
  1053  001470  EC10  F01C         	call	_putrsXLCD	;wreg free
  1054  001474                     
  1055                           ;Main_Program.c: 40:     _delay((unsigned long)((100)*(20000000L/4000.0)));
  1056  001474  0E03               	movlw	3
  1057  001476  0100               	movlb	0	; () banked
  1058  001478  6FCA               	movwf	(??_main+1)& (0+255),b
  1059  00147A  0E8A               	movlw	138
  1060  00147C  6FC9               	movwf	??_main& (0+255),b
  1061  00147E  0E55               	movlw	85
  1062  001480                     u5377:
  1063  001480  2EE8               	decfsz	wreg,f,c
  1064  001482  D7FE               	bra	u5377
  1065  001484  2FC9               	decfsz	??_main& (0+255),f,b
  1066  001486  D7FC               	bra	u5377
  1067  001488  2FCA               	decfsz	(??_main+1)& (0+255),f,b
  1068  00148A  D7FA               	bra	u5377
  1069  00148C  D000               	nop2	
  1070  00148E                     
  1071                           ;Main_Program.c: 41:     LCD_gotoXY(1,0);
  1072  00148E  0E00               	movlw	0
  1073  001490  6E03               	movwf	(LCD_gotoXY@x+1)^0,c
  1074  001492  0E01               	movlw	1
  1075  001494  6E02               	movwf	LCD_gotoXY@x^0,c
  1076  001496  0E00               	movlw	0
  1077  001498  6E05               	movwf	(LCD_gotoXY@y+1)^0,c
  1078  00149A  0E00               	movlw	0
  1079  00149C  6E04               	movwf	LCD_gotoXY@y^0,c
  1080  00149E  EC9A  F01E         	call	_LCD_gotoXY	;wreg free
  1081  0014A2                     
  1082                           ;Main_Program.c: 42:     putrsXLCD(" By: Fernando ");
  1083  0014A2  0E43               	movlw	low STR_2
  1084  0014A4  6E02               	movwf	putrsXLCD@buffer^0,c
  1085  0014A6  0E08               	movlw	high STR_2
  1086  0014A8  6E03               	movwf	(putrsXLCD@buffer+1)^0,c
  1087  0014AA  EC10  F01C         	call	_putrsXLCD	;wreg free
  1088                           
  1089                           ;Main_Program.c: 43:     _delay((unsigned long)((1500)*(20000000L/4000.0)));
  1090  0014AE  0E27               	movlw	39
  1091  0014B0  0100               	movlb	0	; () banked
  1092  0014B2  6FCA               	movwf	(??_main+1)& (0+255),b
  1093  0014B4  0E0D               	movlw	13
  1094  0014B6  6FC9               	movwf	??_main& (0+255),b
  1095  0014B8  0E26               	movlw	38
  1096  0014BA                     u5387:
  1097  0014BA  2EE8               	decfsz	wreg,f,c
  1098  0014BC  D7FE               	bra	u5387
  1099  0014BE  2FC9               	decfsz	??_main& (0+255),f,b
  1100  0014C0  D7FC               	bra	u5387
  1101  0014C2  2FCA               	decfsz	(??_main+1)& (0+255),f,b
  1102  0014C4  D7FA               	bra	u5387
  1103  0014C6  F000               	nop	
  1104  0014C8                     
  1105                           ;Main_Program.c: 44:     WriteCmdXLCD(0x01);
  1106  0014C8  0E01               	movlw	1
  1107  0014CA  EC0C  F01E         	call	_WriteCmdXLCD
  1108  0014CE                     l4599:
  1109                           
  1110                           ;Main_Program.c: 46:         LCD_gotoXY(0,0);
  1111  0014CE  0E00               	movlw	0
  1112  0014D0  6E03               	movwf	(LCD_gotoXY@x+1)^0,c
  1113  0014D2  0E00               	movlw	0
  1114  0014D4  6E02               	movwf	LCD_gotoXY@x^0,c
  1115  0014D6  0E00               	movlw	0
  1116  0014D8  6E05               	movwf	(LCD_gotoXY@y+1)^0,c
  1117  0014DA  0E00               	movlw	0
  1118  0014DC  6E04               	movwf	LCD_gotoXY@y^0,c
  1119  0014DE  EC9A  F01E         	call	_LCD_gotoXY	;wreg free
  1120  0014E2                     
  1121                           ;Main_Program.c: 47:         putrsXLCD("ADC_1 -> Puls1");
  1122  0014E2  0E52               	movlw	low STR_3
  1123  0014E4  6E02               	movwf	putrsXLCD@buffer^0,c
  1124  0014E6  0E08               	movlw	high STR_3
  1125  0014E8  6E03               	movwf	(putrsXLCD@buffer+1)^0,c
  1126  0014EA  EC10  F01C         	call	_putrsXLCD	;wreg free
  1127  0014EE                     
  1128                           ;Main_Program.c: 48:         _delay((unsigned long)((100)*(20000000L/4000.0)));
  1129  0014EE  0E03               	movlw	3
  1130  0014F0  0100               	movlb	0	; () banked
  1131  0014F2  6FCA               	movwf	(??_main+1)& (0+255),b
  1132  0014F4  0E8A               	movlw	138
  1133  0014F6  6FC9               	movwf	??_main& (0+255),b
  1134  0014F8  0E55               	movlw	85
  1135  0014FA                     u5397:
  1136  0014FA  2EE8               	decfsz	wreg,f,c
  1137  0014FC  D7FE               	bra	u5397
  1138  0014FE  2FC9               	decfsz	??_main& (0+255),f,b
  1139  001500  D7FC               	bra	u5397
  1140  001502  2FCA               	decfsz	(??_main+1)& (0+255),f,b
  1141  001504  D7FA               	bra	u5397
  1142  001506  D000               	nop2	
  1143  001508                     
  1144                           ;Main_Program.c: 49:         LCD_gotoXY(1,0);
  1145  001508  0E00               	movlw	0
  1146  00150A  6E03               	movwf	(LCD_gotoXY@x+1)^0,c
  1147  00150C  0E01               	movlw	1
  1148  00150E  6E02               	movwf	LCD_gotoXY@x^0,c
  1149  001510  0E00               	movlw	0
  1150  001512  6E05               	movwf	(LCD_gotoXY@y+1)^0,c
  1151  001514  0E00               	movlw	0
  1152  001516  6E04               	movwf	LCD_gotoXY@y^0,c
  1153  001518  EC9A  F01E         	call	_LCD_gotoXY	;wreg free
  1154  00151C                     
  1155                           ;Main_Program.c: 50:         putrsXLCD("ADC_2 -> Puls2");
  1156  00151C  0E61               	movlw	low STR_4
  1157  00151E  6E02               	movwf	putrsXLCD@buffer^0,c
  1158  001520  0E08               	movlw	high STR_4
  1159  001522  6E03               	movwf	(putrsXLCD@buffer+1)^0,c
  1160  001524  EC10  F01C         	call	_putrsXLCD	;wreg free
  1161  001528                     
  1162                           ;Main_Program.c: 51:         _delay((unsigned long)((100)*(20000000L/4000.0)));
  1163  001528  0E03               	movlw	3
  1164  00152A  0100               	movlb	0	; () banked
  1165  00152C  6FCA               	movwf	(??_main+1)& (0+255),b
  1166  00152E  0E8A               	movlw	138
  1167  001530  6FC9               	movwf	??_main& (0+255),b
  1168  001532  0E55               	movlw	85
  1169  001534                     u5407:
  1170  001534  2EE8               	decfsz	wreg,f,c
  1171  001536  D7FE               	bra	u5407
  1172  001538  2FC9               	decfsz	??_main& (0+255),f,b
  1173  00153A  D7FC               	bra	u5407
  1174  00153C  2FCA               	decfsz	(??_main+1)& (0+255),f,b
  1175  00153E  D7FA               	bra	u5407
  1176  001540  D000               	nop2	
  1177  001542                     
  1178                           ;Main_Program.c: 52:         WriteCmdXLCD(0x01);
  1179  001542  0E01               	movlw	1
  1180  001544  EC0C  F01E         	call	_WriteCmdXLCD
  1181  001548                     
  1182                           ;Main_Program.c: 53:         LCD_gotoXY(0,0);
  1183  001548  0E00               	movlw	0
  1184  00154A  6E03               	movwf	(LCD_gotoXY@x+1)^0,c
  1185  00154C  0E00               	movlw	0
  1186  00154E  6E02               	movwf	LCD_gotoXY@x^0,c
  1187  001550  0E00               	movlw	0
  1188  001552  6E05               	movwf	(LCD_gotoXY@y+1)^0,c
  1189  001554  0E00               	movlw	0
  1190  001556  6E04               	movwf	LCD_gotoXY@y^0,c
  1191  001558  EC9A  F01E         	call	_LCD_gotoXY	;wreg free
  1192  00155C                     
  1193                           ;Main_Program.c: 54:         putrsXLCD("ADC_3 -> Puls3");
  1194  00155C  0E70               	movlw	low STR_5
  1195  00155E  6E02               	movwf	putrsXLCD@buffer^0,c
  1196  001560  0E08               	movlw	high STR_5
  1197  001562  6E03               	movwf	(putrsXLCD@buffer+1)^0,c
  1198  001564  EC10  F01C         	call	_putrsXLCD	;wreg free
  1199  001568                     
  1200                           ;Main_Program.c: 55:         _delay((unsigned long)((100)*(20000000L/4000.0)));
  1201  001568  0E03               	movlw	3
  1202  00156A  0100               	movlb	0	; () banked
  1203  00156C  6FCA               	movwf	(??_main+1)& (0+255),b
  1204  00156E  0E8A               	movlw	138
  1205  001570  6FC9               	movwf	??_main& (0+255),b
  1206  001572  0E55               	movlw	85
  1207  001574                     u5417:
  1208  001574  2EE8               	decfsz	wreg,f,c
  1209  001576  D7FE               	bra	u5417
  1210  001578  2FC9               	decfsz	??_main& (0+255),f,b
  1211  00157A  D7FC               	bra	u5417
  1212  00157C  2FCA               	decfsz	(??_main+1)& (0+255),f,b
  1213  00157E  D7FA               	bra	u5417
  1214  001580  D000               	nop2	
  1215  001582                     
  1216                           ;Main_Program.c: 56:         WriteCmdXLCD(0x01);
  1217  001582  0E01               	movlw	1
  1218  001584  EC0C  F01E         	call	_WriteCmdXLCD
  1219  001588                     
  1220                           ;Main_Program.c: 59:         if(PORTBbits.RB0 == 0){
  1221  001588  B081               	btfsc	129,0,c	;volatile
  1222  00158A  EFC9  F00A         	goto	u5281
  1223  00158E  EFCB  F00A         	goto	u5280
  1224  001592                     u5281:
  1225  001592  EF67  F00B         	goto	l179
  1226  001596                     u5280:
  1227  001596                     l4623:
  1228                           
  1229                           ;Main_Program.c: 61:                 LCD_gotoXY(0,0);
  1230  001596  0E00               	movlw	0
  1231  001598  6E03               	movwf	(LCD_gotoXY@x+1)^0,c
  1232  00159A  0E00               	movlw	0
  1233  00159C  6E02               	movwf	LCD_gotoXY@x^0,c
  1234  00159E  0E00               	movlw	0
  1235  0015A0  6E05               	movwf	(LCD_gotoXY@y+1)^0,c
  1236  0015A2  0E00               	movlw	0
  1237  0015A4  6E04               	movwf	LCD_gotoXY@y^0,c
  1238  0015A6  EC9A  F01E         	call	_LCD_gotoXY	;wreg free
  1239  0015AA                     
  1240                           ;Main_Program.c: 62:                 putrsXLCD("Tension ADC_1: ");
  1241  0015AA  0E13               	movlw	low STR_6
  1242  0015AC  6E02               	movwf	putrsXLCD@buffer^0,c
  1243  0015AE  0E08               	movlw	high STR_6
  1244  0015B0  6E03               	movwf	(putrsXLCD@buffer+1)^0,c
  1245  0015B2  EC10  F01C         	call	_putrsXLCD	;wreg free
  1246  0015B6                     
  1247                           ;Main_Program.c: 63:                 _delay((unsigned long)((100)*(20000000L/4000.0)));
  1248  0015B6  0E03               	movlw	3
  1249  0015B8  0100               	movlb	0	; () banked
  1250  0015BA  6FCA               	movwf	(??_main+1)& (0+255),b
  1251  0015BC  0E8A               	movlw	138
  1252  0015BE  6FC9               	movwf	??_main& (0+255),b
  1253  0015C0  0E55               	movlw	85
  1254  0015C2                     u5427:
  1255  0015C2  2EE8               	decfsz	wreg,f,c
  1256  0015C4  D7FE               	bra	u5427
  1257  0015C6  2FC9               	decfsz	??_main& (0+255),f,b
  1258  0015C8  D7FC               	bra	u5427
  1259  0015CA  2FCA               	decfsz	(??_main+1)& (0+255),f,b
  1260  0015CC  D7FA               	bra	u5427
  1261  0015CE  D000               	nop2	
  1262  0015D0                     
  1263                           ;Main_Program.c: 64:                 valorLectura = ADC_Read(0);
  1264  0015D0  0E00               	movlw	0
  1265  0015D2  EC80  F01D         	call	_ADC_Read
  1266  0015D6  C001  F0DF         	movff	?_ADC_Read,_valorLectura
  1267  0015DA  C002  F0E0         	movff	?_ADC_Read+1,_valorLectura+1
  1268  0015DE                     
  1269                           ;Main_Program.c: 65:                 tension = (valorLectura*5.0)/1023;
  1270  0015DE  0E00               	movlw	0
  1271  0015E0  6E13               	movwf	___flmul@a^0,c
  1272  0015E2  0E00               	movlw	0
  1273  0015E4  6E14               	movwf	(___flmul@a+1)^0,c
  1274  0015E6  0EA0               	movlw	160
  1275  0015E8  6E15               	movwf	(___flmul@a+2)^0,c
  1276  0015EA  0E40               	movlw	64
  1277  0015EC  6E16               	movwf	(___flmul@a+3)^0,c
  1278  0015EE  C0DF  F001         	movff	_valorLectura,___xxtofl@val
  1279  0015F2  C0E0  F002         	movff	_valorLectura+1,___xxtofl@val+1
  1280  0015F6  6A03               	clrf	(___xxtofl@val+2)^0,c
  1281  0015F8  6A04               	clrf	(___xxtofl@val+3)^0,c
  1282  0015FA  0E00               	movlw	0
  1283  0015FC  EC33  F016         	call	___xxtofl
  1284  001600  C001  F00F         	movff	?___xxtofl,___flmul@b
  1285  001604  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1286  001608  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1287  00160C  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1288  001610  EC48  F011         	call	___flmul	;wreg free
  1289  001614  C00F  F028         	movff	?___flmul,___fldiv@b
  1290  001618  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  1291  00161C  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  1292  001620  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  1293  001624  0E00               	movlw	0
  1294  001626  6E2C               	movwf	___fldiv@a^0,c
  1295  001628  0EC0               	movlw	192
  1296  00162A  6E2D               	movwf	(___fldiv@a+1)^0,c
  1297  00162C  0E7F               	movlw	127
  1298  00162E  6E2E               	movwf	(___fldiv@a+2)^0,c
  1299  001630  0E44               	movlw	68
  1300  001632  6E2F               	movwf	(___fldiv@a+3)^0,c
  1301  001634  EC5D  F013         	call	___fldiv	;wreg free
  1302  001638  C028  F0D3         	movff	?___fldiv,_tension
  1303  00163C  C029  F0D4         	movff	?___fldiv+1,_tension+1
  1304  001640  C02A  F0D5         	movff	?___fldiv+2,_tension+2
  1305  001644  C02B  F0D6         	movff	?___fldiv+3,_tension+3
  1306  001648                     
  1307                           ;Main_Program.c: 66:                 LCD_gotoXY(1,12);
  1308  001648  0E00               	movlw	0
  1309  00164A  6E03               	movwf	(LCD_gotoXY@x+1)^0,c
  1310  00164C  0E01               	movlw	1
  1311  00164E  6E02               	movwf	LCD_gotoXY@x^0,c
  1312  001650  0E00               	movlw	0
  1313  001652  6E05               	movwf	(LCD_gotoXY@y+1)^0,c
  1314  001654  0E0C               	movlw	12
  1315  001656  6E04               	movwf	LCD_gotoXY@y^0,c
  1316  001658  EC9A  F01E         	call	_LCD_gotoXY	;wreg free
  1317  00165C                     
  1318                           ;Main_Program.c: 67:                 sprintf(datos,"%.2f",tension);
  1319  00165C  0EE1               	movlw	low _datos
  1320  00165E  0100               	movlb	0	; () banked
  1321  001660  6FB7               	movwf	sprintf@s& (0+255),b
  1322  001662  0E00               	movlw	high _datos
  1323  001664  6FB8               	movwf	(sprintf@s+1)& (0+255),b
  1324  001666  0E7F               	movlw	low STR_7
  1325  001668  6FB9               	movwf	sprintf@fmt& (0+255),b
  1326  00166A  0E08               	movlw	high STR_7
  1327  00166C  6FBA               	movwf	(sprintf@fmt+1)& (0+255),b
  1328  00166E  C0D3  F0BB         	movff	_tension,?_sprintf+4
  1329  001672  C0D4  F0BC         	movff	_tension+1,?_sprintf+5
  1330  001676  C0D5  F0BD         	movff	_tension+2,?_sprintf+6
  1331  00167A  C0D6  F0BE         	movff	_tension+3,?_sprintf+7
  1332  00167E  EC05  F01D         	call	_sprintf	;wreg free
  1333  001682                     
  1334                           ;Main_Program.c: 68:                 putrsXLCD(datos);
  1335  001682  0EE1               	movlw	low _datos
  1336  001684  6E02               	movwf	putrsXLCD@buffer^0,c
  1337  001686  0E00               	movlw	high _datos
  1338  001688  6E03               	movwf	(putrsXLCD@buffer+1)^0,c
  1339  00168A  EC10  F01C         	call	_putrsXLCD	;wreg free
  1340  00168E                     
  1341                           ;Main_Program.c: 69:                 _delay((unsigned long)((100)*(20000000L/4000.0)));
  1342  00168E  0E03               	movlw	3
  1343  001690  0100               	movlb	0	; () banked
  1344  001692  6FCA               	movwf	(??_main+1)& (0+255),b
  1345  001694  0E8A               	movlw	138
  1346  001696  6FC9               	movwf	??_main& (0+255),b
  1347  001698  0E55               	movlw	85
  1348  00169A                     u5437:
  1349  00169A  2EE8               	decfsz	wreg,f,c
  1350  00169C  D7FE               	bra	u5437
  1351  00169E  2FC9               	decfsz	??_main& (0+255),f,b
  1352  0016A0  D7FC               	bra	u5437
  1353  0016A2  2FCA               	decfsz	(??_main+1)& (0+255),f,b
  1354  0016A4  D7FA               	bra	u5437
  1355  0016A6  D000               	nop2	
  1356  0016A8                     
  1357                           ;Main_Program.c: 70:                 if(PORTBbits.RB1 == 0 || PORTBbits.RB2 == 0){
  1358  0016A8  A281               	btfss	129,1,c	;volatile
  1359  0016AA  EF59  F00B         	goto	u5291
  1360  0016AE  EF5B  F00B         	goto	u5290
  1361  0016B2                     u5291:
  1362  0016B2  EF62  F00B         	goto	l4645
  1363  0016B6                     u5290:
  1364  0016B6  B481               	btfsc	129,2,c	;volatile
  1365  0016B8  EF60  F00B         	goto	u5301
  1366  0016BC  EF62  F00B         	goto	u5300
  1367  0016C0                     u5301:
  1368  0016C0  EFCB  F00A         	goto	l4623
  1369  0016C4                     u5300:
  1370  0016C4                     l4645:
  1371                           
  1372                           ;Main_Program.c: 71:                     WriteCmdXLCD(0x01);
  1373  0016C4  0E01               	movlw	1
  1374  0016C6  EC0C  F01E         	call	_WriteCmdXLCD
  1375                           
  1376                           ;Main_Program.c: 72:                     break;
  1377  0016CA  EF67  F00A         	goto	l4599
  1378  0016CE                     l179:
  1379  0016CE  B281               	btfsc	129,1,c	;volatile
  1380  0016D0  EF6C  F00B         	goto	u5311
  1381  0016D4  EF6E  F00B         	goto	u5310
  1382  0016D8                     u5311:
  1383  0016D8  EF0A  F00C         	goto	l187
  1384  0016DC                     u5310:
  1385  0016DC                     l4647:
  1386                           
  1387                           ;Main_Program.c: 77:                 LCD_gotoXY(0,0);
  1388  0016DC  0E00               	movlw	0
  1389  0016DE  6E03               	movwf	(LCD_gotoXY@x+1)^0,c
  1390  0016E0  0E00               	movlw	0
  1391  0016E2  6E02               	movwf	LCD_gotoXY@x^0,c
  1392  0016E4  0E00               	movlw	0
  1393  0016E6  6E05               	movwf	(LCD_gotoXY@y+1)^0,c
  1394  0016E8  0E00               	movlw	0
  1395  0016EA  6E04               	movwf	LCD_gotoXY@y^0,c
  1396  0016EC  EC9A  F01E         	call	_LCD_gotoXY	;wreg free
  1397  0016F0                     
  1398                           ;Main_Program.c: 78:                 putrsXLCD("Tension ADC_2: ");
  1399  0016F0  0E23               	movlw	low STR_8
  1400  0016F2  6E02               	movwf	putrsXLCD@buffer^0,c
  1401  0016F4  0E08               	movlw	high STR_8
  1402  0016F6  6E03               	movwf	(putrsXLCD@buffer+1)^0,c
  1403  0016F8  EC10  F01C         	call	_putrsXLCD	;wreg free
  1404  0016FC                     
  1405                           ;Main_Program.c: 79:                 _delay((unsigned long)((100)*(20000000L/4000.0)));
  1406  0016FC  0E03               	movlw	3
  1407  0016FE  0100               	movlb	0	; () banked
  1408  001700  6FCA               	movwf	(??_main+1)& (0+255),b
  1409  001702  0E8A               	movlw	138
  1410  001704  6FC9               	movwf	??_main& (0+255),b
  1411  001706  0E55               	movlw	85
  1412  001708                     u5447:
  1413  001708  2EE8               	decfsz	wreg,f,c
  1414  00170A  D7FE               	bra	u5447
  1415  00170C  2FC9               	decfsz	??_main& (0+255),f,b
  1416  00170E  D7FC               	bra	u5447
  1417  001710  2FCA               	decfsz	(??_main+1)& (0+255),f,b
  1418  001712  D7FA               	bra	u5447
  1419  001714  D000               	nop2	
  1420  001716                     
  1421                           ;Main_Program.c: 80:                 valorLectura = ADC_Read(1);
  1422  001716  0E01               	movlw	1
  1423  001718  EC80  F01D         	call	_ADC_Read
  1424  00171C  C001  F0DF         	movff	?_ADC_Read,_valorLectura
  1425  001720  C002  F0E0         	movff	?_ADC_Read+1,_valorLectura+1
  1426  001724                     
  1427                           ;Main_Program.c: 81:                 tension = (valorLectura*5.0)/1023;
  1428  001724  0E00               	movlw	0
  1429  001726  6E13               	movwf	___flmul@a^0,c
  1430  001728  0E00               	movlw	0
  1431  00172A  6E14               	movwf	(___flmul@a+1)^0,c
  1432  00172C  0EA0               	movlw	160
  1433  00172E  6E15               	movwf	(___flmul@a+2)^0,c
  1434  001730  0E40               	movlw	64
  1435  001732  6E16               	movwf	(___flmul@a+3)^0,c
  1436  001734  C0DF  F001         	movff	_valorLectura,___xxtofl@val
  1437  001738  C0E0  F002         	movff	_valorLectura+1,___xxtofl@val+1
  1438  00173C  6A03               	clrf	(___xxtofl@val+2)^0,c
  1439  00173E  6A04               	clrf	(___xxtofl@val+3)^0,c
  1440  001740  0E00               	movlw	0
  1441  001742  EC33  F016         	call	___xxtofl
  1442  001746  C001  F00F         	movff	?___xxtofl,___flmul@b
  1443  00174A  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1444  00174E  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1445  001752  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1446  001756  EC48  F011         	call	___flmul	;wreg free
  1447  00175A  C00F  F028         	movff	?___flmul,___fldiv@b
  1448  00175E  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  1449  001762  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  1450  001766  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  1451  00176A  0E00               	movlw	0
  1452  00176C  6E2C               	movwf	___fldiv@a^0,c
  1453  00176E  0EC0               	movlw	192
  1454  001770  6E2D               	movwf	(___fldiv@a+1)^0,c
  1455  001772  0E7F               	movlw	127
  1456  001774  6E2E               	movwf	(___fldiv@a+2)^0,c
  1457  001776  0E44               	movlw	68
  1458  001778  6E2F               	movwf	(___fldiv@a+3)^0,c
  1459  00177A  EC5D  F013         	call	___fldiv	;wreg free
  1460  00177E  C028  F0D3         	movff	?___fldiv,_tension
  1461  001782  C029  F0D4         	movff	?___fldiv+1,_tension+1
  1462  001786  C02A  F0D5         	movff	?___fldiv+2,_tension+2
  1463  00178A  C02B  F0D6         	movff	?___fldiv+3,_tension+3
  1464  00178E                     
  1465                           ;Main_Program.c: 82:                 LCD_gotoXY(1,12);
  1466  00178E  0E00               	movlw	0
  1467  001790  6E03               	movwf	(LCD_gotoXY@x+1)^0,c
  1468  001792  0E01               	movlw	1
  1469  001794  6E02               	movwf	LCD_gotoXY@x^0,c
  1470  001796  0E00               	movlw	0
  1471  001798  6E05               	movwf	(LCD_gotoXY@y+1)^0,c
  1472  00179A  0E0C               	movlw	12
  1473  00179C  6E04               	movwf	LCD_gotoXY@y^0,c
  1474  00179E  EC9A  F01E         	call	_LCD_gotoXY	;wreg free
  1475  0017A2                     
  1476                           ;Main_Program.c: 83:                 sprintf(datos,"%.2f",tension);
  1477  0017A2  0EE1               	movlw	low _datos
  1478  0017A4  0100               	movlb	0	; () banked
  1479  0017A6  6FB7               	movwf	sprintf@s& (0+255),b
  1480  0017A8  0E00               	movlw	high _datos
  1481  0017AA  6FB8               	movwf	(sprintf@s+1)& (0+255),b
  1482  0017AC  0E7F               	movlw	low STR_7
  1483  0017AE  6FB9               	movwf	sprintf@fmt& (0+255),b
  1484  0017B0  0E08               	movlw	high STR_7
  1485  0017B2  6FBA               	movwf	(sprintf@fmt+1)& (0+255),b
  1486  0017B4  C0D3  F0BB         	movff	_tension,?_sprintf+4
  1487  0017B8  C0D4  F0BC         	movff	_tension+1,?_sprintf+5
  1488  0017BC  C0D5  F0BD         	movff	_tension+2,?_sprintf+6
  1489  0017C0  C0D6  F0BE         	movff	_tension+3,?_sprintf+7
  1490  0017C4  EC05  F01D         	call	_sprintf	;wreg free
  1491  0017C8                     
  1492                           ;Main_Program.c: 84:                 putrsXLCD(datos);
  1493  0017C8  0EE1               	movlw	low _datos
  1494  0017CA  6E02               	movwf	putrsXLCD@buffer^0,c
  1495  0017CC  0E00               	movlw	high _datos
  1496  0017CE  6E03               	movwf	(putrsXLCD@buffer+1)^0,c
  1497  0017D0  EC10  F01C         	call	_putrsXLCD	;wreg free
  1498  0017D4                     
  1499                           ;Main_Program.c: 85:                 _delay((unsigned long)((100)*(20000000L/4000.0)));
  1500  0017D4  0E03               	movlw	3
  1501  0017D6  0100               	movlb	0	; () banked
  1502  0017D8  6FCA               	movwf	(??_main+1)& (0+255),b
  1503  0017DA  0E8A               	movlw	138
  1504  0017DC  6FC9               	movwf	??_main& (0+255),b
  1505  0017DE  0E55               	movlw	85
  1506  0017E0                     u5457:
  1507  0017E0  2EE8               	decfsz	wreg,f,c
  1508  0017E2  D7FE               	bra	u5457
  1509  0017E4  2FC9               	decfsz	??_main& (0+255),f,b
  1510  0017E6  D7FC               	bra	u5457
  1511  0017E8  2FCA               	decfsz	(??_main+1)& (0+255),f,b
  1512  0017EA  D7FA               	bra	u5457
  1513  0017EC  D000               	nop2	
  1514  0017EE                     
  1515                           ;Main_Program.c: 86:                 if(PORTBbits.RB0 == 0 || PORTBbits.RB2 == 0){
  1516  0017EE  A081               	btfss	129,0,c	;volatile
  1517  0017F0  EFFC  F00B         	goto	u5321
  1518  0017F4  EFFE  F00B         	goto	u5320
  1519  0017F8                     u5321:
  1520  0017F8  EF05  F00C         	goto	l4669
  1521  0017FC                     u5320:
  1522  0017FC  B481               	btfsc	129,2,c	;volatile
  1523  0017FE  EF03  F00C         	goto	u5331
  1524  001802  EF05  F00C         	goto	u5330
  1525  001806                     u5331:
  1526  001806  EF6E  F00B         	goto	l4647
  1527  00180A                     u5330:
  1528  00180A                     l4669:
  1529                           
  1530                           ;Main_Program.c: 87:                     WriteCmdXLCD(0x01);
  1531  00180A  0E01               	movlw	1
  1532  00180C  EC0C  F01E         	call	_WriteCmdXLCD
  1533                           
  1534                           ;Main_Program.c: 88:                     break;
  1535  001810  EF67  F00A         	goto	l4599
  1536  001814                     l187:
  1537  001814  B481               	btfsc	129,2,c	;volatile
  1538  001816  EF0F  F00C         	goto	u5341
  1539  00181A  EF11  F00C         	goto	u5340
  1540  00181E                     u5341:
  1541  00181E  EFAD  F00C         	goto	l186
  1542  001822                     u5340:
  1543  001822                     l4671:
  1544                           
  1545                           ;Main_Program.c: 93:                 LCD_gotoXY(0,0);
  1546  001822  0E00               	movlw	0
  1547  001824  6E03               	movwf	(LCD_gotoXY@x+1)^0,c
  1548  001826  0E00               	movlw	0
  1549  001828  6E02               	movwf	LCD_gotoXY@x^0,c
  1550  00182A  0E00               	movlw	0
  1551  00182C  6E05               	movwf	(LCD_gotoXY@y+1)^0,c
  1552  00182E  0E00               	movlw	0
  1553  001830  6E04               	movwf	LCD_gotoXY@y^0,c
  1554  001832  EC9A  F01E         	call	_LCD_gotoXY	;wreg free
  1555  001836                     
  1556                           ;Main_Program.c: 94:                 putrsXLCD("Tension ADC_3: ");
  1557  001836  0E33               	movlw	low STR_10
  1558  001838  6E02               	movwf	putrsXLCD@buffer^0,c
  1559  00183A  0E08               	movlw	high STR_10
  1560  00183C  6E03               	movwf	(putrsXLCD@buffer+1)^0,c
  1561  00183E  EC10  F01C         	call	_putrsXLCD	;wreg free
  1562  001842                     
  1563                           ;Main_Program.c: 95:                 _delay((unsigned long)((100)*(20000000L/4000.0)));
  1564  001842  0E03               	movlw	3
  1565  001844  0100               	movlb	0	; () banked
  1566  001846  6FCA               	movwf	(??_main+1)& (0+255),b
  1567  001848  0E8A               	movlw	138
  1568  00184A  6FC9               	movwf	??_main& (0+255),b
  1569  00184C  0E55               	movlw	85
  1570  00184E                     u5467:
  1571  00184E  2EE8               	decfsz	wreg,f,c
  1572  001850  D7FE               	bra	u5467
  1573  001852  2FC9               	decfsz	??_main& (0+255),f,b
  1574  001854  D7FC               	bra	u5467
  1575  001856  2FCA               	decfsz	(??_main+1)& (0+255),f,b
  1576  001858  D7FA               	bra	u5467
  1577  00185A  D000               	nop2	
  1578  00185C                     
  1579                           ;Main_Program.c: 96:                 valorLectura = ADC_Read(2);
  1580  00185C  0E02               	movlw	2
  1581  00185E  EC80  F01D         	call	_ADC_Read
  1582  001862  C001  F0DF         	movff	?_ADC_Read,_valorLectura
  1583  001866  C002  F0E0         	movff	?_ADC_Read+1,_valorLectura+1
  1584  00186A                     
  1585                           ;Main_Program.c: 97:                 tension = (valorLectura*5.0)/1023;
  1586  00186A  0E00               	movlw	0
  1587  00186C  6E13               	movwf	___flmul@a^0,c
  1588  00186E  0E00               	movlw	0
  1589  001870  6E14               	movwf	(___flmul@a+1)^0,c
  1590  001872  0EA0               	movlw	160
  1591  001874  6E15               	movwf	(___flmul@a+2)^0,c
  1592  001876  0E40               	movlw	64
  1593  001878  6E16               	movwf	(___flmul@a+3)^0,c
  1594  00187A  C0DF  F001         	movff	_valorLectura,___xxtofl@val
  1595  00187E  C0E0  F002         	movff	_valorLectura+1,___xxtofl@val+1
  1596  001882  6A03               	clrf	(___xxtofl@val+2)^0,c
  1597  001884  6A04               	clrf	(___xxtofl@val+3)^0,c
  1598  001886  0E00               	movlw	0
  1599  001888  EC33  F016         	call	___xxtofl
  1600  00188C  C001  F00F         	movff	?___xxtofl,___flmul@b
  1601  001890  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1602  001894  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1603  001898  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1604  00189C  EC48  F011         	call	___flmul	;wreg free
  1605  0018A0  C00F  F028         	movff	?___flmul,___fldiv@b
  1606  0018A4  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  1607  0018A8  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  1608  0018AC  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  1609  0018B0  0E00               	movlw	0
  1610  0018B2  6E2C               	movwf	___fldiv@a^0,c
  1611  0018B4  0EC0               	movlw	192
  1612  0018B6  6E2D               	movwf	(___fldiv@a+1)^0,c
  1613  0018B8  0E7F               	movlw	127
  1614  0018BA  6E2E               	movwf	(___fldiv@a+2)^0,c
  1615  0018BC  0E44               	movlw	68
  1616  0018BE  6E2F               	movwf	(___fldiv@a+3)^0,c
  1617  0018C0  EC5D  F013         	call	___fldiv	;wreg free
  1618  0018C4  C028  F0D3         	movff	?___fldiv,_tension
  1619  0018C8  C029  F0D4         	movff	?___fldiv+1,_tension+1
  1620  0018CC  C02A  F0D5         	movff	?___fldiv+2,_tension+2
  1621  0018D0  C02B  F0D6         	movff	?___fldiv+3,_tension+3
  1622  0018D4                     
  1623                           ;Main_Program.c: 98:                 LCD_gotoXY(1,12);
  1624  0018D4  0E00               	movlw	0
  1625  0018D6  6E03               	movwf	(LCD_gotoXY@x+1)^0,c
  1626  0018D8  0E01               	movlw	1
  1627  0018DA  6E02               	movwf	LCD_gotoXY@x^0,c
  1628  0018DC  0E00               	movlw	0
  1629  0018DE  6E05               	movwf	(LCD_gotoXY@y+1)^0,c
  1630  0018E0  0E0C               	movlw	12
  1631  0018E2  6E04               	movwf	LCD_gotoXY@y^0,c
  1632  0018E4  EC9A  F01E         	call	_LCD_gotoXY	;wreg free
  1633  0018E8                     
  1634                           ;Main_Program.c: 99:                 sprintf(datos,"%.2f",tension);
  1635  0018E8  0EE1               	movlw	low _datos
  1636  0018EA  0100               	movlb	0	; () banked
  1637  0018EC  6FB7               	movwf	sprintf@s& (0+255),b
  1638  0018EE  0E00               	movlw	high _datos
  1639  0018F0  6FB8               	movwf	(sprintf@s+1)& (0+255),b
  1640  0018F2  0E7F               	movlw	low STR_7
  1641  0018F4  6FB9               	movwf	sprintf@fmt& (0+255),b
  1642  0018F6  0E08               	movlw	high STR_7
  1643  0018F8  6FBA               	movwf	(sprintf@fmt+1)& (0+255),b
  1644  0018FA  C0D3  F0BB         	movff	_tension,?_sprintf+4
  1645  0018FE  C0D4  F0BC         	movff	_tension+1,?_sprintf+5
  1646  001902  C0D5  F0BD         	movff	_tension+2,?_sprintf+6
  1647  001906  C0D6  F0BE         	movff	_tension+3,?_sprintf+7
  1648  00190A  EC05  F01D         	call	_sprintf	;wreg free
  1649  00190E                     
  1650                           ;Main_Program.c: 100:                 putrsXLCD(datos);
  1651  00190E  0EE1               	movlw	low _datos
  1652  001910  6E02               	movwf	putrsXLCD@buffer^0,c
  1653  001912  0E00               	movlw	high _datos
  1654  001914  6E03               	movwf	(putrsXLCD@buffer+1)^0,c
  1655  001916  EC10  F01C         	call	_putrsXLCD	;wreg free
  1656  00191A                     
  1657                           ;Main_Program.c: 101:                 _delay((unsigned long)((100)*(20000000L/4000.0)));
  1658  00191A  0E03               	movlw	3
  1659  00191C  0100               	movlb	0	; () banked
  1660  00191E  6FCA               	movwf	(??_main+1)& (0+255),b
  1661  001920  0E8A               	movlw	138
  1662  001922  6FC9               	movwf	??_main& (0+255),b
  1663  001924  0E55               	movlw	85
  1664  001926                     u5477:
  1665  001926  2EE8               	decfsz	wreg,f,c
  1666  001928  D7FE               	bra	u5477
  1667  00192A  2FC9               	decfsz	??_main& (0+255),f,b
  1668  00192C  D7FC               	bra	u5477
  1669  00192E  2FCA               	decfsz	(??_main+1)& (0+255),f,b
  1670  001930  D7FA               	bra	u5477
  1671  001932  D000               	nop2	
  1672  001934                     
  1673                           ;Main_Program.c: 102:                 if(PORTBbits.RB1 == 0 || PORTBbits.RB0 == 0){
  1674  001934  A281               	btfss	129,1,c	;volatile
  1675  001936  EF9F  F00C         	goto	u5351
  1676  00193A  EFA1  F00C         	goto	u5350
  1677  00193E                     u5351:
  1678  00193E  EFA8  F00C         	goto	l4693
  1679  001942                     u5350:
  1680  001942  B081               	btfsc	129,0,c	;volatile
  1681  001944  EFA6  F00C         	goto	u5361
  1682  001948  EFA8  F00C         	goto	u5360
  1683  00194C                     u5361:
  1684  00194C  EF11  F00C         	goto	l4671
  1685  001950                     u5360:
  1686  001950                     l4693:
  1687                           
  1688                           ;Main_Program.c: 103:                     WriteCmdXLCD(0x01);
  1689  001950  0E01               	movlw	1
  1690  001952  EC0C  F01E         	call	_WriteCmdXLCD
  1691                           
  1692                           ;Main_Program.c: 104:                     break;
  1693  001956  EF67  F00A         	goto	l4599
  1694  00195A                     l186:
  1695  00195A  EF67  F00A         	goto	l4599
  1696  00195E  EF00  F000         	goto	start
  1697  001962                     __end_of_main:
  1698                           	opt callstack 0
  1699                           
  1700 ;; *************** function _sprintf *****************
  1701 ;; Defined at:
  1702 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;  s               2   87[BANK0 ] PTR unsigned char 
  1705 ;;		 -> datos(20), 
  1706 ;;  fmt             2   89[BANK0 ] PTR const unsigned char 
  1707 ;;		 -> STR_11(5), STR_9(5), STR_7(5), 
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;  f               6   99[BANK0 ] struct _IO_FILE
  1710 ;;  ap              2   97[BANK0 ] PTR void [1]
  1711 ;;		 -> ?_sprintf(2), 
  1712 ;;  ret             2    0        int 
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  2   87[BANK0 ] int 
  1715 ;; Registers used:
  1716 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1722 ;;      Params:         0       8       0       0       0       0       0       0       0
  1723 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1724 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1725 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1726 ;;Total ram usage:       18 bytes
  1727 ;; Hardware stack levels used:    1
  1728 ;; Hardware stack levels required when called:    7
  1729 ;; This function calls:
  1730 ;;		_vfprintf
  1731 ;; This function is called by:
  1732 ;;		_main
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           	psect	text1
  1737  003A0A                     __ptext1:
  1738                           	opt callstack 0
  1739  003A0A                     _sprintf:
  1740                           	opt callstack 23
  1741  003A0A  0EBB               	movlw	low (?_sprintf+4)
  1742  003A0C  0100               	movlb	0	; () banked
  1743  003A0E  6FC1               	movwf	sprintf@ap& (0+255),b
  1744  003A10  0E00               	movlw	high (?_sprintf+4)
  1745  003A12  6FC2               	movwf	(sprintf@ap+1)& (0+255),b
  1746  003A14  C0B7  F0C3         	movff	sprintf@s,sprintf@f
  1747  003A18  C0B8  F0C4         	movff	sprintf@s+1,sprintf@f+1
  1748  003A1C                     
  1749                           ; BSR set to: 0
  1750  003A1C  0E00               	movlw	0
  1751  003A1E  6FC6               	movwf	(sprintf@f+3)& (0+255),b
  1752  003A20  0E00               	movlw	0
  1753  003A22  6FC5               	movwf	(sprintf@f+2)& (0+255),b
  1754  003A24                     
  1755                           ; BSR set to: 0
  1756  003A24  0E00               	movlw	0
  1757  003A26  6FC8               	movwf	(sprintf@f+5)& (0+255),b
  1758  003A28  0E00               	movlw	0
  1759  003A2A  6FC7               	movwf	(sprintf@f+4)& (0+255),b
  1760  003A2C                     
  1761                           ; BSR set to: 0
  1762  003A2C  0EC3               	movlw	low sprintf@f
  1763  003A2E  6FAF               	movwf	vfprintf@fp& (0+255),b
  1764  003A30  0E00               	movlw	high sprintf@f
  1765  003A32  6FB0               	movwf	(vfprintf@fp+1)& (0+255),b
  1766  003A34  C0B9  F0B1         	movff	sprintf@fmt,vfprintf@fmt
  1767  003A38  C0BA  F0B2         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1768  003A3C  0EC1               	movlw	low sprintf@ap
  1769  003A3E  6FB3               	movwf	vfprintf@ap& (0+255),b
  1770  003A40  0E00               	movlw	high sprintf@ap
  1771  003A42  6FB4               	movwf	(vfprintf@ap+1)& (0+255),b
  1772  003A44  EC49  F01C         	call	_vfprintf	;wreg free
  1773  003A48  0100               	movlb	0	; () banked
  1774  003A4A  51C5               	movf	(sprintf@f+2)& (0+255),w,b
  1775  003A4C  25B7               	addwf	sprintf@s& (0+255),w,b
  1776  003A4E  6ED9               	movwf	fsr2l,c
  1777  003A50  51C6               	movf	(sprintf@f+3)& (0+255),w,b
  1778  003A52  21B8               	addwfc	(sprintf@s+1)& (0+255),w,b
  1779  003A54  6EDA               	movwf	fsr2h,c
  1780  003A56  0E00               	movlw	0
  1781  003A58  6EDF               	movwf	indf2,c
  1782  003A5A                     
  1783                           ; BSR set to: 0
  1784  003A5A  0012               	return		;funcret
  1785  003A5C                     __end_of_sprintf:
  1786                           	opt callstack 0
  1787                           
  1788 ;; *************** function _vfprintf *****************
  1789 ;; Defined at:
  1790 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;  fp              2   79[BANK0 ] PTR struct _IO_FILE
  1793 ;;		 -> sprintf@f(6), 
  1794 ;;  fmt             2   81[BANK0 ] PTR const unsigned char 
  1795 ;;		 -> STR_11(5), STR_9(5), STR_7(5), 
  1796 ;;  ap              2   83[BANK0 ] PTR PTR void 
  1797 ;;		 -> sprintf@ap(2), 
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;  cfmt            2   85[BANK0 ] PTR unsigned char 
  1800 ;;		 -> STR_11(5), STR_9(5), STR_7(5), 
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  2   79[BANK0 ] int 
  1803 ;; Registers used:
  1804 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1810 ;;      Params:         0       6       0       0       0       0       0       0       0
  1811 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1812 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1813 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1814 ;;Total ram usage:        8 bytes
  1815 ;; Hardware stack levels used:    1
  1816 ;; Hardware stack levels required when called:    6
  1817 ;; This function calls:
  1818 ;;		_vfpfcnvrt
  1819 ;; This function is called by:
  1820 ;;		_sprintf
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           	psect	text2
  1825  003892                     __ptext2:
  1826                           	opt callstack 0
  1827  003892                     _vfprintf:
  1828                           	opt callstack 23
  1829  003892                     
  1830                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1831  003892  C0B1  F0B5         	movff	vfprintf@fmt,vfprintf@cfmt
  1832  003896  C0B2  F0B6         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1833  00389A                     
  1834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1835  00389A  0E00               	movlw	0
  1836  00389C  0100               	movlb	0	; () banked
  1837  00389E  6FD8               	movwf	(_nout+1)& (0+255),b
  1838  0038A0  0E00               	movlw	0
  1839  0038A2  6FD7               	movwf	_nout& (0+255),b
  1840                           
  1841                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1842  0038A4  EF67  F01C         	goto	l4371
  1843  0038A8                     l4369:
  1844                           
  1845                           ; BSR set to: 0
  1846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1847  0038A8  C0AF  F09D         	movff	vfprintf@fp,vfpfcnvrt@fp
  1848  0038AC  C0B0  F09E         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1849  0038B0  0EB5               	movlw	low vfprintf@cfmt
  1850  0038B2  6F9F               	movwf	vfpfcnvrt@fmt& (0+255),b
  1851  0038B4  0E00               	movlw	high vfprintf@cfmt
  1852  0038B6  6FA0               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1853  0038B8  C0B3  F0A1         	movff	vfprintf@ap,vfpfcnvrt@ap
  1854  0038BC  C0B4  F0A2         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1855  0038C0  EC11  F00F         	call	_vfpfcnvrt	;wreg free
  1856  0038C4  0100               	movlb	0	; () banked
  1857  0038C6  519D               	movf	?_vfpfcnvrt& (0+255),w,b
  1858  0038C8  27D7               	addwf	_nout& (0+255),f,b
  1859  0038CA  519E               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1860  0038CC  23D8               	addwfc	(_nout+1)& (0+255),f,b
  1861  0038CE                     l4371:
  1862                           
  1863                           ; BSR set to: 0
  1864                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1865  0038CE  C0B5  FFF6         	movff	vfprintf@cfmt,tblptrl
  1866  0038D2  C0B6  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1867  0038D6                     	if	0	;tblptru may be non-zero
  1868  0038D6                     	endif
  1869  0038D6                     	if	0	;tblptru may be non-zero
  1870  0038D6                     	endif
  1871  0038D6  0008               	tblrd		*
  1872  0038D8  50F5               	movf	tablat,w,c
  1873  0038DA  0900               	iorlw	0
  1874  0038DC  A4D8               	btfss	status,2,c
  1875  0038DE  EF73  F01C         	goto	u5041
  1876  0038E2  EF75  F01C         	goto	u5040
  1877  0038E6                     u5041:
  1878  0038E6  EF54  F01C         	goto	l4369
  1879  0038EA                     u5040:
  1880  0038EA                     
  1881                           ; BSR set to: 0
  1882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1883  0038EA  C0D7  F0AF         	movff	_nout,?_vfprintf
  1884  0038EE  C0D8  F0B0         	movff	_nout+1,?_vfprintf+1
  1885  0038F2                     
  1886                           ; BSR set to: 0
  1887  0038F2  0012               	return		;funcret
  1888  0038F4                     __end_of_vfprintf:
  1889                           	opt callstack 0
  1890                           
  1891 ;; *************** function _vfpfcnvrt *****************
  1892 ;; Defined at:
  1893 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  fp              2   61[BANK0 ] PTR struct _IO_FILE
  1896 ;;		 -> sprintf@f(6), 
  1897 ;;  fmt             2   63[BANK0 ] PTR PTR unsigned char 
  1898 ;;		 -> vfprintf@cfmt(2), 
  1899 ;;  ap              2   65[BANK0 ] PTR PTR void 
  1900 ;;		 -> sprintf@ap(2), 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  llu             8    0        unsigned long long 
  1903 ;;  ll              8    0        long long 
  1904 ;;  f               4   71[BANK0 ] long long 
  1905 ;;  ct              3   75[BANK0 ] unsigned char [3]
  1906 ;;  vp              3    0        PTR void 
  1907 ;;  cp              3    0        PTR unsigned char 
  1908 ;;  i               2    0        int 
  1909 ;;  done            2    0        int 
  1910 ;;  c               1   78[BANK0 ] unsigned char 
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  2   61[BANK0 ] int 
  1913 ;; Registers used:
  1914 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1920 ;;      Params:         0       6       0       0       0       0       0       0       0
  1921 ;;      Locals:         0      12       0       0       0       0       0       0       0
  1922 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1923 ;;      Totals:         4      18       0       0       0       0       0       0       0
  1924 ;;Total ram usage:       22 bytes
  1925 ;; Hardware stack levels used:    1
  1926 ;; Hardware stack levels required when called:    5
  1927 ;; This function calls:
  1928 ;;		_atoi
  1929 ;;		_efgtoa
  1930 ;;		_fputc
  1931 ;;		_isdigit
  1932 ;;		_isupper
  1933 ;;		_strncmp
  1934 ;;		_tolower
  1935 ;; This function is called by:
  1936 ;;		_vfprintf
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           	psect	text3
  1941  001E22                     __ptext3:
  1942                           	opt callstack 0
  1943  001E22                     _vfpfcnvrt:
  1944                           	opt callstack 23
  1945  001E22                     
  1946                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1947  001E22  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1948  001E26  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1949  001E2A  CFDE FFF6          	movff	postinc2,tblptrl
  1950  001E2E  CFDD FFF7          	movff	postdec2,tblptrh
  1951  001E32                     	if	0	;tblptru may be non-zero
  1952  001E32                     	endif
  1953  001E32                     	if	0	;tblptru may be non-zero
  1954  001E32                     	endif
  1955  001E32  0008               	tblrd		*
  1956  001E34  50F5               	movf	tablat,w,c
  1957  001E36  0A25               	xorlw	37
  1958  001E38  A4D8               	btfss	status,2,c
  1959  001E3A  EF21  F00F         	goto	u4821
  1960  001E3E  EF23  F00F         	goto	u4820
  1961  001E42                     u4821:
  1962  001E42  EF2C  F011         	goto	l4275
  1963  001E46                     u4820:
  1964  001E46                     
  1965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1966  001E46  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1967  001E4A  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1968  001E4E  2ADE               	incf	postinc2,f,c
  1969  001E50  0E00               	movlw	0
  1970  001E52  22DD               	addwfc	postdec2,f,c
  1971  001E54                     
  1972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1973  001E54  0E00               	movlw	0
  1974  001E56  0100               	movlb	0	; () banked
  1975  001E58  6FDA               	movwf	(_width+1)& (0+255),b
  1976  001E5A  0E00               	movlw	0
  1977  001E5C  6FD9               	movwf	_width& (0+255),b
  1978  001E5E  C0D9  F0DD         	movff	_width,_flags
  1979  001E62  C0DA  F0DE         	movff	_width+1,_flags+1
  1980  001E66                     
  1981                           ; BSR set to: 0
  1982                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1983  001E66  69DB               	setf	_prec& (0+255),b
  1984  001E68  69DC               	setf	(_prec+1)& (0+255),b
  1985  001E6A                     
  1986                           ; BSR set to: 0
  1987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  1988  001E6A  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1989  001E6E  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1990  001E72  CFDE FFF6          	movff	postinc2,tblptrl
  1991  001E76  CFDD FFF7          	movff	postdec2,tblptrh
  1992  001E7A                     	if	0	;tblptru may be non-zero
  1993  001E7A                     	endif
  1994  001E7A                     	if	0	;tblptru may be non-zero
  1995  001E7A                     	endif
  1996  001E7A  0008               	tblrd		*
  1997  001E7C  50F5               	movf	tablat,w,c
  1998  001E7E  0A2E               	xorlw	46
  1999  001E80  A4D8               	btfss	status,2,c
  2000  001E82  EF45  F00F         	goto	u4831
  2001  001E86  EF47  F00F         	goto	u4830
  2002  001E8A                     u4831:
  2003  001E8A  EFC5  F00F         	goto	l4221
  2004  001E8E                     u4830:
  2005  001E8E                     
  2006                           ; BSR set to: 0
  2007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  2008  001E8E  0E00               	movlw	0
  2009  001E90  6FDC               	movwf	(_prec+1)& (0+255),b
  2010  001E92  0E00               	movlw	0
  2011  001E94  6FDB               	movwf	_prec& (0+255),b
  2012  001E96                     
  2013                           ; BSR set to: 0
  2014                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  2015  001E96  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2016  001E9A  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2017  001E9E  2ADE               	incf	postinc2,f,c
  2018  001EA0  0E00               	movlw	0
  2019  001EA2  22DD               	addwfc	postdec2,f,c
  2020  001EA4                     
  2021                           ; BSR set to: 0
  2022                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  2023  001EA4  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2024  001EA8  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2025  001EAC  CFDE FFF6          	movff	postinc2,tblptrl
  2026  001EB0  CFDD FFF7          	movff	postdec2,tblptrh
  2027  001EB4                     	if	0	;tblptru may be non-zero
  2028  001EB4                     	endif
  2029  001EB4                     	if	0	;tblptru may be non-zero
  2030  001EB4                     	endif
  2031  001EB4  0008               	tblrd		*
  2032  001EB6  50F5               	movf	tablat,w,c
  2033  001EB8  0A2A               	xorlw	42
  2034  001EBA  A4D8               	btfss	status,2,c
  2035  001EBC  EF62  F00F         	goto	u4841
  2036  001EC0  EF64  F00F         	goto	u4840
  2037  001EC4                     u4841:
  2038  001EC4  EF81  F00F         	goto	l4211
  2039  001EC8                     u4840:
  2040  001EC8                     
  2041                           ; BSR set to: 0
  2042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  2043  001EC8  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2044  001ECC  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2045  001ED0  2ADE               	incf	postinc2,f,c
  2046  001ED2  0E00               	movlw	0
  2047  001ED4  22DD               	addwfc	postdec2,f,c
  2048                           
  2049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2050  001ED6  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2051  001EDA  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2052  001EDE  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  2053  001EE2  0E02               	movlw	2
  2054  001EE4  26DE               	addwf	postinc2,f,c
  2055  001EE6  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  2056  001EEA  0E00               	movlw	0
  2057  001EEC  22DD               	addwfc	postdec2,f,c
  2058  001EEE  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2059  001EF2  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2060  001EF6  CFDE F0DB          	movff	postinc2,_prec
  2061  001EFA  CFDD F0DC          	movff	postdec2,_prec+1
  2062                           
  2063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  2064  001EFE  EFC5  F00F         	goto	l4221
  2065  001F02                     l4211:
  2066                           
  2067                           ; BSR set to: 0
  2068                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  2069  001F02  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2070  001F06  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2071  001F0A  CFDE F008          	movff	postinc2,atoi@s
  2072  001F0E  CFDD F009          	movff	postdec2,atoi@s+1
  2073  001F12  EC0D  F017         	call	_atoi	;wreg free
  2074  001F16  C008  F0DB         	movff	?_atoi,_prec
  2075  001F1A  C009  F0DC         	movff	?_atoi+1,_prec+1
  2076                           
  2077                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2078  001F1E  EF98  F00F         	goto	l4215
  2079  001F22                     l4213:
  2080                           
  2081                           ; BSR set to: 0
  2082                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  2083  001F22  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2084  001F26  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2085  001F2A  2ADE               	incf	postinc2,f,c
  2086  001F2C  0E00               	movlw	0
  2087  001F2E  22DD               	addwfc	postdec2,f,c
  2088  001F30                     l4215:
  2089  001F30  0ED0               	movlw	208
  2090  001F32  6E5C               	movwf	??_vfpfcnvrt^0,c
  2091  001F34  0EFF               	movlw	255
  2092  001F36  6E5D               	movwf	(??_vfpfcnvrt+1)^0,c
  2093  001F38  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2094  001F3C  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2095  001F40  CFDE FFF6          	movff	postinc2,tblptrl
  2096  001F44  CFDD FFF7          	movff	postdec2,tblptrh
  2097  001F48                     	if	0	;tblptru may be non-zero
  2098  001F48                     	endif
  2099  001F48                     	if	0	;tblptru may be non-zero
  2100  001F48                     	endif
  2101  001F48  0008               	tblrd		*
  2102  001F4A  50F5               	movf	tablat,w,c
  2103  001F4C  6E5E               	movwf	(??_vfpfcnvrt+2)^0,c
  2104  001F4E  6A5F               	clrf	(??_vfpfcnvrt+3)^0,c
  2105  001F50  505C               	movf	??_vfpfcnvrt^0,w,c
  2106  001F52  265E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2107  001F54  505D               	movf	(??_vfpfcnvrt+1)^0,w,c
  2108  001F56  225F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2109  001F58  505F               	movf	(??_vfpfcnvrt+3)^0,w,c
  2110  001F5A  E10A               	bnz	u4850
  2111  001F5C  0E0A               	movlw	10
  2112  001F5E  5C5E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2113  001F60  A0D8               	btfss	status,0,c
  2114  001F62  EFB5  F00F         	goto	u4851
  2115  001F66  EFB8  F00F         	goto	u4850
  2116  001F6A                     u4851:
  2117  001F6A  0E01               	movlw	1
  2118  001F6C  EFB9  F00F         	goto	u4860
  2119  001F70                     u4850:
  2120  001F70  0E00               	movlw	0
  2121  001F72                     u4860:
  2122  001F72  0100               	movlb	0	; () banked
  2123  001F74  6FA3               	movwf	_vfpfcnvrt$651& (0+255),b
  2124  001F76  6BA4               	clrf	(_vfpfcnvrt$651+1)& (0+255),b
  2125  001F78                     
  2126                           ; BSR set to: 0
  2127  001F78  51A3               	movf	_vfpfcnvrt$651& (0+255),w,b
  2128  001F7A  11A4               	iorwf	(_vfpfcnvrt$651+1)& (0+255),w,b
  2129  001F7C  A4D8               	btfss	status,2,c
  2130  001F7E  EFC3  F00F         	goto	u4871
  2131  001F82  EFC5  F00F         	goto	u4870
  2132  001F86                     u4871:
  2133  001F86  EF91  F00F         	goto	l4213
  2134  001F8A                     u4870:
  2135  001F8A                     l4221:
  2136                           
  2137                           ; BSR set to: 0
  2138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  2139  001F8A  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2140  001F8E  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2141  001F92  CFDE FFF6          	movff	postinc2,tblptrl
  2142  001F96  CFDD FFF7          	movff	postdec2,tblptrh
  2143  001F9A                     	if	0	;tblptru may be non-zero
  2144  001F9A                     	endif
  2145  001F9A                     	if	0	;tblptru may be non-zero
  2146  001F9A                     	endif
  2147  001F9A  0008               	tblrd		*
  2148  001F9C  50F5               	movf	tablat,w,c
  2149  001F9E  6E07               	movwf	tolower@c^0,c
  2150  001FA0  6A08               	clrf	(tolower@c+1)^0,c
  2151  001FA2  EC7A  F01C         	call	_tolower	;wreg free
  2152  001FA6  5007               	movf	?_tolower^0,w,c
  2153  001FA8  0100               	movlb	0	; () banked
  2154  001FAA  6FAB               	movwf	vfpfcnvrt@ct& (0+255),b
  2155  001FAC                     
  2156                           ; BSR set to: 0
  2157                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  2158  001FAC  51AB               	movf	vfpfcnvrt@ct& (0+255),w,b
  2159  001FAE  B4D8               	btfsc	status,2,c
  2160  001FB0  EFDC  F00F         	goto	u4881
  2161  001FB4  EFDE  F00F         	goto	u4880
  2162  001FB8                     u4881:
  2163  001FB8  EF18  F010         	goto	l4231
  2164  001FBC                     u4880:
  2165  001FBC                     
  2166                           ; BSR set to: 0
  2167                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  2168  001FBC  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2169  001FC0  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2170  001FC4  CFDE F05C          	movff	postinc2,??_vfpfcnvrt
  2171  001FC8  CFDD F05D          	movff	postdec2,??_vfpfcnvrt+1
  2172  001FCC  0E01               	movlw	1
  2173  001FCE  265C               	addwf	??_vfpfcnvrt^0,f,c
  2174  001FD0  0E00               	movlw	0
  2175  001FD2  225D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2176  001FD4  C05C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2177  001FD8  C05D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2178  001FDC                     	if	0	;tblptru may be non-zero
  2179  001FDC                     	endif
  2180  001FDC                     	if	0	;tblptru may be non-zero
  2181  001FDC                     	endif
  2182  001FDC  0008               	tblrd		*
  2183  001FDE  50F5               	movf	tablat,w,c
  2184  001FE0  6E07               	movwf	tolower@c^0,c
  2185  001FE2  6A08               	clrf	(tolower@c+1)^0,c
  2186  001FE4  EC7A  F01C         	call	_tolower	;wreg free
  2187  001FE8  5007               	movf	?_tolower^0,w,c
  2188  001FEA  0100               	movlb	0	; () banked
  2189  001FEC  6FAC               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2190  001FEE                     
  2191                           ; BSR set to: 0
  2192                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  2193  001FEE  51AC               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2194  001FF0  B4D8               	btfsc	status,2,c
  2195  001FF2  EFFD  F00F         	goto	u4891
  2196  001FF6  EFFF  F00F         	goto	u4890
  2197  001FFA                     u4891:
  2198  001FFA  EF18  F010         	goto	l4231
  2199  001FFE                     u4890:
  2200  001FFE                     
  2201                           ; BSR set to: 0
  2202                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  2203  001FFE  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2204  002002  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2205  002006  CFDE F05C          	movff	postinc2,??_vfpfcnvrt
  2206  00200A  CFDD F05D          	movff	postdec2,??_vfpfcnvrt+1
  2207  00200E  0E02               	movlw	2
  2208  002010  265C               	addwf	??_vfpfcnvrt^0,f,c
  2209  002012  0E00               	movlw	0
  2210  002014  225D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2211  002016  C05C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2212  00201A  C05D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2213  00201E                     	if	0	;tblptru may be non-zero
  2214  00201E                     	endif
  2215  00201E                     	if	0	;tblptru may be non-zero
  2216  00201E                     	endif
  2217  00201E  0008               	tblrd		*
  2218  002020  50F5               	movf	tablat,w,c
  2219  002022  6E07               	movwf	tolower@c^0,c
  2220  002024  6A08               	clrf	(tolower@c+1)^0,c
  2221  002026  EC7A  F01C         	call	_tolower	;wreg free
  2222  00202A  5007               	movf	?_tolower^0,w,c
  2223  00202C  0100               	movlb	0	; () banked
  2224  00202E  6FAD               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2225  002030                     l4231:
  2226                           
  2227                           ; BSR set to: 0
  2228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  2229  002030  0E66               	movlw	102
  2230  002032  19AB               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2231  002034  A4D8               	btfss	status,2,c
  2232  002036  EF1F  F010         	goto	u4901
  2233  00203A  EF21  F010         	goto	u4900
  2234  00203E                     u4901:
  2235  00203E  EF61  F010         	goto	l4243
  2236  002042                     u4900:
  2237  002042                     
  2238                           ; BSR set to: 0
  2239                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  2240  002042  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2241  002046  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2242  00204A  CFDE FFF6          	movff	postinc2,tblptrl
  2243  00204E  CFDD FFF7          	movff	postdec2,tblptrh
  2244  002052                     	if	0	;tblptru may be non-zero
  2245  002052                     	endif
  2246  002052                     	if	0	;tblptru may be non-zero
  2247  002052                     	endif
  2248  002052  0008               	tblrd		*
  2249  002054  CFF5 F0AE          	movff	tablat,vfpfcnvrt@c
  2250  002058                     
  2251                           ; BSR set to: 0
  2252                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  2253  002058  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2254  00205C  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2255  002060  2ADE               	incf	postinc2,f,c
  2256  002062  0E00               	movlw	0
  2257  002064  22DD               	addwfc	postdec2,f,c
  2258  002066                     
  2259                           ; BSR set to: 0
  2260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2261  002066  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2262  00206A  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2263  00206E  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  2264  002072  0E04               	movlw	4
  2265  002074  26DE               	addwf	postinc2,f,c
  2266  002076  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  2267  00207A  0E00               	movlw	0
  2268  00207C  22DD               	addwfc	postdec2,f,c
  2269  00207E  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2270  002082  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2271  002086  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f
  2272  00208A  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+1
  2273  00208E  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+2
  2274  002092  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+3
  2275  002096                     l4239:
  2276                           
  2277                           ; BSR set to: 0
  2278                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  2279  002096  C09D  F055         	movff	vfpfcnvrt@fp,efgtoa@fp
  2280  00209A  C09E  F056         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2281  00209E  C0A7  F057         	movff	vfpfcnvrt@f,efgtoa@f
  2282  0020A2  C0A8  F058         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2283  0020A6  C0A9  F059         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2284  0020AA  C0AA  F05A         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2285  0020AE  C0AE  F05B         	movff	vfpfcnvrt@c,efgtoa@c
  2286  0020B2  EC4C  F004         	call	_efgtoa	;wreg free
  2287  0020B6  C055  F09D         	movff	?_efgtoa,?_vfpfcnvrt
  2288  0020BA  C056  F09E         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2289  0020BE  EF47  F011         	goto	l358
  2290  0020C2                     l4243:
  2291                           
  2292                           ; BSR set to: 0
  2293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2294  0020C2  0EAB               	movlw	low vfpfcnvrt@ct
  2295  0020C4  6E01               	movwf	strncmp@_l^0,c
  2296  0020C6  0E00               	movlw	high vfpfcnvrt@ct
  2297  0020C8  6E02               	movwf	(strncmp@_l+1)^0,c
  2298  0020CA  0E94               	movlw	low STR_20
  2299  0020CC  6E03               	movwf	strncmp@_r^0,c
  2300  0020CE  0E08               	movlw	high STR_20
  2301  0020D0  6E04               	movwf	(strncmp@_r+1)^0,c
  2302  0020D2  0E00               	movlw	0
  2303  0020D4  6E06               	movwf	(strncmp@n+1)^0,c
  2304  0020D6  0E02               	movlw	2
  2305  0020D8  6E05               	movwf	strncmp@n^0,c
  2306  0020DA  ECCE  F019         	call	_strncmp	;wreg free
  2307  0020DE  5001               	movf	?_strncmp^0,w,c
  2308  0020E0  1002               	iorwf	(?_strncmp+1)^0,w,c
  2309  0020E2  A4D8               	btfss	status,2,c
  2310  0020E4  EF76  F010         	goto	u4911
  2311  0020E8  EF78  F010         	goto	u4910
  2312  0020EC                     u4911:
  2313  0020EC  EFF4  F010         	goto	l4259
  2314  0020F0                     u4910:
  2315  0020F0                     
  2316                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2317  0020F0  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2318  0020F4  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2319  0020F8  CFDE F05C          	movff	postinc2,??_vfpfcnvrt
  2320  0020FC  CFDD F05D          	movff	postdec2,??_vfpfcnvrt+1
  2321  002100  0E01               	movlw	1
  2322  002102  265C               	addwf	??_vfpfcnvrt^0,f,c
  2323  002104  0E00               	movlw	0
  2324  002106  225D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2325  002108  C05C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2326  00210C  C05D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2327  002110                     	if	0	;tblptru may be non-zero
  2328  002110                     	endif
  2329  002110                     	if	0	;tblptru may be non-zero
  2330  002110                     	endif
  2331  002110  0008               	tblrd		*
  2332  002112  CFF5 F0AE          	movff	tablat,vfpfcnvrt@c
  2333  002116  0EBF               	movlw	191
  2334  002118  6E5C               	movwf	??_vfpfcnvrt^0,c
  2335  00211A  0EFF               	movlw	255
  2336  00211C  6E5D               	movwf	(??_vfpfcnvrt+1)^0,c
  2337  00211E  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2338  002122  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2339  002126  CFDE FFF6          	movff	postinc2,tblptrl
  2340  00212A  CFDD FFF7          	movff	postdec2,tblptrh
  2341  00212E                     	if	0	;tblptru may be non-zero
  2342  00212E                     	endif
  2343  00212E                     	if	0	;tblptru may be non-zero
  2344  00212E                     	endif
  2345  00212E  0008               	tblrd		*
  2346  002130  50F5               	movf	tablat,w,c
  2347  002132  6E5E               	movwf	(??_vfpfcnvrt+2)^0,c
  2348  002134  6A5F               	clrf	(??_vfpfcnvrt+3)^0,c
  2349  002136  505C               	movf	??_vfpfcnvrt^0,w,c
  2350  002138  265E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2351  00213A  505D               	movf	(??_vfpfcnvrt+1)^0,w,c
  2352  00213C  225F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2353  00213E  505F               	movf	(??_vfpfcnvrt+3)^0,w,c
  2354  002140  E10A               	bnz	u4920
  2355  002142  0E1A               	movlw	26
  2356  002144  5C5E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2357  002146  A0D8               	btfss	status,0,c
  2358  002148  EFA8  F010         	goto	u4921
  2359  00214C  EFAB  F010         	goto	u4920
  2360  002150                     u4921:
  2361  002150  0E01               	movlw	1
  2362  002152  EFAC  F010         	goto	u4930
  2363  002156                     u4920:
  2364  002156  0E00               	movlw	0
  2365  002158                     u4930:
  2366  002158  0100               	movlb	0	; () banked
  2367  00215A  6FA5               	movwf	_vfpfcnvrt$655& (0+255),b
  2368  00215C  6BA6               	clrf	(_vfpfcnvrt$655+1)& (0+255),b
  2369  00215E                     
  2370                           ; BSR set to: 0
  2371  00215E  51A5               	movf	_vfpfcnvrt$655& (0+255),w,b
  2372  002160  11A6               	iorwf	(_vfpfcnvrt$655+1)& (0+255),w,b
  2373  002162  B4D8               	btfsc	status,2,c
  2374  002164  EFB6  F010         	goto	u4941
  2375  002168  EFB8  F010         	goto	u4940
  2376  00216C                     u4941:
  2377  00216C  EFD2  F010         	goto	l4253
  2378  002170                     u4940:
  2379  002170                     
  2380                           ; BSR set to: 0
  2381                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2382  002170  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2383  002174  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2384  002178  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  2385  00217C  0E04               	movlw	4
  2386  00217E  26DE               	addwf	postinc2,f,c
  2387  002180  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  2388  002184  0E00               	movlw	0
  2389  002186  22DD               	addwfc	postdec2,f,c
  2390  002188  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2391  00218C  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2392  002190  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f
  2393  002194  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+1
  2394  002198  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+2
  2395  00219C  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+3
  2396                           
  2397                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  2398  0021A0  EFEA  F010         	goto	l365
  2399  0021A4                     l4253:
  2400                           
  2401                           ; BSR set to: 0
  2402                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2403  0021A4  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2404  0021A8  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2405  0021AC  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  2406  0021B0  0E04               	movlw	4
  2407  0021B2  26DE               	addwf	postinc2,f,c
  2408  0021B4  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  2409  0021B8  0E00               	movlw	0
  2410  0021BA  22DD               	addwfc	postdec2,f,c
  2411  0021BC  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2412  0021C0  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2413  0021C4  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f
  2414  0021C8  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+1
  2415  0021CC  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+2
  2416  0021D0  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+3
  2417  0021D4                     l365:
  2418                           
  2419                           ; BSR set to: 0
  2420                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2421  0021D4  0E02               	movlw	2
  2422  0021D6  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2423  0021DA  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2424  0021DE  26DE               	addwf	postinc2,f,c
  2425  0021E0  0E00               	movlw	0
  2426  0021E2  22DD               	addwfc	postdec2,f,c
  2427  0021E4  EF4B  F010         	goto	l4239
  2428  0021E8                     l4259:
  2429                           
  2430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2431  0021E8  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2432  0021EC  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2433  0021F0  CFDE FFF6          	movff	postinc2,tblptrl
  2434  0021F4  CFDD FFF7          	movff	postdec2,tblptrh
  2435  0021F8                     	if	0	;tblptru may be non-zero
  2436  0021F8                     	endif
  2437  0021F8                     	if	0	;tblptru may be non-zero
  2438  0021F8                     	endif
  2439  0021F8  0008               	tblrd		*
  2440  0021FA  50F5               	movf	tablat,w,c
  2441  0021FC  0A25               	xorlw	37
  2442  0021FE  A4D8               	btfss	status,2,c
  2443  002200  EF04  F011         	goto	u4951
  2444  002204  EF06  F011         	goto	u4950
  2445  002208                     u4951:
  2446  002208  EF1E  F011         	goto	l4269
  2447  00220C                     u4950:
  2448  00220C                     
  2449                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2450  00220C  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2451  002210  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2452  002214  2ADE               	incf	postinc2,f,c
  2453  002216  0E00               	movlw	0
  2454  002218  22DD               	addwfc	postdec2,f,c
  2455  00221A                     
  2456                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2457  00221A  0E00               	movlw	0
  2458  00221C  6E02               	movwf	(fputc@c+1)^0,c
  2459  00221E  0E25               	movlw	37
  2460  002220  6E01               	movwf	fputc@c^0,c
  2461  002222  C09D  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2462  002226  C09E  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2463  00222A  EC39  F01A         	call	_fputc	;wreg free
  2464  00222E                     l4265:
  2465                           
  2466                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2467  00222E  0E00               	movlw	0
  2468  002230  0100               	movlb	0	; () banked
  2469  002232  6F9E               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2470  002234  0E01               	movlw	1
  2471  002236  6F9D               	movwf	?_vfpfcnvrt& (0+255),b
  2472  002238  EF47  F011         	goto	l358
  2473  00223C                     l4269:
  2474                           
  2475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2476  00223C  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2477  002240  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2478  002244  2ADE               	incf	postinc2,f,c
  2479  002246  0E00               	movlw	0
  2480  002248  22DD               	addwfc	postdec2,f,c
  2481  00224A                     
  2482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2483  00224A  0E00               	movlw	0
  2484  00224C  0100               	movlb	0	; () banked
  2485  00224E  6F9E               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2486  002250  0E00               	movlw	0
  2487  002252  6F9D               	movwf	?_vfpfcnvrt& (0+255),b
  2488  002254  EF47  F011         	goto	l358
  2489  002258                     l4275:
  2490                           
  2491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2492  002258  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2493  00225C  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2494  002260  CFDE FFF6          	movff	postinc2,tblptrl
  2495  002264  CFDD FFF7          	movff	postdec2,tblptrh
  2496  002268                     	if	0	;tblptru may be non-zero
  2497  002268                     	endif
  2498  002268                     	if	0	;tblptru may be non-zero
  2499  002268                     	endif
  2500  002268  0008               	tblrd		*
  2501  00226A  50F5               	movf	tablat,w,c
  2502  00226C  6E01               	movwf	fputc@c^0,c
  2503  00226E  6A02               	clrf	(fputc@c+1)^0,c
  2504  002270  C09D  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2505  002274  C09E  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2506  002278  EC39  F01A         	call	_fputc	;wreg free
  2507  00227C                     
  2508                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2509  00227C  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2510  002280  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2511  002284  2ADE               	incf	postinc2,f,c
  2512  002286  0E00               	movlw	0
  2513  002288  22DD               	addwfc	postdec2,f,c
  2514  00228A  EF17  F011         	goto	l4265
  2515  00228E                     l358:
  2516  00228E  0012               	return		;funcret
  2517  002290                     __end_of_vfpfcnvrt:
  2518                           	opt callstack 0
  2519                           
  2520 ;; *************** function _strncmp *****************
  2521 ;; Defined at:
  2522 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2525 ;;		 -> vfpfcnvrt@ct(3), 
  2526 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2527 ;;		 -> STR_22(3), 
  2528 ;;  n               2    4[COMRAM] unsigned int 
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2531 ;;		 -> STR_22(3), 
  2532 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2533 ;;		 -> vfpfcnvrt@ct(3), 
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  2    0[COMRAM] int 
  2536 ;; Registers used:
  2537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2543 ;;      Params:         6       0       0       0       0       0       0       0       0
  2544 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2545 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2546 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2547 ;;Total ram usage:       11 bytes
  2548 ;; Hardware stack levels used:    1
  2549 ;; This function calls:
  2550 ;;		Nothing
  2551 ;; This function is called by:
  2552 ;;		_vfpfcnvrt
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           	psect	text4
  2557  00339C                     __ptext4:
  2558                           	opt callstack 0
  2559  00339C                     _strncmp:
  2560                           	opt callstack 27
  2561  00339C  C001  F008         	movff	strncmp@_l,strncmp@l
  2562  0033A0  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2563  0033A4  C003  F00A         	movff	strncmp@_r,strncmp@r
  2564  0033A8  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2565  0033AC  0605               	decf	strncmp@n^0,f,c
  2566  0033AE  A0D8               	btfss	status,0,c
  2567  0033B0  0606               	decf	(strncmp@n+1)^0,f,c
  2568  0033B2  2805               	incf	strncmp@n^0,w,c
  2569  0033B4  E106               	bnz	u4751
  2570  0033B6  2806               	incf	(strncmp@n+1)^0,w,c
  2571  0033B8  A4D8               	btfss	status,2,c
  2572  0033BA  EFE1  F019         	goto	u4751
  2573  0033BE  EFE3  F019         	goto	u4750
  2574  0033C2                     u4751:
  2575  0033C2  EFF0  F019         	goto	l4093
  2576  0033C6                     u4750:
  2577  0033C6  0E00               	movlw	0
  2578  0033C8  6E02               	movwf	(?_strncmp+1)^0,c
  2579  0033CA  0E00               	movlw	0
  2580  0033CC  6E01               	movwf	?_strncmp^0,c
  2581  0033CE  EF38  F01A         	goto	l1167
  2582  0033D2                     l4091:
  2583  0033D2  4A08               	infsnz	strncmp@l^0,f,c
  2584  0033D4  2A09               	incf	(strncmp@l+1)^0,f,c
  2585  0033D6  4A0A               	infsnz	strncmp@r^0,f,c
  2586  0033D8  2A0B               	incf	(strncmp@r+1)^0,f,c
  2587  0033DA  0605               	decf	strncmp@n^0,f,c
  2588  0033DC  A0D8               	btfss	status,0,c
  2589  0033DE  0606               	decf	(strncmp@n+1)^0,f,c
  2590  0033E0                     l4093:
  2591  0033E0  C008  FFD9         	movff	strncmp@l,fsr2l
  2592  0033E4  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2593  0033E8  50DF               	movf	indf2,w,c
  2594  0033EA  B4D8               	btfsc	status,2,c
  2595  0033EC  EFFA  F019         	goto	u4761
  2596  0033F0  EFFC  F019         	goto	u4760
  2597  0033F4                     u4761:
  2598  0033F4  EF27  F01A         	goto	l4101
  2599  0033F8                     u4760:
  2600  0033F8  C00A  FFF6         	movff	strncmp@r,tblptrl
  2601  0033FC  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2602  003400                     	if	0	;tblptru may be non-zero
  2603  003400                     	endif
  2604  003400                     	if	0	;tblptru may be non-zero
  2605  003400                     	endif
  2606  003400  0008               	tblrd		*
  2607  003402  50F5               	movf	tablat,w,c
  2608  003404  0900               	iorlw	0
  2609  003406  B4D8               	btfsc	status,2,c
  2610  003408  EF08  F01A         	goto	u4771
  2611  00340C  EF0A  F01A         	goto	u4770
  2612  003410                     u4771:
  2613  003410  EF27  F01A         	goto	l4101
  2614  003414                     u4770:
  2615  003414  5005               	movf	strncmp@n^0,w,c
  2616  003416  1006               	iorwf	(strncmp@n+1)^0,w,c
  2617  003418  B4D8               	btfsc	status,2,c
  2618  00341A  EF11  F01A         	goto	u4781
  2619  00341E  EF13  F01A         	goto	u4780
  2620  003422                     u4781:
  2621  003422  EF27  F01A         	goto	l4101
  2622  003426                     u4780:
  2623  003426  C008  FFD9         	movff	strncmp@l,fsr2l
  2624  00342A  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2625  00342E  50DF               	movf	indf2,w,c
  2626  003430  6E07               	movwf	??_strncmp^0,c
  2627  003432  C00A  FFF6         	movff	strncmp@r,tblptrl
  2628  003436  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2629  00343A                     	if	0	;tblptru may be non-zero
  2630  00343A                     	endif
  2631  00343A                     	if	0	;tblptru may be non-zero
  2632  00343A                     	endif
  2633  00343A  0008               	tblrd		*
  2634  00343C  50F5               	movf	tablat,w,c
  2635  00343E  1807               	xorwf	??_strncmp^0,w,c
  2636  003440  B4D8               	btfsc	status,2,c
  2637  003442  EF25  F01A         	goto	u4791
  2638  003446  EF27  F01A         	goto	u4790
  2639  00344A                     u4791:
  2640  00344A  EFE9  F019         	goto	l4091
  2641  00344E                     u4790:
  2642  00344E                     l4101:
  2643  00344E  C008  FFD9         	movff	strncmp@l,fsr2l
  2644  003452  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2645  003456  50DF               	movf	indf2,w,c
  2646  003458  6E07               	movwf	??_strncmp^0,c
  2647  00345A  C00A  FFF6         	movff	strncmp@r,tblptrl
  2648  00345E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2649  003462                     	if	0	;tblptru may be non-zero
  2650  003462                     	endif
  2651  003462                     	if	0	;tblptru may be non-zero
  2652  003462                     	endif
  2653  003462  0008               	tblrd		*
  2654  003464  50F5               	movf	tablat,w,c
  2655  003466  5C07               	subwf	??_strncmp^0,w,c
  2656  003468  6E01               	movwf	?_strncmp^0,c
  2657  00346A  6A02               	clrf	(?_strncmp+1)^0,c
  2658  00346C  A0D8               	btfss	status,0,c
  2659  00346E  0602               	decf	(?_strncmp+1)^0,f,c
  2660  003470                     l1167:
  2661  003470  0012               	return		;funcret
  2662  003472                     __end_of_strncmp:
  2663                           	opt callstack 0
  2664                           
  2665 ;; *************** function _efgtoa *****************
  2666 ;; Defined at:
  2667 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  fp              2   84[COMRAM] PTR struct _IO_FILE
  2670 ;;		 -> sprintf@f(6), 
  2671 ;;  f               4   86[COMRAM] PTR struct _IO_FILE
  2672 ;;  c               1   90[COMRAM] unsigned char 
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;  u               4   57[BANK0 ] unsigned char 
  2675 ;;  g               4   49[BANK0 ] unsigned char 
  2676 ;;  l               4   43[BANK0 ] unsigned char 
  2677 ;;  h               4   39[BANK0 ] unsigned char 
  2678 ;;  ou              4    5[BANK0 ] unsigned char 
  2679 ;;  n               2   55[BANK0 ] int 
  2680 ;;  e               2   53[BANK0 ] int 
  2681 ;;  i               2   47[BANK0 ] int 
  2682 ;;  w               2   36[BANK0 ] int 
  2683 ;;  p               2   33[BANK0 ] int 
  2684 ;;  sign            2   31[BANK0 ] int 
  2685 ;;  d               2   29[BANK0 ] int 
  2686 ;;  ne              2   27[BANK0 ] int 
  2687 ;;  m               2   25[BANK0 ] int 
  2688 ;;  pp              2   23[BANK0 ] int 
  2689 ;;  t               2   21[BANK0 ] int 
  2690 ;;  mode            1   38[BANK0 ] unsigned char 
  2691 ;;  nmode           1   35[BANK0 ] unsigned char 
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  2   84[COMRAM] int 
  2694 ;; Registers used:
  2695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2701 ;;      Params:         7       0       0       0       0       0       0       0       0
  2702 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2703 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2704 ;;      Totals:         7      61       0       0       0       0       0       0       0
  2705 ;;Total ram usage:       68 bytes
  2706 ;; Hardware stack levels used:    1
  2707 ;; Hardware stack levels required when called:    4
  2708 ;; This function calls:
  2709 ;;		___awdiv
  2710 ;;		___awmod
  2711 ;;		___fladd
  2712 ;;		___fldiv
  2713 ;;		___fleq
  2714 ;;		___flge
  2715 ;;		___flmul
  2716 ;;		___flneg
  2717 ;;		___flsub
  2718 ;;		___fltol
  2719 ;;		___fpclassifyf
  2720 ;;		_floorf
  2721 ;;		_isupper
  2722 ;;		_pad
  2723 ;;		_strcpy
  2724 ;;		_tolower
  2725 ;; This function is called by:
  2726 ;;		_vfpfcnvrt
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           	psect	text5
  2731  000898                     __ptext5:
  2732                           	opt callstack 0
  2733  000898                     _efgtoa:
  2734                           	opt callstack 23
  2735  000898                     
  2736                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  2737  000898  0E00               	movlw	0
  2738  00089A  0100               	movlb	0	; () banked
  2739  00089C  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  2740  00089E  0E00               	movlw	0
  2741  0008A0  6F7F               	movwf	efgtoa@sign& (0+255),b
  2742  0008A2                     
  2743                           ; BSR set to: 0
  2744                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  2745  0008A2  C057  F091         	movff	efgtoa@f,efgtoa@g
  2746  0008A6  C058  F092         	movff	efgtoa@f+1,efgtoa@g+1
  2747  0008AA  C059  F093         	movff	efgtoa@f+2,efgtoa@g+2
  2748  0008AE  C05A  F094         	movff	efgtoa@f+3,efgtoa@g+3
  2749  0008B2                     
  2750                           ; BSR set to: 0
  2751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  2752  0008B2  BF94               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2753  0008B4  EF60  F004         	goto	u4160
  2754  0008B8  EF5E  F004         	goto	u4161
  2755  0008BC                     u4161:
  2756  0008BC  EF76  F004         	goto	l3755
  2757  0008C0                     u4160:
  2758  0008C0                     
  2759                           ; BSR set to: 0
  2760                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  2761  0008C0  0E00               	movlw	0
  2762  0008C2  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  2763  0008C4  0E01               	movlw	1
  2764  0008C6  6F7F               	movwf	efgtoa@sign& (0+255),b
  2765  0008C8                     
  2766                           ; BSR set to: 0
  2767                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  2768  0008C8  C091  F001         	movff	efgtoa@g,___flneg@f1
  2769  0008CC  C092  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2770  0008D0  C093  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2771  0008D4  C094  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2772  0008D8  EC47  F01E         	call	___flneg	;wreg free
  2773  0008DC  C001  F091         	movff	?___flneg,efgtoa@g
  2774  0008E0  C002  F092         	movff	?___flneg+1,efgtoa@g+1
  2775  0008E4  C003  F093         	movff	?___flneg+2,efgtoa@g+2
  2776  0008E8  C004  F094         	movff	?___flneg+3,efgtoa@g+3
  2777  0008EC                     l3755:
  2778                           
  2779                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  2780  0008EC  0E00               	movlw	0
  2781  0008EE  0100               	movlb	0	; () banked
  2782  0008F0  6F98               	movwf	(efgtoa@n+1)& (0+255),b
  2783  0008F2  0E00               	movlw	0
  2784  0008F4  6F97               	movwf	efgtoa@n& (0+255),b
  2785  0008F6                     
  2786                           ; BSR set to: 0
  2787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  2788  0008F6  C0D9  F084         	movff	_width,efgtoa@w
  2789  0008FA  C0DA  F085         	movff	_width+1,efgtoa@w+1
  2790  0008FE                     
  2791                           ; BSR set to: 0
  2792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  2793  0008FE  517F               	movf	efgtoa@sign& (0+255),w,b
  2794  000900  1180               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2795  000902  A4D8               	btfss	status,2,c
  2796  000904  EF86  F004         	goto	u4171
  2797  000908  EF88  F004         	goto	u4170
  2798  00090C                     u4171:
  2799  00090C  EF8F  F004         	goto	l3763
  2800  000910                     u4170:
  2801  000910                     
  2802                           ; BSR set to: 0
  2803  000910  A5DD               	btfss	_flags& (0+255),2,b
  2804  000912  EF8D  F004         	goto	u4181
  2805  000916  EF8F  F004         	goto	u4180
  2806  00091A                     u4181:
  2807  00091A  EFA9  F004         	goto	l3775
  2808  00091E                     u4180:
  2809  00091E                     l3763:
  2810                           
  2811                           ; BSR set to: 0
  2812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  2813  00091E  517F               	movf	efgtoa@sign& (0+255),w,b
  2814  000920  1180               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2815  000922  A4D8               	btfss	status,2,c
  2816  000924  EF96  F004         	goto	u4191
  2817  000928  EF98  F004         	goto	u4190
  2818  00092C                     u4191:
  2819  00092C  EF9E  F004         	goto	l3767
  2820  000930                     u4190:
  2821  000930                     
  2822                           ; BSR set to: 0
  2823  000930  0E00               	movlw	0
  2824  000932  6F6A               	movwf	(_efgtoa$625+1)& (0+255),b
  2825  000934  0E2B               	movlw	43
  2826  000936  6F69               	movwf	_efgtoa$625& (0+255),b
  2827  000938  EFA2  F004         	goto	l3769
  2828  00093C                     l3767:
  2829                           
  2830                           ; BSR set to: 0
  2831  00093C  0E00               	movlw	0
  2832  00093E  6F6A               	movwf	(_efgtoa$625+1)& (0+255),b
  2833  000940  0E2D               	movlw	45
  2834  000942  6F69               	movwf	_efgtoa$625& (0+255),b
  2835  000944                     l3769:
  2836                           
  2837                           ; BSR set to: 0
  2838  000944  C069  F100         	movff	_efgtoa$625,_dbuf
  2839  000948                     
  2840                           ; BSR set to: 0
  2841                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  2842  000948  4B97               	infsnz	efgtoa@n& (0+255),f,b
  2843  00094A  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  2844  00094C                     
  2845                           ; BSR set to: 0
  2846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  2847  00094C  0784               	decf	efgtoa@w& (0+255),f,b
  2848  00094E  A0D8               	btfss	status,0,c
  2849  000950  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  2850  000952                     l3775:
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2854  000952  C091  F001         	movff	efgtoa@g,___fpclassifyf@x
  2855  000956  C092  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2856  00095A  C093  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2857  00095E  C094  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2858  000962  ECDA  F018         	call	___fpclassifyf	;wreg free
  2859  000966  0401               	decf	?___fpclassifyf^0,w,c
  2860  000968  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2861  00096A  A4D8               	btfss	status,2,c
  2862  00096C  EFBA  F004         	goto	u4201
  2863  000970  EFBC  F004         	goto	u4200
  2864  000974                     u4201:
  2865  000974  EF13  F005         	goto	l3793
  2866  000978                     u4200:
  2867  000978  0EBF               	movlw	191
  2868  00097A  0100               	movlb	0	; () banked
  2869  00097C  6F60               	movwf	??_efgtoa& (0+255),b
  2870  00097E  0EFF               	movlw	255
  2871  000980  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  2872  000982  505B               	movf	efgtoa@c^0,w,c
  2873  000984  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  2874  000986  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  2875  000988  5160               	movf	??_efgtoa& (0+255),w,b
  2876  00098A  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  2877  00098C  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  2878  00098E  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2879  000990  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  2880  000992  E10A               	bnz	u4210
  2881  000994  0E1A               	movlw	26
  2882  000996  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  2883  000998  A0D8               	btfss	status,0,c
  2884  00099A  EFD1  F004         	goto	u4211
  2885  00099E  EFD4  F004         	goto	u4210
  2886  0009A2                     u4211:
  2887  0009A2  0E01               	movlw	1
  2888  0009A4  EFD5  F004         	goto	u4220
  2889  0009A8                     u4210:
  2890  0009A8  0E00               	movlw	0
  2891  0009AA                     u4220:
  2892  0009AA  6F6B               	movwf	_efgtoa$626& (0+255),b
  2893  0009AC  6B6C               	clrf	(_efgtoa$626+1)& (0+255),b
  2894  0009AE                     
  2895                           ; BSR set to: 0
  2896  0009AE  516B               	movf	_efgtoa$626& (0+255),w,b
  2897  0009B0  116C               	iorwf	(_efgtoa$626+1)& (0+255),w,b
  2898  0009B2  B4D8               	btfsc	status,2,c
  2899  0009B4  EFDE  F004         	goto	u4231
  2900  0009B8  EFE0  F004         	goto	u4230
  2901  0009BC                     u4231:
  2902  0009BC  EFEE  F004         	goto	l3785
  2903  0009C0                     u4230:
  2904  0009C0                     
  2905                           ; BSR set to: 0
  2906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  2907  0009C0  0E00               	movlw	low _dbuf
  2908  0009C2  2597               	addwf	efgtoa@n& (0+255),w,b
  2909  0009C4  6E01               	movwf	strcpy@dest^0,c
  2910  0009C6  0E01               	movlw	high _dbuf
  2911  0009C8  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2912  0009CA  6E02               	movwf	(strcpy@dest+1)^0,c
  2913  0009CC  0E84               	movlw	low STR_12
  2914  0009CE  6E03               	movwf	strcpy@src^0,c
  2915  0009D0  0E08               	movlw	high STR_12
  2916  0009D2  6E04               	movwf	(strcpy@src+1)^0,c
  2917  0009D4  ECAA  F01C         	call	_strcpy	;wreg free
  2918                           
  2919                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  2920  0009D8  EFFA  F004         	goto	l3787
  2921  0009DC                     l3785:
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  2925  0009DC  0E00               	movlw	low _dbuf
  2926  0009DE  2597               	addwf	efgtoa@n& (0+255),w,b
  2927  0009E0  6E01               	movwf	strcpy@dest^0,c
  2928  0009E2  0E01               	movlw	high _dbuf
  2929  0009E4  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2930  0009E6  6E02               	movwf	(strcpy@dest+1)^0,c
  2931  0009E8  0E8C               	movlw	low STR_13
  2932  0009EA  6E03               	movwf	strcpy@src^0,c
  2933  0009EC  0E08               	movlw	high STR_13
  2934  0009EE  6E04               	movwf	(strcpy@src+1)^0,c
  2935  0009F0  ECAA  F01C         	call	_strcpy	;wreg free
  2936  0009F4                     l3787:
  2937                           
  2938                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  2939  0009F4  0100               	movlb	0	; () banked
  2940  0009F6  0EFD               	movlw	253
  2941  0009F8  2784               	addwf	efgtoa@w& (0+255),f,b
  2942  0009FA  0EFF               	movlw	255
  2943  0009FC  2385               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2944  0009FE                     l3789:
  2945                           
  2946                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  2947  0009FE  C055  F011         	movff	efgtoa@fp,pad@fp
  2948  000A02  C056  F012         	movff	efgtoa@fp+1,pad@fp+1
  2949  000A06  0E00               	movlw	low _dbuf
  2950  000A08  6E13               	movwf	pad@buf^0,c
  2951  000A0A  0E01               	movlw	high _dbuf
  2952  000A0C  6E14               	movwf	(pad@buf+1)^0,c
  2953  000A0E  C084  F015         	movff	efgtoa@w,pad@p
  2954  000A12  C085  F016         	movff	efgtoa@w+1,pad@p+1
  2955  000A16  EC9E  F01A         	call	_pad	;wreg free
  2956  000A1A  C011  F055         	movff	?_pad,?_efgtoa
  2957  000A1E  C012  F056         	movff	?_pad+1,?_efgtoa+1
  2958  000A22  EF23  F00A         	goto	l268
  2959  000A26                     l3793:
  2960                           
  2961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2962  000A26  C091  F001         	movff	efgtoa@g,___fpclassifyf@x
  2963  000A2A  C092  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2964  000A2E  C093  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2965  000A32  C094  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2966  000A36  ECDA  F018         	call	___fpclassifyf	;wreg free
  2967  000A3A  5001               	movf	?___fpclassifyf^0,w,c
  2968  000A3C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2969  000A3E  A4D8               	btfss	status,2,c
  2970  000A40  EF24  F005         	goto	u4241
  2971  000A44  EF26  F005         	goto	u4240
  2972  000A48                     u4241:
  2973  000A48  EF66  F005         	goto	l3811
  2974  000A4C                     u4240:
  2975  000A4C  0EBF               	movlw	191
  2976  000A4E  0100               	movlb	0	; () banked
  2977  000A50  6F60               	movwf	??_efgtoa& (0+255),b
  2978  000A52  0EFF               	movlw	255
  2979  000A54  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  2980  000A56  505B               	movf	efgtoa@c^0,w,c
  2981  000A58  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  2982  000A5A  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  2983  000A5C  5160               	movf	??_efgtoa& (0+255),w,b
  2984  000A5E  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  2985  000A60  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  2986  000A62  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2987  000A64  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  2988  000A66  E10A               	bnz	u4250
  2989  000A68  0E1A               	movlw	26
  2990  000A6A  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  2991  000A6C  A0D8               	btfss	status,0,c
  2992  000A6E  EF3B  F005         	goto	u4251
  2993  000A72  EF3E  F005         	goto	u4250
  2994  000A76                     u4251:
  2995  000A76  0E01               	movlw	1
  2996  000A78  EF3F  F005         	goto	u4260
  2997  000A7C                     u4250:
  2998  000A7C  0E00               	movlw	0
  2999  000A7E                     u4260:
  3000  000A7E  6F6D               	movwf	_efgtoa$631& (0+255),b
  3001  000A80  6B6E               	clrf	(_efgtoa$631+1)& (0+255),b
  3002  000A82                     
  3003                           ; BSR set to: 0
  3004  000A82  516D               	movf	_efgtoa$631& (0+255),w,b
  3005  000A84  116E               	iorwf	(_efgtoa$631+1)& (0+255),w,b
  3006  000A86  B4D8               	btfsc	status,2,c
  3007  000A88  EF48  F005         	goto	u4271
  3008  000A8C  EF4A  F005         	goto	u4270
  3009  000A90                     u4271:
  3010  000A90  EF58  F005         	goto	l3803
  3011  000A94                     u4270:
  3012  000A94                     
  3013                           ; BSR set to: 0
  3014                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  3015  000A94  0E00               	movlw	low _dbuf
  3016  000A96  2597               	addwf	efgtoa@n& (0+255),w,b
  3017  000A98  6E01               	movwf	strcpy@dest^0,c
  3018  000A9A  0E01               	movlw	high _dbuf
  3019  000A9C  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3020  000A9E  6E02               	movwf	(strcpy@dest+1)^0,c
  3021  000AA0  0E88               	movlw	low STR_16
  3022  000AA2  6E03               	movwf	strcpy@src^0,c
  3023  000AA4  0E08               	movlw	high STR_16
  3024  000AA6  6E04               	movwf	(strcpy@src+1)^0,c
  3025  000AA8  ECAA  F01C         	call	_strcpy	;wreg free
  3026                           
  3027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  3028  000AAC  EFFA  F004         	goto	l3787
  3029  000AB0                     l3803:
  3030                           
  3031                           ; BSR set to: 0
  3032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  3033  000AB0  0E00               	movlw	low _dbuf
  3034  000AB2  2597               	addwf	efgtoa@n& (0+255),w,b
  3035  000AB4  6E01               	movwf	strcpy@dest^0,c
  3036  000AB6  0E01               	movlw	high _dbuf
  3037  000AB8  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3038  000ABA  6E02               	movwf	(strcpy@dest+1)^0,c
  3039  000ABC  0E90               	movlw	low STR_17
  3040  000ABE  6E03               	movwf	strcpy@src^0,c
  3041  000AC0  0E08               	movlw	high STR_17
  3042  000AC2  6E04               	movwf	(strcpy@src+1)^0,c
  3043  000AC4  ECAA  F01C         	call	_strcpy	;wreg free
  3044  000AC8  EFFA  F004         	goto	l3787
  3045  000ACC                     l3811:
  3046                           
  3047                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  3048  000ACC  0E00               	movlw	0
  3049  000ACE  0100               	movlb	0	; () banked
  3050  000AD0  6F99               	movwf	efgtoa@u& (0+255),b
  3051  000AD2  0E00               	movlw	0
  3052  000AD4  6F9A               	movwf	(efgtoa@u+1)& (0+255),b
  3053  000AD6  0E80               	movlw	128
  3054  000AD8  6F9B               	movwf	(efgtoa@u+2)& (0+255),b
  3055  000ADA  0E3F               	movlw	63
  3056  000ADC  6F9C               	movwf	(efgtoa@u+3)& (0+255),b
  3057                           
  3058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  3059  000ADE  0E00               	movlw	0
  3060  000AE0  6F96               	movwf	(efgtoa@e+1)& (0+255),b
  3061  000AE2  0E00               	movlw	0
  3062  000AE4  6F95               	movwf	efgtoa@e& (0+255),b
  3063  000AE6                     
  3064                           ; BSR set to: 0
  3065                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  3066  000AE6  C091  F001         	movff	efgtoa@g,___fleq@ff1
  3067  000AEA  C092  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3068  000AEE  C093  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3069  000AF2  C094  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3070  000AF6  0E00               	movlw	0
  3071  000AF8  6E05               	movwf	___fleq@ff2^0,c
  3072  000AFA  0E00               	movlw	0
  3073  000AFC  6E06               	movwf	(___fleq@ff2+1)^0,c
  3074  000AFE  0E00               	movlw	0
  3075  000B00  6E07               	movwf	(___fleq@ff2+2)^0,c
  3076  000B02  0E00               	movlw	0
  3077  000B04  6E08               	movwf	(___fleq@ff2+3)^0,c
  3078  000B06  ECBB  F01B         	call	___fleq	;wreg free
  3079  000B0A  B0D8               	btfsc	status,0,c
  3080  000B0C  EF8A  F005         	goto	u4281
  3081  000B10  EF8C  F005         	goto	u4280
  3082  000B14                     u4281:
  3083  000B14  EF0F  F006         	goto	l3829
  3084  000B18                     u4280:
  3085  000B18  EFAB  F005         	goto	l3821
  3086  000B1C                     l3817:
  3087                           
  3088                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  3089  000B1C  C099  F00F         	movff	efgtoa@u,___flmul@b
  3090  000B20  C09A  F010         	movff	efgtoa@u+1,___flmul@b+1
  3091  000B24  C09B  F011         	movff	efgtoa@u+2,___flmul@b+2
  3092  000B28  C09C  F012         	movff	efgtoa@u+3,___flmul@b+3
  3093  000B2C  0E00               	movlw	0
  3094  000B2E  6E13               	movwf	___flmul@a^0,c
  3095  000B30  0E00               	movlw	0
  3096  000B32  6E14               	movwf	(___flmul@a+1)^0,c
  3097  000B34  0E20               	movlw	32
  3098  000B36  6E15               	movwf	(___flmul@a+2)^0,c
  3099  000B38  0E41               	movlw	65
  3100  000B3A  6E16               	movwf	(___flmul@a+3)^0,c
  3101  000B3C  EC48  F011         	call	___flmul	;wreg free
  3102  000B40  C00F  F099         	movff	?___flmul,efgtoa@u
  3103  000B44  C010  F09A         	movff	?___flmul+1,efgtoa@u+1
  3104  000B48  C011  F09B         	movff	?___flmul+2,efgtoa@u+2
  3105  000B4C  C012  F09C         	movff	?___flmul+3,efgtoa@u+3
  3106  000B50                     
  3107                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  3108  000B50  0100               	movlb	0	; () banked
  3109  000B52  4B95               	infsnz	efgtoa@e& (0+255),f,b
  3110  000B54  2B96               	incf	(efgtoa@e+1)& (0+255),f,b
  3111  000B56                     l3821:
  3112                           
  3113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  3114  000B56  C091  F028         	movff	efgtoa@g,___flge@ff1
  3115  000B5A  C092  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3116  000B5E  C093  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3117  000B62  C094  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3118  000B66  0E00               	movlw	0
  3119  000B68  6E13               	movwf	___flmul@a^0,c
  3120  000B6A  0E00               	movlw	0
  3121  000B6C  6E14               	movwf	(___flmul@a+1)^0,c
  3122  000B6E  0E20               	movlw	32
  3123  000B70  6E15               	movwf	(___flmul@a+2)^0,c
  3124  000B72  0E41               	movlw	65
  3125  000B74  6E16               	movwf	(___flmul@a+3)^0,c
  3126  000B76  C099  F00F         	movff	efgtoa@u,___flmul@b
  3127  000B7A  C09A  F010         	movff	efgtoa@u+1,___flmul@b+1
  3128  000B7E  C09B  F011         	movff	efgtoa@u+2,___flmul@b+2
  3129  000B82  C09C  F012         	movff	efgtoa@u+3,___flmul@b+3
  3130  000B86  EC48  F011         	call	___flmul	;wreg free
  3131  000B8A  C00F  F02C         	movff	?___flmul,___flge@ff2
  3132  000B8E  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  3133  000B92  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  3134  000B96  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  3135  000B9A  EC58  F018         	call	___flge	;wreg free
  3136  000B9E  B0D8               	btfsc	status,0,c
  3137  000BA0  EFD4  F005         	goto	u4291
  3138  000BA4  EFD6  F005         	goto	u4290
  3139  000BA8                     u4291:
  3140  000BA8  EF8E  F005         	goto	l3817
  3141  000BAC                     u4290:
  3142  000BAC  EFF6  F005         	goto	l3827
  3143  000BB0                     l3823:
  3144                           
  3145                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  3146  000BB0  C099  F028         	movff	efgtoa@u,___fldiv@b
  3147  000BB4  C09A  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3148  000BB8  C09B  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3149  000BBC  C09C  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3150  000BC0  0E00               	movlw	0
  3151  000BC2  6E2C               	movwf	___fldiv@a^0,c
  3152  000BC4  0E00               	movlw	0
  3153  000BC6  6E2D               	movwf	(___fldiv@a+1)^0,c
  3154  000BC8  0E20               	movlw	32
  3155  000BCA  6E2E               	movwf	(___fldiv@a+2)^0,c
  3156  000BCC  0E41               	movlw	65
  3157  000BCE  6E2F               	movwf	(___fldiv@a+3)^0,c
  3158  000BD0  EC5D  F013         	call	___fldiv	;wreg free
  3159  000BD4  C028  F099         	movff	?___fldiv,efgtoa@u
  3160  000BD8  C029  F09A         	movff	?___fldiv+1,efgtoa@u+1
  3161  000BDC  C02A  F09B         	movff	?___fldiv+2,efgtoa@u+2
  3162  000BE0  C02B  F09C         	movff	?___fldiv+3,efgtoa@u+3
  3163  000BE4                     
  3164                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  3165  000BE4  0100               	movlb	0	; () banked
  3166  000BE6  0795               	decf	efgtoa@e& (0+255),f,b
  3167  000BE8  A0D8               	btfss	status,0,c
  3168  000BEA  0796               	decf	(efgtoa@e+1)& (0+255),f,b
  3169  000BEC                     l3827:
  3170                           
  3171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  3172  000BEC  C091  F028         	movff	efgtoa@g,___flge@ff1
  3173  000BF0  C092  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3174  000BF4  C093  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3175  000BF8  C094  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3176  000BFC  C099  F02C         	movff	efgtoa@u,___flge@ff2
  3177  000C00  C09A  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  3178  000C04  C09B  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  3179  000C08  C09C  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  3180  000C0C  EC58  F018         	call	___flge	;wreg free
  3181  000C10  A0D8               	btfss	status,0,c
  3182  000C12  EF0D  F006         	goto	u4301
  3183  000C16  EF0F  F006         	goto	u4300
  3184  000C1A                     u4301:
  3185  000C1A  EFD8  F005         	goto	l3823
  3186  000C1E                     u4300:
  3187  000C1E                     l3829:
  3188                           
  3189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  3190  000C1E  C05B  F007         	movff	efgtoa@c,tolower@c
  3191  000C22  6A08               	clrf	(tolower@c+1)^0,c
  3192  000C24  EC7A  F01C         	call	_tolower	;wreg free
  3193  000C28  5007               	movf	?_tolower^0,w,c
  3194  000C2A  0100               	movlb	0	; () banked
  3195  000C2C  6F86               	movwf	efgtoa@mode& (0+255),b
  3196  000C2E                     
  3197                           ; BSR set to: 0
  3198                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  3199  000C2E  C086  F083         	movff	efgtoa@mode,efgtoa@nmode
  3200  000C32                     
  3201                           ; BSR set to: 0
  3202                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  3203  000C32  0E67               	movlw	103
  3204  000C34  1986               	xorwf	efgtoa@mode& (0+255),w,b
  3205  000C36  A4D8               	btfss	status,2,c
  3206  000C38  EF20  F006         	goto	u4311
  3207  000C3C  EF22  F006         	goto	u4310
  3208  000C40                     u4311:
  3209  000C40  EF48  F006         	goto	l3843
  3210  000C44                     u4310:
  3211  000C44                     
  3212                           ; BSR set to: 0
  3213                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  3214  000C44  51DB               	movf	_prec& (0+255),w,b
  3215  000C46  11DC               	iorwf	(_prec+1)& (0+255),w,b
  3216  000C48  A4D8               	btfss	status,2,c
  3217  000C4A  EF29  F006         	goto	u4321
  3218  000C4E  EF2B  F006         	goto	u4320
  3219  000C52                     u4321:
  3220  000C52  EF2F  F006         	goto	l3839
  3221  000C56                     u4320:
  3222  000C56                     
  3223                           ; BSR set to: 0
  3224                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  3225  000C56  0E00               	movlw	0
  3226  000C58  6FDC               	movwf	(_prec+1)& (0+255),b
  3227  000C5A  0E01               	movlw	1
  3228  000C5C  6FDB               	movwf	_prec& (0+255),b
  3229  000C5E                     l3839:
  3230                           
  3231                           ; BSR set to: 0
  3232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  3233  000C5E  BFDC               	btfsc	(_prec+1)& (0+255),7,b
  3234  000C60  EF3C  F006         	goto	u4330
  3235  000C64  51DC               	movf	(_prec+1)& (0+255),w,b
  3236  000C66  E106               	bnz	u4331
  3237  000C68  05DB               	decf	_prec& (0+255),w,b
  3238  000C6A  B0D8               	btfsc	status,0,c
  3239  000C6C  EF3A  F006         	goto	u4331
  3240  000C70  EF3C  F006         	goto	u4330
  3241  000C74                     u4331:
  3242  000C74  EF42  F006         	goto	l286
  3243  000C78                     u4330:
  3244  000C78                     l3841:
  3245                           
  3246                           ; BSR set to: 0
  3247  000C78  0E00               	movlw	0
  3248  000C7A  6F82               	movwf	(efgtoa@p+1)& (0+255),b
  3249  000C7C  0E06               	movlw	6
  3250  000C7E  6F81               	movwf	efgtoa@p& (0+255),b
  3251  000C80  EF51  F006         	goto	l3849
  3252  000C84                     l286:
  3253                           
  3254                           ; BSR set to: 0
  3255  000C84  C0DB  F081         	movff	_prec,efgtoa@p
  3256  000C88  C0DC  F082         	movff	_prec+1,efgtoa@p+1
  3257  000C8C  EF51  F006         	goto	l3849
  3258  000C90                     l3843:
  3259                           
  3260                           ; BSR set to: 0
  3261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  3262  000C90  BFDC               	btfsc	(_prec+1)& (0+255),7,b
  3263  000C92  EF4D  F006         	goto	u4341
  3264  000C96  EF4F  F006         	goto	u4340
  3265  000C9A                     u4341:
  3266  000C9A  EF3C  F006         	goto	l3841
  3267  000C9E                     u4340:
  3268  000C9E  EF42  F006         	goto	l286
  3269  000CA2                     l3849:
  3270                           
  3271                           ; BSR set to: 0
  3272                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  3273  000CA2  0E67               	movlw	103
  3274  000CA4  1986               	xorwf	efgtoa@mode& (0+255),w,b
  3275  000CA6  A4D8               	btfss	status,2,c
  3276  000CA8  EF58  F006         	goto	u4351
  3277  000CAC  EF5A  F006         	goto	u4350
  3278  000CB0                     u4351:
  3279  000CB0  EF89  F006         	goto	l3859
  3280  000CB4                     u4350:
  3281  000CB4                     
  3282                           ; BSR set to: 0
  3283                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  3284  000CB4  AF96               	btfss	(efgtoa@e+1)& (0+255),7,b
  3285  000CB6  EF68  F006         	goto	u4360
  3286  000CBA  0EFC               	movlw	252
  3287  000CBC  5D95               	subwf	efgtoa@e& (0+255),w,b
  3288  000CBE  0EFF               	movlw	255
  3289  000CC0  5996               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3290  000CC2  A0D8               	btfss	status,0,c
  3291  000CC4  EF66  F006         	goto	u4361
  3292  000CC8  EF68  F006         	goto	u4360
  3293  000CCC                     u4361:
  3294  000CCC  EF87  F006         	goto	l3857
  3295  000CD0                     u4360:
  3296  000CD0                     
  3297                           ; BSR set to: 0
  3298  000CD0  0EFF               	movlw	255
  3299  000CD2  6F60               	movwf	??_efgtoa& (0+255),b
  3300  000CD4  0EFF               	movlw	255
  3301  000CD6  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  3302  000CD8  C081  F062         	movff	efgtoa@p,??_efgtoa+2
  3303  000CDC  C082  F063         	movff	efgtoa@p+1,??_efgtoa+3
  3304  000CE0  5160               	movf	??_efgtoa& (0+255),w,b
  3305  000CE2  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  3306  000CE4  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  3307  000CE6  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3308  000CE8  5195               	movf	efgtoa@e& (0+255),w,b
  3309  000CEA  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  3310  000CEC  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  3311  000CEE  0A80               	xorlw	128
  3312  000CF0  6F64               	movwf	(??_efgtoa+4)& (0+255),b
  3313  000CF2  5196               	movf	(efgtoa@e+1)& (0+255),w,b
  3314  000CF4  0A80               	xorlw	128
  3315  000CF6  5964               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3316  000CF8  A0D8               	btfss	status,0,c
  3317  000CFA  EF81  F006         	goto	u4371
  3318  000CFE  EF83  F006         	goto	u4370
  3319  000D02                     u4371:
  3320  000D02  EF87  F006         	goto	l3857
  3321  000D06                     u4370:
  3322  000D06                     
  3323                           ; BSR set to: 0
  3324                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  3325  000D06  0E66               	movlw	102
  3326  000D08  6F83               	movwf	efgtoa@nmode& (0+255),b
  3327                           
  3328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  3329  000D0A  EF89  F006         	goto	l3859
  3330  000D0E                     l3857:
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  3334  000D0E  0E65               	movlw	101
  3335  000D10  6F83               	movwf	efgtoa@nmode& (0+255),b
  3336  000D12                     l3859:
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  3340  000D12  C081  F079         	movff	efgtoa@p,efgtoa@m
  3341  000D16  C082  F07A         	movff	efgtoa@p+1,efgtoa@m+1
  3342  000D1A                     
  3343                           ; BSR set to: 0
  3344                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  3345  000D1A  0E67               	movlw	103
  3346  000D1C  1986               	xorwf	efgtoa@mode& (0+255),w,b
  3347  000D1E  A4D8               	btfss	status,2,c
  3348  000D20  EF94  F006         	goto	u4381
  3349  000D24  EF96  F006         	goto	u4380
  3350  000D28                     u4381:
  3351  000D28  EFA6  F006         	goto	l3867
  3352  000D2C                     u4380:
  3353  000D2C                     
  3354                           ; BSR set to: 0
  3355  000D2C  0E66               	movlw	102
  3356  000D2E  1983               	xorwf	efgtoa@nmode& (0+255),w,b
  3357  000D30  A4D8               	btfss	status,2,c
  3358  000D32  EF9D  F006         	goto	u4391
  3359  000D36  EF9F  F006         	goto	u4390
  3360  000D3A                     u4391:
  3361  000D3A  EFA8  F006         	goto	l3869
  3362  000D3E                     u4390:
  3363  000D3E                     
  3364                           ; BSR set to: 0
  3365  000D3E  BF96               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3366  000D40  EFA6  F006         	goto	u4400
  3367  000D44  EFA4  F006         	goto	u4401
  3368  000D48                     u4401:
  3369  000D48  EFA8  F006         	goto	l3869
  3370  000D4C                     u4400:
  3371  000D4C                     l3867:
  3372                           
  3373                           ; BSR set to: 0
  3374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  3375  000D4C  4B79               	infsnz	efgtoa@m& (0+255),f,b
  3376  000D4E  2B7A               	incf	(efgtoa@m+1)& (0+255),f,b
  3377  000D50                     l3869:
  3378                           
  3379                           ; BSR set to: 0
  3380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  3381  000D50  0E66               	movlw	102
  3382  000D52  1983               	xorwf	efgtoa@nmode& (0+255),w,b
  3383  000D54  A4D8               	btfss	status,2,c
  3384  000D56  EFAF  F006         	goto	u4411
  3385  000D5A  EFB1  F006         	goto	u4410
  3386  000D5E                     u4411:
  3387  000D5E  EFD1  F006         	goto	l3879
  3388  000D62                     u4410:
  3389  000D62                     
  3390                           ; BSR set to: 0
  3391                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  3392  000D62  BF96               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3393  000D64  EFB8  F006         	goto	u4420
  3394  000D68  EFB6  F006         	goto	u4421
  3395  000D6C                     u4421:
  3396  000D6C  EFC4  F006         	goto	l3875
  3397  000D70                     u4420:
  3398  000D70                     
  3399                           ; BSR set to: 0
  3400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  3401  000D70  0E00               	movlw	0
  3402  000D72  6F99               	movwf	efgtoa@u& (0+255),b
  3403  000D74  0E00               	movlw	0
  3404  000D76  6F9A               	movwf	(efgtoa@u+1)& (0+255),b
  3405  000D78  0E80               	movlw	128
  3406  000D7A  6F9B               	movwf	(efgtoa@u+2)& (0+255),b
  3407  000D7C  0E3F               	movlw	63
  3408  000D7E  6F9C               	movwf	(efgtoa@u+3)& (0+255),b
  3409                           
  3410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  3411  000D80  0E00               	movlw	0
  3412  000D82  6F96               	movwf	(efgtoa@e+1)& (0+255),b
  3413  000D84  0E00               	movlw	0
  3414  000D86  6F95               	movwf	efgtoa@e& (0+255),b
  3415  000D88                     l3875:
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  3419  000D88  0E67               	movlw	103
  3420  000D8A  1986               	xorwf	efgtoa@mode& (0+255),w,b
  3421  000D8C  B4D8               	btfsc	status,2,c
  3422  000D8E  EFCB  F006         	goto	u4431
  3423  000D92  EFCD  F006         	goto	u4430
  3424  000D96                     u4431:
  3425  000D96  EFD1  F006         	goto	l3879
  3426  000D9A                     u4430:
  3427  000D9A                     
  3428                           ; BSR set to: 0
  3429                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  3430  000D9A  5195               	movf	efgtoa@e& (0+255),w,b
  3431  000D9C  2779               	addwf	efgtoa@m& (0+255),f,b
  3432  000D9E  5196               	movf	(efgtoa@e+1)& (0+255),w,b
  3433  000DA0  237A               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3434  000DA2                     l3879:
  3435                           
  3436                           ; BSR set to: 0
  3437                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  3438  000DA2  0E00               	movlw	0
  3439  000DA4  6F90               	movwf	(efgtoa@i+1)& (0+255),b
  3440  000DA6  0E00               	movlw	0
  3441  000DA8  6F8F               	movwf	efgtoa@i& (0+255),b
  3442  000DAA                     
  3443                           ; BSR set to: 0
  3444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  3445  000DAA  C091  F087         	movff	efgtoa@g,efgtoa@h
  3446  000DAE  C092  F088         	movff	efgtoa@g+1,efgtoa@h+1
  3447  000DB2  C093  F089         	movff	efgtoa@g+2,efgtoa@h+2
  3448  000DB6  C094  F08A         	movff	efgtoa@g+3,efgtoa@h+3
  3449  000DBA                     
  3450                           ; BSR set to: 0
  3451                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  3452  000DBA  C099  F065         	movff	efgtoa@u,efgtoa@ou
  3453  000DBE  C09A  F066         	movff	efgtoa@u+1,efgtoa@ou+1
  3454  000DC2  C09B  F067         	movff	efgtoa@u+2,efgtoa@ou+2
  3455  000DC6  C09C  F068         	movff	efgtoa@u+3,efgtoa@ou+3
  3456                           
  3457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3458  000DCA  EF62  F007         	goto	l3893
  3459  000DCE                     l3885:
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  3463  000DCE  C087  F028         	movff	efgtoa@h,___fldiv@b
  3464  000DD2  C088  F029         	movff	efgtoa@h+1,___fldiv@b+1
  3465  000DD6  C089  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  3466  000DDA  C08A  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  3467  000DDE  C099  F02C         	movff	efgtoa@u,___fldiv@a
  3468  000DE2  C09A  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  3469  000DE6  C09B  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  3470  000DEA  C09C  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  3471  000DEE  EC5D  F013         	call	___fldiv	;wreg free
  3472  000DF2  C028  F041         	movff	?___fldiv,floorf@x
  3473  000DF6  C029  F042         	movff	?___fldiv+1,floorf@x+1
  3474  000DFA  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  3475  000DFE  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  3476  000E02  EC2A  F015         	call	_floorf	;wreg free
  3477  000E06  C041  F08B         	movff	?_floorf,efgtoa@l
  3478  000E0A  C042  F08C         	movff	?_floorf+1,efgtoa@l+1
  3479  000E0E  C043  F08D         	movff	?_floorf+2,efgtoa@l+2
  3480  000E12  C044  F08E         	movff	?_floorf+3,efgtoa@l+3
  3481                           
  3482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  3483  000E16  C08B  F001         	movff	efgtoa@l,___fltol@f1
  3484  000E1A  C08C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3485  000E1E  C08D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3486  000E22  C08E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3487  000E26  ECD5  F017         	call	___fltol	;wreg free
  3488  000E2A  C001  F07D         	movff	?___fltol,efgtoa@d
  3489  000E2E  C002  F07E         	movff	?___fltol+1,efgtoa@d+1
  3490  000E32                     
  3491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  3492  000E32  C087  F028         	movff	efgtoa@h,___flsub@b
  3493  000E36  C088  F029         	movff	efgtoa@h+1,___flsub@b+1
  3494  000E3A  C089  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3495  000E3E  C08A  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3496  000E42  C099  F013         	movff	efgtoa@u,___flmul@a
  3497  000E46  C09A  F014         	movff	efgtoa@u+1,___flmul@a+1
  3498  000E4A  C09B  F015         	movff	efgtoa@u+2,___flmul@a+2
  3499  000E4E  C09C  F016         	movff	efgtoa@u+3,___flmul@a+3
  3500  000E52  C08B  F00F         	movff	efgtoa@l,___flmul@b
  3501  000E56  C08C  F010         	movff	efgtoa@l+1,___flmul@b+1
  3502  000E5A  C08D  F011         	movff	efgtoa@l+2,___flmul@b+2
  3503  000E5E  C08E  F012         	movff	efgtoa@l+3,___flmul@b+3
  3504  000E62  EC48  F011         	call	___flmul	;wreg free
  3505  000E66  C00F  F02C         	movff	?___flmul,___flsub@a
  3506  000E6A  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3507  000E6E  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3508  000E72  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3509  000E76  ECA4  F01D         	call	___flsub	;wreg free
  3510  000E7A  C028  F087         	movff	?___flsub,efgtoa@h
  3511  000E7E  C029  F088         	movff	?___flsub+1,efgtoa@h+1
  3512  000E82  C02A  F089         	movff	?___flsub+2,efgtoa@h+2
  3513  000E86  C02B  F08A         	movff	?___flsub+3,efgtoa@h+3
  3514  000E8A                     
  3515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  3516  000E8A  C099  F028         	movff	efgtoa@u,___fldiv@b
  3517  000E8E  C09A  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3518  000E92  C09B  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3519  000E96  C09C  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3520  000E9A  0E00               	movlw	0
  3521  000E9C  6E2C               	movwf	___fldiv@a^0,c
  3522  000E9E  0E00               	movlw	0
  3523  000EA0  6E2D               	movwf	(___fldiv@a+1)^0,c
  3524  000EA2  0E20               	movlw	32
  3525  000EA4  6E2E               	movwf	(___fldiv@a+2)^0,c
  3526  000EA6  0E41               	movlw	65
  3527  000EA8  6E2F               	movwf	(___fldiv@a+3)^0,c
  3528  000EAA  EC5D  F013         	call	___fldiv	;wreg free
  3529  000EAE  C028  F099         	movff	?___fldiv,efgtoa@u
  3530  000EB2  C029  F09A         	movff	?___fldiv+1,efgtoa@u+1
  3531  000EB6  C02A  F09B         	movff	?___fldiv+2,efgtoa@u+2
  3532  000EBA  C02B  F09C         	movff	?___fldiv+3,efgtoa@u+3
  3533  000EBE                     
  3534                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  3535  000EBE  0100               	movlb	0	; () banked
  3536  000EC0  4B8F               	infsnz	efgtoa@i& (0+255),f,b
  3537  000EC2  2B90               	incf	(efgtoa@i+1)& (0+255),f,b
  3538  000EC4                     l3893:
  3539                           
  3540                           ; BSR set to: 0
  3541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3542  000EC4  5179               	movf	efgtoa@m& (0+255),w,b
  3543  000EC6  5D8F               	subwf	efgtoa@i& (0+255),w,b
  3544  000EC8  5190               	movf	(efgtoa@i+1)& (0+255),w,b
  3545  000ECA  0A80               	xorlw	128
  3546  000ECC  6F60               	movwf	??_efgtoa& (0+255),b
  3547  000ECE  517A               	movf	(efgtoa@m+1)& (0+255),w,b
  3548  000ED0  0A80               	xorlw	128
  3549  000ED2  5960               	subwfb	??_efgtoa& (0+255),w,b
  3550  000ED4  A0D8               	btfss	status,0,c
  3551  000ED6  EF6F  F007         	goto	u4441
  3552  000EDA  EF71  F007         	goto	u4440
  3553  000EDE                     u4441:
  3554  000EDE  EFE7  F006         	goto	l3885
  3555  000EE2                     u4440:
  3556  000EE2                     
  3557                           ; BSR set to: 0
  3558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  3559  000EE2  C099  F00F         	movff	efgtoa@u,___flmul@b
  3560  000EE6  C09A  F010         	movff	efgtoa@u+1,___flmul@b+1
  3561  000EEA  C09B  F011         	movff	efgtoa@u+2,___flmul@b+2
  3562  000EEE  C09C  F012         	movff	efgtoa@u+3,___flmul@b+3
  3563  000EF2  0E00               	movlw	0
  3564  000EF4  6E13               	movwf	___flmul@a^0,c
  3565  000EF6  0E00               	movlw	0
  3566  000EF8  6E14               	movwf	(___flmul@a+1)^0,c
  3567  000EFA  0EA0               	movlw	160
  3568  000EFC  6E15               	movwf	(___flmul@a+2)^0,c
  3569  000EFE  0E40               	movlw	64
  3570  000F00  6E16               	movwf	(___flmul@a+3)^0,c
  3571  000F02  EC48  F011         	call	___flmul	;wreg free
  3572  000F06  C00F  F08B         	movff	?___flmul,efgtoa@l
  3573  000F0A  C010  F08C         	movff	?___flmul+1,efgtoa@l+1
  3574  000F0E  C011  F08D         	movff	?___flmul+2,efgtoa@l+2
  3575  000F12  C012  F08E         	movff	?___flmul+3,efgtoa@l+3
  3576  000F16                     
  3577                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  3578  000F16  C087  F028         	movff	efgtoa@h,___flge@ff1
  3579  000F1A  C088  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3580  000F1E  C089  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3581  000F22  C08A  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3582  000F26  C08B  F02C         	movff	efgtoa@l,___flge@ff2
  3583  000F2A  C08C  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  3584  000F2E  C08D  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  3585  000F32  C08E  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  3586  000F36  EC58  F018         	call	___flge	;wreg free
  3587  000F3A  B0D8               	btfsc	status,0,c
  3588  000F3C  EFA2  F007         	goto	u4451
  3589  000F40  EFA4  F007         	goto	u4450
  3590  000F44                     u4451:
  3591  000F44  EFAF  F007         	goto	l3901
  3592  000F48                     u4450:
  3593  000F48                     
  3594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  3595  000F48  0E00               	movlw	0
  3596  000F4A  0100               	movlb	0	; () banked
  3597  000F4C  6F8B               	movwf	efgtoa@l& (0+255),b
  3598  000F4E  0E00               	movlw	0
  3599  000F50  6F8C               	movwf	(efgtoa@l+1)& (0+255),b
  3600  000F52  0E00               	movlw	0
  3601  000F54  6F8D               	movwf	(efgtoa@l+2)& (0+255),b
  3602  000F56  0E00               	movlw	0
  3603  000F58  6F8E               	movwf	(efgtoa@l+3)& (0+255),b
  3604                           
  3605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  3606  000F5A  EFD8  F007         	goto	l3907
  3607  000F5E                     l3901:
  3608                           
  3609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  3610  000F5E  C087  F001         	movff	efgtoa@h,___fleq@ff1
  3611  000F62  C088  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3612  000F66  C089  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3613  000F6A  C08A  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3614  000F6E  C08B  F005         	movff	efgtoa@l,___fleq@ff2
  3615  000F72  C08C  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3616  000F76  C08D  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3617  000F7A  C08E  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3618  000F7E  ECBB  F01B         	call	___fleq	;wreg free
  3619  000F82  A0D8               	btfss	status,0,c
  3620  000F84  EFC6  F007         	goto	u4461
  3621  000F88  EFC8  F007         	goto	u4460
  3622  000F8C                     u4461:
  3623  000F8C  EFD8  F007         	goto	l3907
  3624  000F90                     u4460:
  3625  000F90  0100               	movlb	0	; () banked
  3626  000F92  B17D               	btfsc	efgtoa@d& (0+255),0,b
  3627  000F94  EFCE  F007         	goto	u4471
  3628  000F98  EFD0  F007         	goto	u4470
  3629  000F9C                     u4471:
  3630  000F9C  EFD8  F007         	goto	l3907
  3631  000FA0                     u4470:
  3632  000FA0                     
  3633                           ; BSR set to: 0
  3634                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  3635  000FA0  0E00               	movlw	0
  3636  000FA2  6F8B               	movwf	efgtoa@l& (0+255),b
  3637  000FA4  0E00               	movlw	0
  3638  000FA6  6F8C               	movwf	(efgtoa@l+1)& (0+255),b
  3639  000FA8  0E00               	movlw	0
  3640  000FAA  6F8D               	movwf	(efgtoa@l+2)& (0+255),b
  3641  000FAC  0E00               	movlw	0
  3642  000FAE  6F8E               	movwf	(efgtoa@l+3)& (0+255),b
  3643  000FB0                     l3907:
  3644                           
  3645                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  3646  000FB0  C091  F001         	movff	efgtoa@g,___fladd@b
  3647  000FB4  C092  F002         	movff	efgtoa@g+1,___fladd@b+1
  3648  000FB8  C093  F003         	movff	efgtoa@g+2,___fladd@b+2
  3649  000FBC  C094  F004         	movff	efgtoa@g+3,___fladd@b+3
  3650  000FC0  C08B  F005         	movff	efgtoa@l,___fladd@a
  3651  000FC4  C08C  F006         	movff	efgtoa@l+1,___fladd@a+1
  3652  000FC8  C08D  F007         	movff	efgtoa@l+2,___fladd@a+2
  3653  000FCC  C08E  F008         	movff	efgtoa@l+3,___fladd@a+3
  3654  000FD0  ECB1  F00C         	call	___fladd	;wreg free
  3655  000FD4  C001  F087         	movff	?___fladd,efgtoa@h
  3656  000FD8  C002  F088         	movff	?___fladd+1,efgtoa@h+1
  3657  000FDC  C003  F089         	movff	?___fladd+2,efgtoa@h+2
  3658  000FE0  C004  F08A         	movff	?___fladd+3,efgtoa@h+3
  3659  000FE4                     
  3660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  3661  000FE4  C065  F099         	movff	efgtoa@ou,efgtoa@u
  3662  000FE8  C066  F09A         	movff	efgtoa@ou+1,efgtoa@u+1
  3663  000FEC  C067  F09B         	movff	efgtoa@ou+2,efgtoa@u+2
  3664  000FF0  C068  F09C         	movff	efgtoa@ou+3,efgtoa@u+3
  3665  000FF4                     
  3666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  3667  000FF4  0E65               	movlw	101
  3668  000FF6  0100               	movlb	0	; () banked
  3669  000FF8  1983               	xorwf	efgtoa@nmode& (0+255),w,b
  3670  000FFA  B4D8               	btfsc	status,2,c
  3671  000FFC  EF02  F008         	goto	u4481
  3672  001000  EF04  F008         	goto	u4480
  3673  001004                     u4481:
  3674  001004  EF0A  F008         	goto	l3915
  3675  001008                     u4480:
  3676  001008                     
  3677                           ; BSR set to: 0
  3678  001008  C095  F07B         	movff	efgtoa@e,efgtoa@ne
  3679  00100C  C096  F07C         	movff	efgtoa@e+1,efgtoa@ne+1
  3680  001010  EF0E  F008         	goto	l312
  3681  001014                     l3915:
  3682                           
  3683                           ; BSR set to: 0
  3684  001014  0E00               	movlw	0
  3685  001016  6F7C               	movwf	(efgtoa@ne+1)& (0+255),b
  3686  001018  0E00               	movlw	0
  3687  00101A  6F7B               	movwf	efgtoa@ne& (0+255),b
  3688  00101C                     l312:
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  3692  00101C  0E00               	movlw	0
  3693  00101E  6F78               	movwf	(efgtoa@pp+1)& (0+255),b
  3694  001020  0E00               	movlw	0
  3695  001022  6F77               	movwf	efgtoa@pp& (0+255),b
  3696                           
  3697                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  3698  001024  0E00               	movlw	0
  3699  001026  6F76               	movwf	(efgtoa@t+1)& (0+255),b
  3700  001028  0E00               	movlw	0
  3701  00102A  6F75               	movwf	efgtoa@t& (0+255),b
  3702                           
  3703                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  3704  00102C  0E00               	movlw	0
  3705  00102E  6F90               	movwf	(efgtoa@i+1)& (0+255),b
  3706  001030  0E00               	movlw	0
  3707  001032  6F8F               	movwf	efgtoa@i& (0+255),b
  3708                           
  3709                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3710  001034  EF09  F009         	goto	l3965
  3711  001038                     l3917:
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  3715  001038  C087  F028         	movff	efgtoa@h,___fldiv@b
  3716  00103C  C088  F029         	movff	efgtoa@h+1,___fldiv@b+1
  3717  001040  C089  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  3718  001044  C08A  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  3719  001048  C099  F02C         	movff	efgtoa@u,___fldiv@a
  3720  00104C  C09A  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  3721  001050  C09B  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  3722  001054  C09C  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  3723  001058  EC5D  F013         	call	___fldiv	;wreg free
  3724  00105C  C028  F041         	movff	?___fldiv,floorf@x
  3725  001060  C029  F042         	movff	?___fldiv+1,floorf@x+1
  3726  001064  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  3727  001068  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  3728  00106C  EC2A  F015         	call	_floorf	;wreg free
  3729  001070  C041  F08B         	movff	?_floorf,efgtoa@l
  3730  001074  C042  F08C         	movff	?_floorf+1,efgtoa@l+1
  3731  001078  C043  F08D         	movff	?_floorf+2,efgtoa@l+2
  3732  00107C  C044  F08E         	movff	?_floorf+3,efgtoa@l+3
  3733                           
  3734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  3735  001080  C08B  F001         	movff	efgtoa@l,___fltol@f1
  3736  001084  C08C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3737  001088  C08D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3738  00108C  C08E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3739  001090  ECD5  F017         	call	___fltol	;wreg free
  3740  001094  C001  F07D         	movff	?___fltol,efgtoa@d
  3741  001098  C002  F07E         	movff	?___fltol+1,efgtoa@d+1
  3742  00109C                     
  3743                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3744  00109C  0100               	movlb	0	; () banked
  3745  00109E  B9DD               	btfsc	_flags& (0+255),4,b
  3746  0010A0  EF54  F008         	goto	u4491
  3747  0010A4  EF56  F008         	goto	u4490
  3748  0010A8                     u4491:
  3749  0010A8  EF73  F008         	goto	l3929
  3750  0010AC                     u4490:
  3751  0010AC                     
  3752                           ; BSR set to: 0
  3753  0010AC  517D               	movf	efgtoa@d& (0+255),w,b
  3754  0010AE  117E               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3755  0010B0  A4D8               	btfss	status,2,c
  3756  0010B2  EF5D  F008         	goto	u4501
  3757  0010B6  EF5F  F008         	goto	u4500
  3758  0010BA                     u4501:
  3759  0010BA  EF73  F008         	goto	l3929
  3760  0010BE                     u4500:
  3761  0010BE                     
  3762                           ; BSR set to: 0
  3763  0010BE  0E67               	movlw	103
  3764  0010C0  1986               	xorwf	efgtoa@mode& (0+255),w,b
  3765  0010C2  A4D8               	btfss	status,2,c
  3766  0010C4  EF66  F008         	goto	u4511
  3767  0010C8  EF68  F008         	goto	u4510
  3768  0010CC                     u4511:
  3769  0010CC  EF73  F008         	goto	l3929
  3770  0010D0                     u4510:
  3771  0010D0                     
  3772                           ; BSR set to: 0
  3773  0010D0  BF7C               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3774  0010D2  EF6F  F008         	goto	u4520
  3775  0010D6  EF6D  F008         	goto	u4521
  3776  0010DA                     u4521:
  3777  0010DA  EF73  F008         	goto	l3929
  3778  0010DE                     u4520:
  3779  0010DE                     
  3780                           ; BSR set to: 0
  3781                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  3782  0010DE  4B75               	infsnz	efgtoa@t& (0+255),f,b
  3783  0010E0  2B76               	incf	(efgtoa@t+1)& (0+255),f,b
  3784                           
  3785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  3786  0010E2  EFBD  F008         	goto	l3957
  3787  0010E6                     l3929:
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  3791  0010E6  5177               	movf	efgtoa@pp& (0+255),w,b
  3792  0010E8  1178               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3793  0010EA  A4D8               	btfss	status,2,c
  3794  0010EC  EF7A  F008         	goto	u4531
  3795  0010F0  EF7C  F008         	goto	u4530
  3796  0010F4                     u4531:
  3797  0010F4  EFA6  F008         	goto	l3949
  3798  0010F8                     u4530:
  3799  0010F8                     
  3800                           ; BSR set to: 0
  3801  0010F8  BF7C               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3802  0010FA  EF83  F008         	goto	u4540
  3803  0010FE  EF81  F008         	goto	u4541
  3804  001102                     u4541:
  3805  001102  EFA6  F008         	goto	l3949
  3806  001106                     u4540:
  3807  001106                     
  3808                           ; BSR set to: 0
  3809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  3810  001106  0E00               	movlw	low _dbuf
  3811  001108  2597               	addwf	efgtoa@n& (0+255),w,b
  3812  00110A  6ED9               	movwf	fsr2l,c
  3813  00110C  0E01               	movlw	high _dbuf
  3814  00110E  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3815  001110  6EDA               	movwf	fsr2h,c
  3816  001112  0E2E               	movlw	46
  3817  001114  6EDF               	movwf	indf2,c
  3818  001116                     
  3819                           ; BSR set to: 0
  3820  001116  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3821  001118  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3822  00111A                     
  3823                           ; BSR set to: 0
  3824                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  3825  00111A  0784               	decf	efgtoa@w& (0+255),f,b
  3826  00111C  A0D8               	btfss	status,0,c
  3827  00111E  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3828  001120                     
  3829                           ; BSR set to: 0
  3830                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  3831  001120  0E00               	movlw	0
  3832  001122  6F78               	movwf	(efgtoa@pp+1)& (0+255),b
  3833  001124  0E01               	movlw	1
  3834  001126  6F77               	movwf	efgtoa@pp& (0+255),b
  3835  001128  EFA6  F008         	goto	l3949
  3836  00112C                     l3941:
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  3840  00112C  0E00               	movlw	low _dbuf
  3841  00112E  2597               	addwf	efgtoa@n& (0+255),w,b
  3842  001130  6ED9               	movwf	fsr2l,c
  3843  001132  0E01               	movlw	high _dbuf
  3844  001134  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3845  001136  6EDA               	movwf	fsr2h,c
  3846  001138  0E30               	movlw	48
  3847  00113A  6EDF               	movwf	indf2,c
  3848  00113C                     
  3849                           ; BSR set to: 0
  3850  00113C  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3851  00113E  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3852  001140                     
  3853                           ; BSR set to: 0
  3854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  3855  001140  0784               	decf	efgtoa@w& (0+255),f,b
  3856  001142  A0D8               	btfss	status,0,c
  3857  001144  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3858  001146                     
  3859                           ; BSR set to: 0
  3860                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  3861  001146  0775               	decf	efgtoa@t& (0+255),f,b
  3862  001148  A0D8               	btfss	status,0,c
  3863  00114A  0776               	decf	(efgtoa@t+1)& (0+255),f,b
  3864  00114C                     l3949:
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  3868  00114C  5175               	movf	efgtoa@t& (0+255),w,b
  3869  00114E  1176               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3870  001150  A4D8               	btfss	status,2,c
  3871  001152  EFAD  F008         	goto	u4551
  3872  001156  EFAF  F008         	goto	u4550
  3873  00115A                     u4551:
  3874  00115A  EF96  F008         	goto	l3941
  3875  00115E                     u4550:
  3876  00115E                     
  3877                           ; BSR set to: 0
  3878                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  3879  00115E  0E00               	movlw	low _dbuf
  3880  001160  2597               	addwf	efgtoa@n& (0+255),w,b
  3881  001162  6ED9               	movwf	fsr2l,c
  3882  001164  0E01               	movlw	high _dbuf
  3883  001166  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3884  001168  6EDA               	movwf	fsr2h,c
  3885  00116A  517D               	movf	efgtoa@d& (0+255),w,b
  3886  00116C  0F30               	addlw	48
  3887  00116E  6EDF               	movwf	indf2,c
  3888  001170                     
  3889                           ; BSR set to: 0
  3890  001170  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3891  001172  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3892  001174                     
  3893                           ; BSR set to: 0
  3894                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  3895  001174  0784               	decf	efgtoa@w& (0+255),f,b
  3896  001176  A0D8               	btfss	status,0,c
  3897  001178  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3898  00117A                     l3957:
  3899                           
  3900                           ; BSR set to: 0
  3901                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  3902  00117A  C087  F028         	movff	efgtoa@h,___flsub@b
  3903  00117E  C088  F029         	movff	efgtoa@h+1,___flsub@b+1
  3904  001182  C089  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3905  001186  C08A  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3906  00118A  C099  F013         	movff	efgtoa@u,___flmul@a
  3907  00118E  C09A  F014         	movff	efgtoa@u+1,___flmul@a+1
  3908  001192  C09B  F015         	movff	efgtoa@u+2,___flmul@a+2
  3909  001196  C09C  F016         	movff	efgtoa@u+3,___flmul@a+3
  3910  00119A  C08B  F00F         	movff	efgtoa@l,___flmul@b
  3911  00119E  C08C  F010         	movff	efgtoa@l+1,___flmul@b+1
  3912  0011A2  C08D  F011         	movff	efgtoa@l+2,___flmul@b+2
  3913  0011A6  C08E  F012         	movff	efgtoa@l+3,___flmul@b+3
  3914  0011AA  EC48  F011         	call	___flmul	;wreg free
  3915  0011AE  C00F  F02C         	movff	?___flmul,___flsub@a
  3916  0011B2  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3917  0011B6  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3918  0011BA  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3919  0011BE  ECA4  F01D         	call	___flsub	;wreg free
  3920  0011C2  C028  F087         	movff	?___flsub,efgtoa@h
  3921  0011C6  C029  F088         	movff	?___flsub+1,efgtoa@h+1
  3922  0011CA  C02A  F089         	movff	?___flsub+2,efgtoa@h+2
  3923  0011CE  C02B  F08A         	movff	?___flsub+3,efgtoa@h+3
  3924  0011D2                     
  3925                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  3926  0011D2  C099  F028         	movff	efgtoa@u,___fldiv@b
  3927  0011D6  C09A  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3928  0011DA  C09B  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3929  0011DE  C09C  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3930  0011E2  0E00               	movlw	0
  3931  0011E4  6E2C               	movwf	___fldiv@a^0,c
  3932  0011E6  0E00               	movlw	0
  3933  0011E8  6E2D               	movwf	(___fldiv@a+1)^0,c
  3934  0011EA  0E20               	movlw	32
  3935  0011EC  6E2E               	movwf	(___fldiv@a+2)^0,c
  3936  0011EE  0E41               	movlw	65
  3937  0011F0  6E2F               	movwf	(___fldiv@a+3)^0,c
  3938  0011F2  EC5D  F013         	call	___fldiv	;wreg free
  3939  0011F6  C028  F099         	movff	?___fldiv,efgtoa@u
  3940  0011FA  C029  F09A         	movff	?___fldiv+1,efgtoa@u+1
  3941  0011FE  C02A  F09B         	movff	?___fldiv+2,efgtoa@u+2
  3942  001202  C02B  F09C         	movff	?___fldiv+3,efgtoa@u+3
  3943  001206                     
  3944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  3945  001206  0100               	movlb	0	; () banked
  3946  001208  077B               	decf	efgtoa@ne& (0+255),f,b
  3947  00120A  A0D8               	btfss	status,0,c
  3948  00120C  077C               	decf	(efgtoa@ne+1)& (0+255),f,b
  3949  00120E                     
  3950                           ; BSR set to: 0
  3951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  3952  00120E  4B8F               	infsnz	efgtoa@i& (0+255),f,b
  3953  001210  2B90               	incf	(efgtoa@i+1)& (0+255),f,b
  3954  001212                     l3965:
  3955                           
  3956                           ; BSR set to: 0
  3957                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3958  001212  5179               	movf	efgtoa@m& (0+255),w,b
  3959  001214  5D8F               	subwf	efgtoa@i& (0+255),w,b
  3960  001216  5190               	movf	(efgtoa@i+1)& (0+255),w,b
  3961  001218  0A80               	xorlw	128
  3962  00121A  6F60               	movwf	??_efgtoa& (0+255),b
  3963  00121C  517A               	movf	(efgtoa@m+1)& (0+255),w,b
  3964  00121E  0A80               	xorlw	128
  3965  001220  5960               	subwfb	??_efgtoa& (0+255),w,b
  3966  001222  B0D8               	btfsc	status,0,c
  3967  001224  EF16  F009         	goto	u4561
  3968  001228  EF18  F009         	goto	u4560
  3969  00122C                     u4561:
  3970  00122C  EF26  F009         	goto	l3969
  3971  001230                     u4560:
  3972  001230                     
  3973                           ; BSR set to: 0
  3974  001230  BF98               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3975  001232  EF24  F009         	goto	u4571
  3976  001236  5198               	movf	(efgtoa@n+1)& (0+255),w,b
  3977  001238  E109               	bnz	u4570
  3978  00123A  0E4B               	movlw	75
  3979  00123C  5D97               	subwf	efgtoa@n& (0+255),w,b
  3980  00123E  A0D8               	btfss	status,0,c
  3981  001240  EF24  F009         	goto	u4571
  3982  001244  EF26  F009         	goto	u4570
  3983  001248                     u4571:
  3984  001248  EF1C  F008         	goto	l3917
  3985  00124C                     u4570:
  3986  00124C                     l3969:
  3987                           
  3988                           ; BSR set to: 0
  3989                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  3990  00124C  5177               	movf	efgtoa@pp& (0+255),w,b
  3991  00124E  1178               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3992  001250  A4D8               	btfss	status,2,c
  3993  001252  EF2D  F009         	goto	u4581
  3994  001256  EF2F  F009         	goto	u4580
  3995  00125A                     u4581:
  3996  00125A  EF40  F009         	goto	l3977
  3997  00125E                     u4580:
  3998  00125E                     
  3999                           ; BSR set to: 0
  4000  00125E  A9DD               	btfss	_flags& (0+255),4,b
  4001  001260  EF34  F009         	goto	u4591
  4002  001264  EF36  F009         	goto	u4590
  4003  001268                     u4591:
  4004  001268  EF40  F009         	goto	l3977
  4005  00126C                     u4590:
  4006  00126C                     
  4007                           ; BSR set to: 0
  4008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  4009  00126C  0E00               	movlw	low _dbuf
  4010  00126E  2597               	addwf	efgtoa@n& (0+255),w,b
  4011  001270  6ED9               	movwf	fsr2l,c
  4012  001272  0E01               	movlw	high _dbuf
  4013  001274  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4014  001276  6EDA               	movwf	fsr2h,c
  4015  001278  0E2E               	movlw	46
  4016  00127A  6EDF               	movwf	indf2,c
  4017  00127C                     
  4018                           ; BSR set to: 0
  4019  00127C  4B97               	infsnz	efgtoa@n& (0+255),f,b
  4020  00127E  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  4021  001280                     l3977:
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  4025  001280  0E00               	movlw	low _dbuf
  4026  001282  2597               	addwf	efgtoa@n& (0+255),w,b
  4027  001284  6ED9               	movwf	fsr2l,c
  4028  001286  0E01               	movlw	high _dbuf
  4029  001288  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4030  00128A  6EDA               	movwf	fsr2h,c
  4031  00128C  0E00               	movlw	0
  4032  00128E  6EDF               	movwf	indf2,c
  4033  001290                     
  4034                           ; BSR set to: 0
  4035                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  4036  001290  0E65               	movlw	101
  4037  001292  1983               	xorwf	efgtoa@nmode& (0+255),w,b
  4038  001294  A4D8               	btfss	status,2,c
  4039  001296  EF4F  F009         	goto	u4601
  4040  00129A  EF51  F009         	goto	u4600
  4041  00129E                     u4601:
  4042  00129E  EFFF  F004         	goto	l3789
  4043  0012A2                     u4600:
  4044  0012A2                     
  4045                           ; BSR set to: 0
  4046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  4047  0012A2  0E00               	movlw	0
  4048  0012A4  6F90               	movwf	(efgtoa@i+1)& (0+255),b
  4049  0012A6  0E4F               	movlw	79
  4050  0012A8  6F8F               	movwf	efgtoa@i& (0+255),b
  4051  0012AA                     
  4052                           ; BSR set to: 0
  4053                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  4054  0012AA  0E00               	movlw	low _dbuf
  4055  0012AC  258F               	addwf	efgtoa@i& (0+255),w,b
  4056  0012AE  6ED9               	movwf	fsr2l,c
  4057  0012B0  0E01               	movlw	high _dbuf
  4058  0012B2  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4059  0012B4  6EDA               	movwf	fsr2h,c
  4060  0012B6  0E00               	movlw	0
  4061  0012B8  6EDF               	movwf	indf2,c
  4062  0012BA                     
  4063                           ; BSR set to: 0
  4064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  4065  0012BA  0E00               	movlw	0
  4066  0012BC  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  4067  0012BE  0E00               	movlw	0
  4068  0012C0  6F7F               	movwf	efgtoa@sign& (0+255),b
  4069  0012C2                     
  4070                           ; BSR set to: 0
  4071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  4072  0012C2  BF96               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4073  0012C4  EF68  F009         	goto	u4610
  4074  0012C8  EF66  F009         	goto	u4611
  4075  0012CC                     u4611:
  4076  0012CC  EF70  F009         	goto	l3993
  4077  0012D0                     u4610:
  4078  0012D0                     
  4079                           ; BSR set to: 0
  4080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  4081  0012D0  0E00               	movlw	0
  4082  0012D2  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  4083  0012D4  0E01               	movlw	1
  4084  0012D6  6F7F               	movwf	efgtoa@sign& (0+255),b
  4085  0012D8                     
  4086                           ; BSR set to: 0
  4087                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  4088  0012D8  6D95               	negf	efgtoa@e& (0+255),b
  4089  0012DA  1F96               	comf	(efgtoa@e+1)& (0+255),f,b
  4090  0012DC  B0D8               	btfsc	status,0,c
  4091  0012DE  2B96               	incf	(efgtoa@e+1)& (0+255),f,b
  4092  0012E0                     l3993:
  4093                           
  4094                           ; BSR set to: 0
  4095                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  4096  0012E0  0E00               	movlw	0
  4097  0012E2  6F82               	movwf	(efgtoa@p+1)& (0+255),b
  4098  0012E4  0E02               	movlw	2
  4099  0012E6  6F81               	movwf	efgtoa@p& (0+255),b
  4100                           
  4101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4102  0012E8  EFA1  F009         	goto	l4005
  4103  0012EC                     l3995:
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  4107  0012EC  078F               	decf	efgtoa@i& (0+255),f,b
  4108  0012EE  A0D8               	btfss	status,0,c
  4109  0012F0  0790               	decf	(efgtoa@i+1)& (0+255),f,b
  4110  0012F2                     
  4111                           ; BSR set to: 0
  4112                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  4113  0012F2  0E00               	movlw	low _dbuf
  4114  0012F4  258F               	addwf	efgtoa@i& (0+255),w,b
  4115  0012F6  6ED9               	movwf	fsr2l,c
  4116  0012F8  0E01               	movlw	high _dbuf
  4117  0012FA  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4118  0012FC  6EDA               	movwf	fsr2h,c
  4119  0012FE  C095  F001         	movff	efgtoa@e,___awmod@dividend
  4120  001302  C096  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4121  001306  0E00               	movlw	0
  4122  001308  6E04               	movwf	(___awmod@divisor+1)^0,c
  4123  00130A  0E0A               	movlw	10
  4124  00130C  6E03               	movwf	___awmod@divisor^0,c
  4125  00130E  EC63  F01B         	call	___awmod	;wreg free
  4126  001312  5001               	movf	?___awmod^0,w,c
  4127  001314  0F30               	addlw	48
  4128  001316  6EDF               	movwf	indf2,c
  4129  001318                     
  4130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  4131  001318  C095  F001         	movff	efgtoa@e,___awdiv@dividend
  4132  00131C  C096  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4133  001320  0E00               	movlw	0
  4134  001322  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4135  001324  0E0A               	movlw	10
  4136  001326  6E03               	movwf	___awdiv@divisor^0,c
  4137  001328  EC01  F01B         	call	___awdiv	;wreg free
  4138  00132C  C001  F095         	movff	?___awdiv,efgtoa@e
  4139  001330  C002  F096         	movff	?___awdiv+1,efgtoa@e+1
  4140  001334                     
  4141                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  4142  001334  0100               	movlb	0	; () banked
  4143  001336  0781               	decf	efgtoa@p& (0+255),f,b
  4144  001338  A0D8               	btfss	status,0,c
  4145  00133A  0782               	decf	(efgtoa@p+1)& (0+255),f,b
  4146  00133C                     
  4147                           ; BSR set to: 0
  4148                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  4149  00133C  0784               	decf	efgtoa@w& (0+255),f,b
  4150  00133E  A0D8               	btfss	status,0,c
  4151  001340  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  4152  001342                     l4005:
  4153                           
  4154                           ; BSR set to: 0
  4155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4156  001342  5195               	movf	efgtoa@e& (0+255),w,b
  4157  001344  1196               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4158  001346  A4D8               	btfss	status,2,c
  4159  001348  EFA8  F009         	goto	u4621
  4160  00134C  EFAA  F009         	goto	u4620
  4161  001350                     u4621:
  4162  001350  EF76  F009         	goto	l3995
  4163  001354                     u4620:
  4164  001354                     
  4165                           ; BSR set to: 0
  4166  001354  BF82               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4167  001356  EFB7  F009         	goto	u4630
  4168  00135A  5182               	movf	(efgtoa@p+1)& (0+255),w,b
  4169  00135C  E106               	bnz	u4631
  4170  00135E  0581               	decf	efgtoa@p& (0+255),w,b
  4171  001360  B0D8               	btfsc	status,0,c
  4172  001362  EFB5  F009         	goto	u4631
  4173  001366  EFB7  F009         	goto	u4630
  4174  00136A                     u4631:
  4175  00136A  EF76  F009         	goto	l3995
  4176  00136E                     u4630:
  4177  00136E                     
  4178                           ; BSR set to: 0
  4179                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  4180  00136E  078F               	decf	efgtoa@i& (0+255),f,b
  4181  001370  A0D8               	btfss	status,0,c
  4182  001372  0790               	decf	(efgtoa@i+1)& (0+255),f,b
  4183  001374                     
  4184                           ; BSR set to: 0
  4185                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  4186  001374  517F               	movf	efgtoa@sign& (0+255),w,b
  4187  001376  1180               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4188  001378  A4D8               	btfss	status,2,c
  4189  00137A  EFC1  F009         	goto	u4641
  4190  00137E  EFC3  F009         	goto	u4640
  4191  001382                     u4641:
  4192  001382  EFC9  F009         	goto	l4015
  4193  001386                     u4640:
  4194  001386                     
  4195                           ; BSR set to: 0
  4196  001386  0E00               	movlw	0
  4197  001388  6F70               	movwf	(_efgtoa$635+1)& (0+255),b
  4198  00138A  0E2B               	movlw	43
  4199  00138C  6F6F               	movwf	_efgtoa$635& (0+255),b
  4200  00138E  EFCD  F009         	goto	l4017
  4201  001392                     l4015:
  4202                           
  4203                           ; BSR set to: 0
  4204  001392  0E00               	movlw	0
  4205  001394  6F70               	movwf	(_efgtoa$635+1)& (0+255),b
  4206  001396  0E2D               	movlw	45
  4207  001398  6F6F               	movwf	_efgtoa$635& (0+255),b
  4208  00139A                     l4017:
  4209                           
  4210                           ; BSR set to: 0
  4211  00139A  0E00               	movlw	low _dbuf
  4212  00139C  258F               	addwf	efgtoa@i& (0+255),w,b
  4213  00139E  6ED9               	movwf	fsr2l,c
  4214  0013A0  0E01               	movlw	high _dbuf
  4215  0013A2  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4216  0013A4  6EDA               	movwf	fsr2h,c
  4217  0013A6  C06F  FFDF         	movff	_efgtoa$635,indf2
  4218  0013AA                     
  4219                           ; BSR set to: 0
  4220                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  4221  0013AA  0784               	decf	efgtoa@w& (0+255),f,b
  4222  0013AC  A0D8               	btfss	status,0,c
  4223  0013AE  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  4224  0013B0                     
  4225                           ; BSR set to: 0
  4226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4227  0013B0  078F               	decf	efgtoa@i& (0+255),f,b
  4228  0013B2  A0D8               	btfss	status,0,c
  4229  0013B4  0790               	decf	(efgtoa@i+1)& (0+255),f,b
  4230  0013B6                     
  4231                           ; BSR set to: 0
  4232  0013B6  0EBF               	movlw	191
  4233  0013B8  6F60               	movwf	??_efgtoa& (0+255),b
  4234  0013BA  0EFF               	movlw	255
  4235  0013BC  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  4236  0013BE  505B               	movf	efgtoa@c^0,w,c
  4237  0013C0  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  4238  0013C2  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  4239  0013C4  5160               	movf	??_efgtoa& (0+255),w,b
  4240  0013C6  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  4241  0013C8  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  4242  0013CA  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4243  0013CC  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  4244  0013CE  E10A               	bnz	u4650
  4245  0013D0  0E1A               	movlw	26
  4246  0013D2  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  4247  0013D4  A0D8               	btfss	status,0,c
  4248  0013D6  EFEF  F009         	goto	u4651
  4249  0013DA  EFF2  F009         	goto	u4650
  4250  0013DE                     u4651:
  4251  0013DE  0E01               	movlw	1
  4252  0013E0  EFF3  F009         	goto	u4660
  4253  0013E4                     u4650:
  4254  0013E4  0E00               	movlw	0
  4255  0013E6                     u4660:
  4256  0013E6  6F73               	movwf	_efgtoa$637& (0+255),b
  4257  0013E8  6B74               	clrf	(_efgtoa$637+1)& (0+255),b
  4258  0013EA                     
  4259                           ; BSR set to: 0
  4260  0013EA  5173               	movf	_efgtoa$637& (0+255),w,b
  4261  0013EC  1174               	iorwf	(_efgtoa$637+1)& (0+255),w,b
  4262  0013EE  A4D8               	btfss	status,2,c
  4263  0013F0  EFFC  F009         	goto	u4671
  4264  0013F4  EFFE  F009         	goto	u4670
  4265  0013F8                     u4671:
  4266  0013F8  EF04  F00A         	goto	l4031
  4267  0013FC                     u4670:
  4268  0013FC                     
  4269                           ; BSR set to: 0
  4270  0013FC  0E00               	movlw	0
  4271  0013FE  6F72               	movwf	(_efgtoa$636+1)& (0+255),b
  4272  001400  0E65               	movlw	101
  4273  001402  6F71               	movwf	_efgtoa$636& (0+255),b
  4274  001404  EF08  F00A         	goto	l4033
  4275  001408                     l4031:
  4276                           
  4277                           ; BSR set to: 0
  4278  001408  0E00               	movlw	0
  4279  00140A  6F72               	movwf	(_efgtoa$636+1)& (0+255),b
  4280  00140C  0E45               	movlw	69
  4281  00140E  6F71               	movwf	_efgtoa$636& (0+255),b
  4282  001410                     l4033:
  4283                           
  4284                           ; BSR set to: 0
  4285  001410  0E00               	movlw	low _dbuf
  4286  001412  258F               	addwf	efgtoa@i& (0+255),w,b
  4287  001414  6ED9               	movwf	fsr2l,c
  4288  001416  0E01               	movlw	high _dbuf
  4289  001418  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4290  00141A  6EDA               	movwf	fsr2h,c
  4291  00141C  C071  FFDF         	movff	_efgtoa$636,indf2
  4292  001420                     
  4293                           ; BSR set to: 0
  4294                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  4295  001420  0784               	decf	efgtoa@w& (0+255),f,b
  4296  001422  A0D8               	btfss	status,0,c
  4297  001424  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  4298  001426                     
  4299                           ; BSR set to: 0
  4300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  4301  001426  0E00               	movlw	low _dbuf
  4302  001428  2597               	addwf	efgtoa@n& (0+255),w,b
  4303  00142A  6E01               	movwf	strcpy@dest^0,c
  4304  00142C  0E01               	movlw	high _dbuf
  4305  00142E  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4306  001430  6E02               	movwf	(strcpy@dest+1)^0,c
  4307  001432  0E00               	movlw	low _dbuf
  4308  001434  258F               	addwf	efgtoa@i& (0+255),w,b
  4309  001436  6E03               	movwf	strcpy@src^0,c
  4310  001438  0E01               	movlw	high _dbuf
  4311  00143A  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4312  00143C  6E04               	movwf	(strcpy@src+1)^0,c
  4313  00143E  ECAA  F01C         	call	_strcpy	;wreg free
  4314  001442  EFFF  F004         	goto	l3789
  4315  001446                     l268:
  4316  001446  0012               	return		;funcret
  4317  001448                     __end_of_efgtoa:
  4318                           	opt callstack 0
  4319                           
  4320 ;; *************** function _tolower *****************
  4321 ;; Defined at:
  4322 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  4323 ;; Parameters:    Size  Location     Type
  4324 ;;  c               2    6[COMRAM] int 
  4325 ;; Auto vars:     Size  Location     Type
  4326 ;;		None
  4327 ;; Return value:  Size  Location     Type
  4328 ;;                  2    6[COMRAM] int 
  4329 ;; Registers used:
  4330 ;;		wreg, status,2, status,0
  4331 ;; Tracked objects:
  4332 ;;		On entry : 0/0
  4333 ;;		On exit  : 0/0
  4334 ;;		Unchanged: 0/0
  4335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4336 ;;      Params:         2       0       0       0       0       0       0       0       0
  4337 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4338 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4339 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4340 ;;Total ram usage:        8 bytes
  4341 ;; Hardware stack levels used:    1
  4342 ;; Hardware stack levels required when called:    1
  4343 ;; This function calls:
  4344 ;;		_isupper
  4345 ;; This function is called by:
  4346 ;;		_efgtoa
  4347 ;;		_vfpfcnvrt
  4348 ;; This function uses a non-reentrant model
  4349 ;;
  4350                           
  4351                           	psect	text6
  4352  0038F4                     __ptext6:
  4353                           	opt callstack 0
  4354  0038F4                     _tolower:
  4355                           	opt callstack 26
  4356  0038F4  0EBF               	movlw	191
  4357  0038F6  6E09               	movwf	??_tolower^0,c
  4358  0038F8  0EFF               	movlw	255
  4359  0038FA  6E0A               	movwf	(??_tolower+1)^0,c
  4360  0038FC  C007  F00B         	movff	tolower@c,??_tolower+2
  4361  003900  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4362  003904  5009               	movf	??_tolower^0,w,c
  4363  003906  260B               	addwf	(??_tolower+2)^0,f,c
  4364  003908  500A               	movf	(??_tolower+1)^0,w,c
  4365  00390A  220C               	addwfc	(??_tolower+3)^0,f,c
  4366  00390C  500C               	movf	(??_tolower+3)^0,w,c
  4367  00390E  E10A               	bnz	u3290
  4368  003910  0E1A               	movlw	26
  4369  003912  5C0B               	subwf	(??_tolower+2)^0,w,c
  4370  003914  A0D8               	btfss	status,0,c
  4371  003916  EF8F  F01C         	goto	u3291
  4372  00391A  EF92  F01C         	goto	u3290
  4373  00391E                     u3291:
  4374  00391E  0E01               	movlw	1
  4375  003920  EF93  F01C         	goto	u3300
  4376  003924                     u3290:
  4377  003924  0E00               	movlw	0
  4378  003926                     u3300:
  4379  003926  6E0D               	movwf	_tolower$1242^0,c
  4380  003928  6A0E               	clrf	(_tolower$1242+1)^0,c
  4381  00392A  500D               	movf	_tolower$1242^0,w,c
  4382  00392C  100E               	iorwf	(_tolower$1242+1)^0,w,c
  4383  00392E  B4D8               	btfsc	status,2,c
  4384  003930  EF9C  F01C         	goto	u3311
  4385  003934  EF9E  F01C         	goto	u3310
  4386  003938                     u3311:
  4387  003938  EFA5  F01C         	goto	l1177
  4388  00393C                     u3310:
  4389  00393C  0E20               	movlw	32
  4390  00393E  1007               	iorwf	tolower@c^0,w,c
  4391  003940  6E07               	movwf	?_tolower^0,c
  4392  003942  5008               	movf	(tolower@c+1)^0,w,c
  4393  003944  6E08               	movwf	(?_tolower+1)^0,c
  4394  003946  EFA9  F01C         	goto	l1182
  4395  00394A                     l1177:
  4396  00394A  C007  F007         	movff	tolower@c,?_tolower
  4397  00394E  C008  F008         	movff	tolower@c+1,?_tolower+1
  4398  003952                     l1182:
  4399  003952  0012               	return		;funcret
  4400  003954                     __end_of_tolower:
  4401                           	opt callstack 0
  4402                           
  4403 ;; *************** function _isupper *****************
  4404 ;; Defined at:
  4405 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;  c               2    0[COMRAM] int 
  4408 ;; Auto vars:     Size  Location     Type
  4409 ;;		None
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  2    0[COMRAM] int 
  4412 ;; Registers used:
  4413 ;;		wreg, status,2, status,0
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 0/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4419 ;;      Params:         2       0       0       0       0       0       0       0       0
  4420 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4421 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4422 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4423 ;;Total ram usage:        6 bytes
  4424 ;; Hardware stack levels used:    1
  4425 ;; This function calls:
  4426 ;;		Nothing
  4427 ;; This function is called by:
  4428 ;;		_efgtoa
  4429 ;;		_vfpfcnvrt
  4430 ;;		_tolower
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           	psect	text7
  4435  003C56                     __ptext7:
  4436                           	opt callstack 0
  4437  003C56                     _isupper:
  4438                           	opt callstack 26
  4439  003C56  0EBF               	movlw	191
  4440  003C58  6E03               	movwf	??_isupper^0,c
  4441  003C5A  0EFF               	movlw	255
  4442  003C5C  6E04               	movwf	(??_isupper+1)^0,c
  4443  003C5E  C001  F005         	movff	isupper@c,??_isupper+2
  4444  003C62  C002  F006         	movff	isupper@c+1,??_isupper+3
  4445  003C66  5003               	movf	??_isupper^0,w,c
  4446  003C68  2605               	addwf	(??_isupper+2)^0,f,c
  4447  003C6A  5004               	movf	(??_isupper+1)^0,w,c
  4448  003C6C  2206               	addwfc	(??_isupper+3)^0,f,c
  4449  003C6E  5006               	movf	(??_isupper+3)^0,w,c
  4450  003C70  E10A               	bnz	u2750
  4451  003C72  0E1A               	movlw	26
  4452  003C74  5C05               	subwf	(??_isupper+2)^0,w,c
  4453  003C76  A0D8               	btfss	status,0,c
  4454  003C78  EF40  F01E         	goto	u2751
  4455  003C7C  EF43  F01E         	goto	u2750
  4456  003C80                     u2751:
  4457  003C80  0E01               	movlw	1
  4458  003C82  EF44  F01E         	goto	u2760
  4459  003C86                     u2750:
  4460  003C86  0E00               	movlw	0
  4461  003C88                     u2760:
  4462  003C88  6E01               	movwf	?_isupper^0,c
  4463  003C8A  6A02               	clrf	(?_isupper+1)^0,c
  4464  003C8C  0012               	return		;funcret
  4465  003C8E                     __end_of_isupper:
  4466                           	opt callstack 0
  4467                           
  4468 ;; *************** function _strcpy *****************
  4469 ;; Defined at:
  4470 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4473 ;;		 -> dbuf(80), 
  4474 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4475 ;;		 -> STR_17(4), STR_16(4), STR_13(4), STR_12(4), 
  4476 ;;		 -> dbuf(80), 
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;  d               2    8[COMRAM] PTR unsigned char 
  4479 ;;		 -> dbuf(80), 
  4480 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4481 ;;		 -> STR_17(4), STR_16(4), STR_13(4), STR_12(4), 
  4482 ;;		 -> dbuf(80), 
  4483 ;; Return value:  Size  Location     Type
  4484 ;;                  2    0[COMRAM] PTR unsigned char 
  4485 ;; Registers used:
  4486 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4492 ;;      Params:         4       0       0       0       0       0       0       0       0
  4493 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4494 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4495 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4496 ;;Total ram usage:       10 bytes
  4497 ;; Hardware stack levels used:    1
  4498 ;; This function calls:
  4499 ;;		Nothing
  4500 ;; This function is called by:
  4501 ;;		_efgtoa
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505                           	psect	text8
  4506  003954                     __ptext8:
  4507                           	opt callstack 0
  4508  003954                     _strcpy:
  4509                           	opt callstack 26
  4510  003954  C003  F007         	movff	strcpy@src,strcpy@s
  4511  003958  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4512  00395C  C001  F009         	movff	strcpy@dest,strcpy@d
  4513  003960  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4514  003964                     l3237:
  4515  003964  5007               	movf	strcpy@s^0,w,c
  4516  003966  6E05               	movwf	??_strcpy^0,c
  4517  003968  5008               	movf	(strcpy@s+1)^0,w,c
  4518  00396A  6E06               	movwf	(??_strcpy+1)^0,c
  4519  00396C  4A07               	infsnz	strcpy@s^0,f,c
  4520  00396E  2A08               	incf	(strcpy@s+1)^0,f,c
  4521  003970  C005  FFF6         	movff	??_strcpy,tblptrl
  4522  003974  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4523  003978  6AF8               	clrf	tblptru,c
  4524  00397A  C009  FFD9         	movff	strcpy@d,fsr2l
  4525  00397E  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4526  003982  4A09               	infsnz	strcpy@d^0,f,c
  4527  003984  2A0A               	incf	(strcpy@d+1)^0,f,c
  4528  003986  0E07               	movlw	(high __ramtop+-1)
  4529  003988  64F7               	cpfsgt	tblptrh,c
  4530  00398A  D003               	bra	u3277
  4531  00398C  0008               	tblrd		*
  4532  00398E  50F5               	movf	tablat,w,c
  4533  003990  D005               	bra	u3270
  4534  003992                     u3277:
  4535  003992  CFF6 FFE9          	movff	tblptrl,fsr0l
  4536  003996  CFF7 FFEA          	movff	tblptrh,fsr0h
  4537  00399A  50EF               	movf	indf0,w,c
  4538  00399C                     u3270:
  4539  00399C  6EDF               	movwf	indf2,c
  4540  00399E  50DF               	movf	indf2,w,c
  4541  0039A0  A4D8               	btfss	status,2,c
  4542  0039A2  EFD5  F01C         	goto	u3281
  4543  0039A6  EFD7  F01C         	goto	u3280
  4544  0039AA                     u3281:
  4545  0039AA  EFB2  F01C         	goto	l3237
  4546  0039AE                     u3280:
  4547  0039AE  0012               	return		;funcret
  4548  0039B0                     __end_of_strcpy:
  4549                           	opt callstack 0
  4550                           
  4551 ;; *************** function _pad *****************
  4552 ;; Defined at:
  4553 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4554 ;; Parameters:    Size  Location     Type
  4555 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4556 ;;		 -> sprintf@f(6), 
  4557 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4558 ;;		 -> dbuf(80), 
  4559 ;;  p               2   20[COMRAM] int 
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;  w               2   25[COMRAM] int 
  4562 ;;  i               2   23[COMRAM] int 
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  2   16[COMRAM] int 
  4565 ;; Registers used:
  4566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4572 ;;      Params:         6       0       0       0       0       0       0       0       0
  4573 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4574 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4575 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4576 ;;Total ram usage:       11 bytes
  4577 ;; Hardware stack levels used:    1
  4578 ;; Hardware stack levels required when called:    3
  4579 ;; This function calls:
  4580 ;;		_fputc
  4581 ;;		_fputs
  4582 ;;		_strlen
  4583 ;; This function is called by:
  4584 ;;		_efgtoa
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           	psect	text9
  4589  00353C                     __ptext9:
  4590                           	opt callstack 0
  4591  00353C                     _pad:
  4592                           	opt callstack 23
  4593  00353C                     
  4594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4595  00353C  0100               	movlb	0	; () banked
  4596  00353E  A1DD               	btfss	_flags& (0+255),0,b
  4597  003540  EFA4  F01A         	goto	u3161
  4598  003544  EFA6  F01A         	goto	u3160
  4599  003548                     u3161:
  4600  003548  EFB0  F01A         	goto	l3195
  4601  00354C                     u3160:
  4602  00354C                     
  4603                           ; BSR set to: 0
  4604                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4605  00354C  C013  F00A         	movff	pad@buf,fputs@s
  4606  003550  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4607  003554  C011  F00C         	movff	pad@fp,fputs@fp
  4608  003558  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4609  00355C  ECEA  F01D         	call	_fputs	;wreg free
  4610  003560                     l3195:
  4611                           
  4612                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4613  003560  BE16               	btfsc	(pad@p+1)^0,7,c
  4614  003562  EFB5  F01A         	goto	u3171
  4615  003566  EFB7  F01A         	goto	u3170
  4616  00356A                     u3171:
  4617  00356A  EFBD  F01A         	goto	l3199
  4618  00356E                     u3170:
  4619  00356E  C015  F01A         	movff	pad@p,pad@w
  4620  003572  C016  F01B         	movff	pad@p+1,pad@w+1
  4621  003576  EFC1  F01A         	goto	l245
  4622  00357A                     l3199:
  4623  00357A  0E00               	movlw	0
  4624  00357C  6E1B               	movwf	(pad@w+1)^0,c
  4625  00357E  0E00               	movlw	0
  4626  003580  6E1A               	movwf	pad@w^0,c
  4627  003582                     l245:
  4628                           
  4629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  4630  003582  0E00               	movlw	0
  4631  003584  6E19               	movwf	(pad@i+1)^0,c
  4632  003586  0E00               	movlw	0
  4633  003588  6E18               	movwf	pad@i^0,c
  4634                           
  4635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4636  00358A  EFD3  F01A         	goto	l3205
  4637  00358E                     l3201:
  4638                           
  4639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4640  00358E  0E00               	movlw	0
  4641  003590  6E02               	movwf	(fputc@c+1)^0,c
  4642  003592  0E20               	movlw	32
  4643  003594  6E01               	movwf	fputc@c^0,c
  4644  003596  C011  F003         	movff	pad@fp,fputc@fp
  4645  00359A  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4646  00359E  EC39  F01A         	call	_fputc	;wreg free
  4647  0035A2                     
  4648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4649  0035A2  4A18               	infsnz	pad@i^0,f,c
  4650  0035A4  2A19               	incf	(pad@i+1)^0,f,c
  4651  0035A6                     l3205:
  4652                           
  4653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4654  0035A6  501A               	movf	pad@w^0,w,c
  4655  0035A8  5C18               	subwf	pad@i^0,w,c
  4656  0035AA  5019               	movf	(pad@i+1)^0,w,c
  4657  0035AC  0A80               	xorlw	128
  4658  0035AE  6E17               	movwf	??_pad^0,c
  4659  0035B0  501B               	movf	(pad@w+1)^0,w,c
  4660  0035B2  0A80               	xorlw	128
  4661  0035B4  5817               	subwfb	??_pad^0,w,c
  4662  0035B6  A0D8               	btfss	status,0,c
  4663  0035B8  EFE0  F01A         	goto	u3181
  4664  0035BC  EFE2  F01A         	goto	u3180
  4665  0035C0                     u3181:
  4666  0035C0  EFC7  F01A         	goto	l3201
  4667  0035C4                     u3180:
  4668  0035C4                     
  4669                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4670  0035C4  0100               	movlb	0	; () banked
  4671  0035C6  B1DD               	btfsc	_flags& (0+255),0,b
  4672  0035C8  EFE8  F01A         	goto	u3191
  4673  0035CC  EFEA  F01A         	goto	u3190
  4674  0035D0                     u3191:
  4675  0035D0  EFF4  F01A         	goto	l3209
  4676  0035D4                     u3190:
  4677  0035D4                     
  4678                           ; BSR set to: 0
  4679                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4680  0035D4  C013  F00A         	movff	pad@buf,fputs@s
  4681  0035D8  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4682  0035DC  C011  F00C         	movff	pad@fp,fputs@fp
  4683  0035E0  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4684  0035E4  ECEA  F01D         	call	_fputs	;wreg free
  4685  0035E8                     l3209:
  4686                           
  4687                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4688  0035E8  C013  F001         	movff	pad@buf,strlen@s
  4689  0035EC  C014  F002         	movff	pad@buf+1,strlen@s+1
  4690  0035F0  EC7F  F01E         	call	_strlen	;wreg free
  4691  0035F4  501A               	movf	pad@w^0,w,c
  4692  0035F6  2401               	addwf	?_strlen^0,w,c
  4693  0035F8  6E11               	movwf	?_pad^0,c
  4694  0035FA  501B               	movf	(pad@w+1)^0,w,c
  4695  0035FC  2002               	addwfc	(?_strlen+1)^0,w,c
  4696  0035FE  6E12               	movwf	(?_pad+1)^0,c
  4697  003600  0012               	return		;funcret
  4698  003602                     __end_of_pad:
  4699                           	opt callstack 0
  4700                           
  4701 ;; *************** function _strlen *****************
  4702 ;; Defined at:
  4703 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4706 ;;		 -> dbuf(80), 
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4709 ;;		 -> dbuf(80), 
  4710 ;; Return value:  Size  Location     Type
  4711 ;;                  2    0[COMRAM] unsigned int 
  4712 ;; Registers used:
  4713 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4719 ;;      Params:         2       0       0       0       0       0       0       0       0
  4720 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4721 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4722 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4723 ;;Total ram usage:        4 bytes
  4724 ;; Hardware stack levels used:    1
  4725 ;; This function calls:
  4726 ;;		Nothing
  4727 ;; This function is called by:
  4728 ;;		_pad
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           	psect	text10
  4733  003CFE                     __ptext10:
  4734                           	opt callstack 0
  4735  003CFE                     _strlen:
  4736                           	opt callstack 25
  4737  003CFE  C001  F003         	movff	strlen@s,strlen@a
  4738  003D02  C002  F004         	movff	strlen@s+1,strlen@a+1
  4739  003D06  EF87  F01E         	goto	l2979
  4740  003D0A                     l2977:
  4741  003D0A  4A01               	infsnz	strlen@s^0,f,c
  4742  003D0C  2A02               	incf	(strlen@s+1)^0,f,c
  4743  003D0E                     l2979:
  4744  003D0E  C001  FFD9         	movff	strlen@s,fsr2l
  4745  003D12  C002  FFDA         	movff	strlen@s+1,fsr2h
  4746  003D16  50DF               	movf	indf2,w,c
  4747  003D18  A4D8               	btfss	status,2,c
  4748  003D1A  EF91  F01E         	goto	u2741
  4749  003D1E  EF93  F01E         	goto	u2740
  4750  003D22                     u2741:
  4751  003D22  EF85  F01E         	goto	l2977
  4752  003D26                     u2740:
  4753  003D26  5003               	movf	strlen@a^0,w,c
  4754  003D28  5C01               	subwf	strlen@s^0,w,c
  4755  003D2A  6E01               	movwf	?_strlen^0,c
  4756  003D2C  5004               	movf	(strlen@a+1)^0,w,c
  4757  003D2E  5802               	subwfb	(strlen@s+1)^0,w,c
  4758  003D30  6E02               	movwf	(?_strlen+1)^0,c
  4759  003D32  0012               	return		;funcret
  4760  003D34                     __end_of_strlen:
  4761                           	opt callstack 0
  4762                           
  4763 ;; *************** function _fputs *****************
  4764 ;; Defined at:
  4765 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4768 ;;		 -> dbuf(80), 
  4769 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4770 ;;		 -> sprintf@f(6), 
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;  i               2   14[COMRAM] int 
  4773 ;;  c               1   13[COMRAM] unsigned char 
  4774 ;; Return value:  Size  Location     Type
  4775 ;;                  2    9[COMRAM] int 
  4776 ;; Registers used:
  4777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4778 ;; Tracked objects:
  4779 ;;		On entry : 0/0
  4780 ;;		On exit  : 0/0
  4781 ;;		Unchanged: 0/0
  4782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4783 ;;      Params:         4       0       0       0       0       0       0       0       0
  4784 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4785 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4786 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4787 ;;Total ram usage:        7 bytes
  4788 ;; Hardware stack levels used:    1
  4789 ;; Hardware stack levels required when called:    2
  4790 ;; This function calls:
  4791 ;;		_fputc
  4792 ;; This function is called by:
  4793 ;;		_pad
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           
  4797                           	psect	text11
  4798  003BD4                     __ptext11:
  4799                           	opt callstack 0
  4800  003BD4                     _fputs:
  4801                           	opt callstack 23
  4802  003BD4  0E00               	movlw	0
  4803  003BD6  6E10               	movwf	(fputs@i+1)^0,c
  4804  003BD8  0E00               	movlw	0
  4805  003BDA  6E0F               	movwf	fputs@i^0,c
  4806  003BDC  EFFB  F01D         	goto	l2973
  4807  003BE0                     l2969:
  4808  003BE0  C00E  F001         	movff	fputs@c,fputc@c
  4809  003BE4  6A02               	clrf	(fputc@c+1)^0,c
  4810  003BE6  C00C  F003         	movff	fputs@fp,fputc@fp
  4811  003BEA  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4812  003BEE  EC39  F01A         	call	_fputc	;wreg free
  4813  003BF2  4A0F               	infsnz	fputs@i^0,f,c
  4814  003BF4  2A10               	incf	(fputs@i+1)^0,f,c
  4815  003BF6                     l2973:
  4816  003BF6  500F               	movf	fputs@i^0,w,c
  4817  003BF8  240A               	addwf	fputs@s^0,w,c
  4818  003BFA  6ED9               	movwf	fsr2l,c
  4819  003BFC  5010               	movf	(fputs@i+1)^0,w,c
  4820  003BFE  200B               	addwfc	(fputs@s+1)^0,w,c
  4821  003C00  6EDA               	movwf	fsr2h,c
  4822  003C02  50DF               	movf	indf2,w,c
  4823  003C04  6E0E               	movwf	fputs@c^0,c
  4824  003C06  500E               	movf	fputs@c^0,w,c
  4825  003C08  A4D8               	btfss	status,2,c
  4826  003C0A  EF09  F01E         	goto	u2731
  4827  003C0E  EF0B  F01E         	goto	u2730
  4828  003C12                     u2731:
  4829  003C12  EFF0  F01D         	goto	l2969
  4830  003C16                     u2730:
  4831  003C16  0012               	return		;funcret
  4832  003C18                     __end_of_fputs:
  4833                           	opt callstack 0
  4834                           
  4835 ;; *************** function _fputc *****************
  4836 ;; Defined at:
  4837 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;  c               2    0[COMRAM] int 
  4840 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4841 ;;		 -> sprintf@f(6), 
  4842 ;; Auto vars:     Size  Location     Type
  4843 ;;		None
  4844 ;; Return value:  Size  Location     Type
  4845 ;;                  2    0[COMRAM] int 
  4846 ;; Registers used:
  4847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4848 ;; Tracked objects:
  4849 ;;		On entry : 0/0
  4850 ;;		On exit  : 0/0
  4851 ;;		Unchanged: 0/0
  4852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4853 ;;      Params:         4       0       0       0       0       0       0       0       0
  4854 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4855 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4856 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4857 ;;Total ram usage:        9 bytes
  4858 ;; Hardware stack levels used:    1
  4859 ;; Hardware stack levels required when called:    1
  4860 ;; This function calls:
  4861 ;;		_putch
  4862 ;; This function is called by:
  4863 ;;		_pad
  4864 ;;		_vfpfcnvrt
  4865 ;;		_fputs
  4866 ;; This function uses a non-reentrant model
  4867 ;;
  4868                           
  4869                           	psect	text12
  4870  003472                     __ptext12:
  4871                           	opt callstack 0
  4872  003472                     _fputc:
  4873                           	opt callstack 26
  4874  003472  5003               	movf	fputc@fp^0,w,c
  4875  003474  1004               	iorwf	(fputc@fp+1)^0,w,c
  4876  003476  B4D8               	btfsc	status,2,c
  4877  003478  EF40  F01A         	goto	u2691
  4878  00347C  EF42  F01A         	goto	u2690
  4879  003480                     u2691:
  4880  003480  EF4B  F01A         	goto	l2957
  4881  003484                     u2690:
  4882  003484  5003               	movf	fputc@fp^0,w,c
  4883  003486  1004               	iorwf	(fputc@fp+1)^0,w,c
  4884  003488  A4D8               	btfss	status,2,c
  4885  00348A  EF49  F01A         	goto	u2701
  4886  00348E  EF4B  F01A         	goto	u2700
  4887  003492                     u2701:
  4888  003492  EF50  F01A         	goto	l2959
  4889  003496                     u2700:
  4890  003496                     l2957:
  4891  003496  5001               	movf	fputc@c^0,w,c
  4892  003498  EC18  F01F         	call	_putch
  4893  00349C  EF9D  F01A         	goto	l1133
  4894  0034A0                     l2959:
  4895  0034A0  EE20 F004          	lfsr	2,4
  4896  0034A4  5003               	movf	fputc@fp^0,w,c
  4897  0034A6  26D9               	addwf	fsr2l,f,c
  4898  0034A8  5004               	movf	(fputc@fp+1)^0,w,c
  4899  0034AA  22DA               	addwfc	fsr2h,f,c
  4900  0034AC  50DE               	movf	postinc2,w,c
  4901  0034AE  10DE               	iorwf	postinc2,w,c
  4902  0034B0  B4D8               	btfsc	status,2,c
  4903  0034B2  EF5D  F01A         	goto	u2711
  4904  0034B6  EF5F  F01A         	goto	u2710
  4905  0034BA                     u2711:
  4906  0034BA  EF7A  F01A         	goto	l2963
  4907  0034BE                     u2710:
  4908  0034BE  EE20 F004          	lfsr	2,4
  4909  0034C2  5003               	movf	fputc@fp^0,w,c
  4910  0034C4  26D9               	addwf	fsr2l,f,c
  4911  0034C6  5004               	movf	(fputc@fp+1)^0,w,c
  4912  0034C8  22DA               	addwfc	fsr2h,f,c
  4913  0034CA  EE10 F002          	lfsr	1,2
  4914  0034CE  5003               	movf	fputc@fp^0,w,c
  4915  0034D0  26E1               	addwf	fsr1l,f,c
  4916  0034D2  5004               	movf	(fputc@fp+1)^0,w,c
  4917  0034D4  22E2               	addwfc	fsr1h,f,c
  4918  0034D6  50DE               	movf	postinc2,w,c
  4919  0034D8  5CE6               	subwf	postinc1,w,c
  4920  0034DA  50E6               	movf	postinc1,w,c
  4921  0034DC  0A80               	xorlw	128
  4922  0034DE  6E09               	movwf	(??_fputc+4)^0,c
  4923  0034E0  50DE               	movf	postinc2,w,c
  4924  0034E2  0A80               	xorlw	128
  4925  0034E4  5809               	subwfb	(??_fputc+4)^0,w,c
  4926  0034E6  B0D8               	btfsc	status,0,c
  4927  0034E8  EF78  F01A         	goto	u2721
  4928  0034EC  EF7A  F01A         	goto	u2720
  4929  0034F0                     u2721:
  4930  0034F0  EF9D  F01A         	goto	l1133
  4931  0034F4                     u2720:
  4932  0034F4                     l2963:
  4933  0034F4  EE20 F002          	lfsr	2,2
  4934  0034F8  5003               	movf	fputc@fp^0,w,c
  4935  0034FA  26D9               	addwf	fsr2l,f,c
  4936  0034FC  5004               	movf	(fputc@fp+1)^0,w,c
  4937  0034FE  22DA               	addwfc	fsr2h,f,c
  4938  003500  CFDE F005          	movff	postinc2,??_fputc
  4939  003504  CFDD F006          	movff	postdec2,??_fputc+1
  4940  003508  C003  FFD9         	movff	fputc@fp,fsr2l
  4941  00350C  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4942  003510  CFDE F007          	movff	postinc2,??_fputc+2
  4943  003514  CFDD F008          	movff	postdec2,??_fputc+3
  4944  003518  5005               	movf	??_fputc^0,w,c
  4945  00351A  2407               	addwf	(??_fputc+2)^0,w,c
  4946  00351C  6ED9               	movwf	fsr2l,c
  4947  00351E  5006               	movf	(??_fputc+1)^0,w,c
  4948  003520  2008               	addwfc	(??_fputc+3)^0,w,c
  4949  003522  6EDA               	movwf	fsr2h,c
  4950  003524  C001  FFDF         	movff	fputc@c,indf2
  4951  003528  EE20 F002          	lfsr	2,2
  4952  00352C  5003               	movf	fputc@fp^0,w,c
  4953  00352E  26D9               	addwf	fsr2l,f,c
  4954  003530  5004               	movf	(fputc@fp+1)^0,w,c
  4955  003532  22DA               	addwfc	fsr2h,f,c
  4956  003534  2ADE               	incf	postinc2,f,c
  4957  003536  0E00               	movlw	0
  4958  003538  22DD               	addwfc	postdec2,f,c
  4959  00353A                     l1133:
  4960  00353A  0012               	return		;funcret
  4961  00353C                     __end_of_fputc:
  4962                           	opt callstack 0
  4963                           
  4964 ;; *************** function _putch *****************
  4965 ;; Defined at:
  4966 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  4967 ;; Parameters:    Size  Location     Type
  4968 ;;  c               1    wreg     unsigned char 
  4969 ;; Auto vars:     Size  Location     Type
  4970 ;;  c               1    0[COMRAM] unsigned char 
  4971 ;; Return value:  Size  Location     Type
  4972 ;;                  1    wreg      void 
  4973 ;; Registers used:
  4974 ;;		wreg
  4975 ;; Tracked objects:
  4976 ;;		On entry : 0/0
  4977 ;;		On exit  : 0/0
  4978 ;;		Unchanged: 0/0
  4979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4980 ;;      Params:         0       0       0       0       0       0       0       0       0
  4981 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4982 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4983 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4984 ;;Total ram usage:        0 bytes
  4985 ;; Hardware stack levels used:    1
  4986 ;; This function calls:
  4987 ;;		Nothing
  4988 ;; This function is called by:
  4989 ;;		_fputc
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           	psect	text13
  4994  003E30                     __ptext13:
  4995                           	opt callstack 0
  4996  003E30                     _putch:
  4997                           	opt callstack 26
  4998  003E30  0012               	return		;funcret
  4999  003E32                     __end_of_putch:
  5000                           	opt callstack 0
  5001                           
  5002 ;; *************** function _floorf *****************
  5003 ;; Defined at:
  5004 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;  x               4   64[COMRAM] float 
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;  u               4   80[COMRAM] struct .
  5009 ;;  m               4   74[COMRAM] unsigned long 
  5010 ;;  e               2   78[COMRAM] int 
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  4   64[COMRAM] float 
  5013 ;; Registers used:
  5014 ;;		wreg, status,2, status,0
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5020 ;;      Params:         4       0       0       0       0       0       0       0       0
  5021 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5022 ;;      Temps:          6       0       0       0       0       0       0       0       0
  5023 ;;      Totals:        20       0       0       0       0       0       0       0       0
  5024 ;;Total ram usage:       20 bytes
  5025 ;; Hardware stack levels used:    1
  5026 ;; This function calls:
  5027 ;;		Nothing
  5028 ;; This function is called by:
  5029 ;;		_efgtoa
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033                           	psect	text14
  5034  002A54                     __ptext14:
  5035                           	opt callstack 0
  5036  002A54                     _floorf:
  5037                           	opt callstack 26
  5038  002A54  C0CB  F051         	movff	floorf@F524,floorf@u
  5039  002A58  C0CC  F052         	movff	floorf@F524+1,floorf@u+1
  5040  002A5C  C0CD  F053         	movff	floorf@F524+2,floorf@u+2
  5041  002A60  C0CE  F054         	movff	floorf@F524+3,floorf@u+3
  5042  002A64  C041  F051         	movff	floorf@x,floorf@u
  5043  002A68  C042  F052         	movff	floorf@x+1,floorf@u+1
  5044  002A6C  C043  F053         	movff	floorf@x+2,floorf@u+2
  5045  002A70  C044  F054         	movff	floorf@x+3,floorf@u+3
  5046  002A74  0E81               	movlw	129
  5047  002A76  6E45               	movwf	??_floorf^0,c
  5048  002A78  0EFF               	movlw	255
  5049  002A7A  6E46               	movwf	(??_floorf+1)^0,c
  5050  002A7C  C051  F047         	movff	floorf@u,??_floorf+2
  5051  002A80  C052  F048         	movff	floorf@u+1,??_floorf+3
  5052  002A84  C053  F049         	movff	floorf@u+2,??_floorf+4
  5053  002A88  C054  F04A         	movff	floorf@u+3,??_floorf+5
  5054  002A8C  0E18               	movlw	24
  5055  002A8E  EF4E  F015         	goto	u3320
  5056  002A92                     u3325:
  5057  002A92  90D8               	bcf	status,0,c
  5058  002A94  324A               	rrcf	(??_floorf+5)^0,f,c
  5059  002A96  3249               	rrcf	(??_floorf+4)^0,f,c
  5060  002A98  3248               	rrcf	(??_floorf+3)^0,f,c
  5061  002A9A  3247               	rrcf	(??_floorf+2)^0,f,c
  5062  002A9C                     u3320:
  5063  002A9C  2EE8               	decfsz	wreg,f,c
  5064  002A9E  EF49  F015         	goto	u3325
  5065  002AA2  5047               	movf	(??_floorf+2)^0,w,c
  5066  002AA4  2445               	addwf	??_floorf^0,w,c
  5067  002AA6  6E4F               	movwf	floorf@e^0,c
  5068  002AA8  0E00               	movlw	0
  5069  002AAA  2046               	addwfc	(??_floorf+1)^0,w,c
  5070  002AAC  6E50               	movwf	(floorf@e+1)^0,c
  5071  002AAE  BE50               	btfsc	(floorf@e+1)^0,7,c
  5072  002AB0  EF63  F015         	goto	u3331
  5073  002AB4  5050               	movf	(floorf@e+1)^0,w,c
  5074  002AB6  E109               	bnz	u3330
  5075  002AB8  0E17               	movlw	23
  5076  002ABA  5C4F               	subwf	floorf@e^0,w,c
  5077  002ABC  A0D8               	btfss	status,0,c
  5078  002ABE  EF63  F015         	goto	u3331
  5079  002AC2  EF65  F015         	goto	u3330
  5080  002AC6                     u3331:
  5081  002AC6  EF6F  F015         	goto	l3255
  5082  002ACA                     u3330:
  5083  002ACA                     l3253:
  5084  002ACA  C041  F041         	movff	floorf@x,?_floorf
  5085  002ACE  C042  F042         	movff	floorf@x+1,?_floorf+1
  5086  002AD2  C043  F043         	movff	floorf@x+2,?_floorf+2
  5087  002AD6  C044  F044         	movff	floorf@x+3,?_floorf+3
  5088  002ADA  EF32  F016         	goto	l1094
  5089  002ADE                     l3255:
  5090  002ADE  BE50               	btfsc	(floorf@e+1)^0,7,c
  5091  002AE0  EF74  F015         	goto	u3341
  5092  002AE4  EF76  F015         	goto	u3340
  5093  002AE8                     u3341:
  5094  002AE8  EFE6  F015         	goto	l3265
  5095  002AEC                     u3340:
  5096  002AEC  C04F  F045         	movff	floorf@e,??_floorf
  5097  002AF0  0EFF               	movlw	255
  5098  002AF2  6E46               	movwf	(??_floorf+1)^0,c
  5099  002AF4  0EFF               	movlw	255
  5100  002AF6  6E47               	movwf	(??_floorf+2)^0,c
  5101  002AF8  0E7F               	movlw	127
  5102  002AFA  6E48               	movwf	(??_floorf+3)^0,c
  5103  002AFC  0E00               	movlw	0
  5104  002AFE  6E49               	movwf	(??_floorf+4)^0,c
  5105  002B00                     u3355:
  5106  002B00  6645               	tstfsz	??_floorf^0,c
  5107  002B02  EF85  F015         	goto	u3356
  5108  002B06  EF8D  F015         	goto	u3357
  5109  002B0A                     u3356:
  5110  002B0A  3449               	rlcf	(??_floorf+4)^0,w,c
  5111  002B0C  3249               	rrcf	(??_floorf+4)^0,f,c
  5112  002B0E  3248               	rrcf	(??_floorf+3)^0,f,c
  5113  002B10  3247               	rrcf	(??_floorf+2)^0,f,c
  5114  002B12  3246               	rrcf	(??_floorf+1)^0,f,c
  5115  002B14  2E45               	decfsz	??_floorf^0,f,c
  5116  002B16  EF80  F015         	goto	u3355
  5117  002B1A                     u3357:
  5118  002B1A  C046  F04B         	movff	??_floorf+1,floorf@m
  5119  002B1E  C047  F04C         	movff	??_floorf+2,floorf@m+1
  5120  002B22  C048  F04D         	movff	??_floorf+3,floorf@m+2
  5121  002B26  C049  F04E         	movff	??_floorf+4,floorf@m+3
  5122  002B2A  504B               	movf	floorf@m^0,w,c
  5123  002B2C  1451               	andwf	floorf@u^0,w,c
  5124  002B2E  6E45               	movwf	??_floorf^0,c
  5125  002B30  504C               	movf	(floorf@m+1)^0,w,c
  5126  002B32  1452               	andwf	(floorf@u+1)^0,w,c
  5127  002B34  6E46               	movwf	(??_floorf+1)^0,c
  5128  002B36  504D               	movf	(floorf@m+2)^0,w,c
  5129  002B38  1453               	andwf	(floorf@u+2)^0,w,c
  5130  002B3A  6E47               	movwf	(??_floorf+2)^0,c
  5131  002B3C  504E               	movf	(floorf@m+3)^0,w,c
  5132  002B3E  1454               	andwf	(floorf@u+3)^0,w,c
  5133  002B40  6E48               	movwf	(??_floorf+3)^0,c
  5134  002B42  5045               	movf	??_floorf^0,w,c
  5135  002B44  1046               	iorwf	(??_floorf+1)^0,w,c
  5136  002B46  1047               	iorwf	(??_floorf+2)^0,w,c
  5137  002B48  1048               	iorwf	(??_floorf+3)^0,w,c
  5138  002B4A  A4D8               	btfss	status,2,c
  5139  002B4C  EFAA  F015         	goto	u3361
  5140  002B50  EFAC  F015         	goto	u3360
  5141  002B54                     u3361:
  5142  002B54  EFAE  F015         	goto	l3261
  5143  002B58                     u3360:
  5144  002B58  EF65  F015         	goto	l3253
  5145  002B5C                     l3261:
  5146  002B5C  C051  F045         	movff	floorf@u,??_floorf
  5147  002B60  C052  F046         	movff	floorf@u+1,??_floorf+1
  5148  002B64  C053  F047         	movff	floorf@u+2,??_floorf+2
  5149  002B68  C054  F048         	movff	floorf@u+3,??_floorf+3
  5150  002B6C  0E20               	movlw	32
  5151  002B6E  EFBE  F015         	goto	u3370
  5152  002B72                     u3375:
  5153  002B72  90D8               	bcf	status,0,c
  5154  002B74  3248               	rrcf	(??_floorf+3)^0,f,c
  5155  002B76  3247               	rrcf	(??_floorf+2)^0,f,c
  5156  002B78  3246               	rrcf	(??_floorf+1)^0,f,c
  5157  002B7A  3245               	rrcf	??_floorf^0,f,c
  5158  002B7C                     u3370:
  5159  002B7C  2EE8               	decfsz	wreg,f,c
  5160  002B7E  EFB9  F015         	goto	u3375
  5161  002B82  5045               	movf	??_floorf^0,w,c
  5162  002B84  1046               	iorwf	(??_floorf+1)^0,w,c
  5163  002B86  1047               	iorwf	(??_floorf+2)^0,w,c
  5164  002B88  1048               	iorwf	(??_floorf+3)^0,w,c
  5165  002B8A  B4D8               	btfsc	status,2,c
  5166  002B8C  EFCA  F015         	goto	u3381
  5167  002B90  EFCC  F015         	goto	u3380
  5168  002B94                     u3381:
  5169  002B94  EFD4  F015         	goto	l1097
  5170  002B98                     u3380:
  5171  002B98  504B               	movf	floorf@m^0,w,c
  5172  002B9A  2651               	addwf	floorf@u^0,f,c
  5173  002B9C  504C               	movf	(floorf@m+1)^0,w,c
  5174  002B9E  2252               	addwfc	(floorf@u+1)^0,f,c
  5175  002BA0  504D               	movf	(floorf@m+2)^0,w,c
  5176  002BA2  2253               	addwfc	(floorf@u+2)^0,f,c
  5177  002BA4  504E               	movf	(floorf@m+3)^0,w,c
  5178  002BA6  2254               	addwfc	(floorf@u+3)^0,f,c
  5179  002BA8                     l1097:
  5180  002BA8  1C4B               	comf	floorf@m^0,w,c
  5181  002BAA  6E45               	movwf	??_floorf^0,c
  5182  002BAC  1C4C               	comf	(floorf@m+1)^0,w,c
  5183  002BAE  6E46               	movwf	(??_floorf+1)^0,c
  5184  002BB0  1C4D               	comf	(floorf@m+2)^0,w,c
  5185  002BB2  6E47               	movwf	(??_floorf+2)^0,c
  5186  002BB4  1C4E               	comf	(floorf@m+3)^0,w,c
  5187  002BB6  6E48               	movwf	(??_floorf+3)^0,c
  5188  002BB8  5045               	movf	??_floorf^0,w,c
  5189  002BBA  1651               	andwf	floorf@u^0,f,c
  5190  002BBC  5046               	movf	(??_floorf+1)^0,w,c
  5191  002BBE  1652               	andwf	(floorf@u+1)^0,f,c
  5192  002BC0  5047               	movf	(??_floorf+2)^0,w,c
  5193  002BC2  1653               	andwf	(floorf@u+2)^0,f,c
  5194  002BC4  5048               	movf	(??_floorf+3)^0,w,c
  5195  002BC6  1654               	andwf	(floorf@u+3)^0,f,c
  5196  002BC8  EF2A  F016         	goto	l3273
  5197  002BCC                     l3265:
  5198  002BCC  C051  F045         	movff	floorf@u,??_floorf
  5199  002BD0  C052  F046         	movff	floorf@u+1,??_floorf+1
  5200  002BD4  C053  F047         	movff	floorf@u+2,??_floorf+2
  5201  002BD8  C054  F048         	movff	floorf@u+3,??_floorf+3
  5202  002BDC  0E20               	movlw	32
  5203  002BDE  EFF6  F015         	goto	u3390
  5204  002BE2                     u3395:
  5205  002BE2  90D8               	bcf	status,0,c
  5206  002BE4  3248               	rrcf	(??_floorf+3)^0,f,c
  5207  002BE6  3247               	rrcf	(??_floorf+2)^0,f,c
  5208  002BE8  3246               	rrcf	(??_floorf+1)^0,f,c
  5209  002BEA  3245               	rrcf	??_floorf^0,f,c
  5210  002BEC                     u3390:
  5211  002BEC  2EE8               	decfsz	wreg,f,c
  5212  002BEE  EFF1  F015         	goto	u3395
  5213  002BF2  5045               	movf	??_floorf^0,w,c
  5214  002BF4  1046               	iorwf	(??_floorf+1)^0,w,c
  5215  002BF6  1047               	iorwf	(??_floorf+2)^0,w,c
  5216  002BF8  1048               	iorwf	(??_floorf+3)^0,w,c
  5217  002BFA  A4D8               	btfss	status,2,c
  5218  002BFC  EF02  F016         	goto	u3401
  5219  002C00  EF04  F016         	goto	u3400
  5220  002C04                     u3401:
  5221  002C04  EF0E  F016         	goto	l3269
  5222  002C08                     u3400:
  5223  002C08  0E00               	movlw	0
  5224  002C0A  6E51               	movwf	floorf@u^0,c
  5225  002C0C  0E00               	movlw	0
  5226  002C0E  6E52               	movwf	(floorf@u+1)^0,c
  5227  002C10  0E00               	movlw	0
  5228  002C12  6E53               	movwf	(floorf@u+2)^0,c
  5229  002C14  0E00               	movlw	0
  5230  002C16  6E54               	movwf	(floorf@u+3)^0,c
  5231  002C18  EF2A  F016         	goto	l3273
  5232  002C1C                     l3269:
  5233  002C1C  90D8               	bcf	status,0,c
  5234  002C1E  3451               	rlcf	floorf@u^0,w,c
  5235  002C20  6E45               	movwf	??_floorf^0,c
  5236  002C22  3452               	rlcf	(floorf@u+1)^0,w,c
  5237  002C24  6E46               	movwf	(??_floorf+1)^0,c
  5238  002C26  3453               	rlcf	(floorf@u+2)^0,w,c
  5239  002C28  6E47               	movwf	(??_floorf+2)^0,c
  5240  002C2A  3454               	rlcf	(floorf@u+3)^0,w,c
  5241  002C2C  6E48               	movwf	(??_floorf+3)^0,c
  5242  002C2E  5045               	movf	??_floorf^0,w,c
  5243  002C30  1046               	iorwf	(??_floorf+1)^0,w,c
  5244  002C32  1047               	iorwf	(??_floorf+2)^0,w,c
  5245  002C34  1048               	iorwf	(??_floorf+3)^0,w,c
  5246  002C36  B4D8               	btfsc	status,2,c
  5247  002C38  EF20  F016         	goto	u3411
  5248  002C3C  EF22  F016         	goto	u3410
  5249  002C40                     u3411:
  5250  002C40  EF2A  F016         	goto	l3273
  5251  002C44                     u3410:
  5252  002C44  0E00               	movlw	0
  5253  002C46  6E51               	movwf	floorf@u^0,c
  5254  002C48  0E00               	movlw	0
  5255  002C4A  6E52               	movwf	(floorf@u+1)^0,c
  5256  002C4C  0E80               	movlw	128
  5257  002C4E  6E53               	movwf	(floorf@u+2)^0,c
  5258  002C50  0EBF               	movlw	191
  5259  002C52  6E54               	movwf	(floorf@u+3)^0,c
  5260  002C54                     l3273:
  5261  002C54  C051  F041         	movff	floorf@u,?_floorf
  5262  002C58  C052  F042         	movff	floorf@u+1,?_floorf+1
  5263  002C5C  C053  F043         	movff	floorf@u+2,?_floorf+2
  5264  002C60  C054  F044         	movff	floorf@u+3,?_floorf+3
  5265  002C64                     l1094:
  5266  002C64  0012               	return		;funcret
  5267  002C66                     __end_of_floorf:
  5268                           	opt callstack 0
  5269                           
  5270 ;; *************** function ___fpclassifyf *****************
  5271 ;; Defined at:
  5272 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  5273 ;; Parameters:    Size  Location     Type
  5274 ;;  x               4    0[COMRAM] float 
  5275 ;; Auto vars:     Size  Location     Type
  5276 ;;  u               4   10[COMRAM] struct .
  5277 ;;  e               2    8[COMRAM] int 
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  2    0[COMRAM] int 
  5280 ;; Registers used:
  5281 ;;		wreg, status,2, status,0
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5287 ;;      Params:         4       0       0       0       0       0       0       0       0
  5288 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5289 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5290 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5291 ;;Total ram usage:       14 bytes
  5292 ;; Hardware stack levels used:    1
  5293 ;; This function calls:
  5294 ;;		Nothing
  5295 ;; This function is called by:
  5296 ;;		_efgtoa
  5297 ;; This function uses a non-reentrant model
  5298 ;;
  5299                           
  5300                           	psect	text15
  5301  0031B4                     __ptext15:
  5302                           	opt callstack 0
  5303  0031B4                     ___fpclassifyf:
  5304                           	opt callstack 26
  5305  0031B4  C0CF  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5306  0031B8  C0D0  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5307  0031BC  C0D1  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5308  0031C0  C0D2  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5309  0031C4  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5310  0031C8  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5311  0031CC  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5312  0031D0  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5313  0031D4  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5314  0031D8  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5315  0031DC  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5316  0031E0  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5317  0031E4  0E18               	movlw	24
  5318  0031E6  EFFA  F018         	goto	u3200
  5319  0031EA                     u3205:
  5320  0031EA  90D8               	bcf	status,0,c
  5321  0031EC  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5322  0031EE  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5323  0031F0  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5324  0031F2  3205               	rrcf	??___fpclassifyf^0,f,c
  5325  0031F4                     u3200:
  5326  0031F4  2EE8               	decfsz	wreg,f,c
  5327  0031F6  EFF5  F018         	goto	u3205
  5328  0031FA  5005               	movf	??___fpclassifyf^0,w,c
  5329  0031FC  6E09               	movwf	___fpclassifyf@e^0,c
  5330  0031FE  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5331  003200  5009               	movf	___fpclassifyf@e^0,w,c
  5332  003202  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5333  003204  A4D8               	btfss	status,2,c
  5334  003206  EF07  F019         	goto	u3211
  5335  00320A  EF09  F019         	goto	u3210
  5336  00320E                     u3211:
  5337  00320E  EF29  F019         	goto	l3225
  5338  003212                     u3210:
  5339  003212  90D8               	bcf	status,0,c
  5340  003214  340B               	rlcf	___fpclassifyf@u^0,w,c
  5341  003216  6E05               	movwf	??___fpclassifyf^0,c
  5342  003218  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5343  00321A  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5344  00321C  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5345  00321E  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5346  003220  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5347  003222  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5348  003224  5005               	movf	??___fpclassifyf^0,w,c
  5349  003226  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5350  003228  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5351  00322A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5352  00322C  A4D8               	btfss	status,2,c
  5353  00322E  EF1B  F019         	goto	u3221
  5354  003232  EF1D  F019         	goto	u3220
  5355  003236                     u3221:
  5356  003236  EF23  F019         	goto	l3221
  5357  00323A                     u3220:
  5358  00323A  0E00               	movlw	0
  5359  00323C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5360  00323E  0E02               	movlw	2
  5361  003240  6E01               	movwf	?___fpclassifyf^0,c
  5362  003242  EF58  F019         	goto	l1056
  5363  003246                     l3221:
  5364  003246  0E00               	movlw	0
  5365  003248  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5366  00324A  0E03               	movlw	3
  5367  00324C  6E01               	movwf	?___fpclassifyf^0,c
  5368  00324E  EF58  F019         	goto	l1056
  5369  003252                     l3225:
  5370  003252  2809               	incf	___fpclassifyf@e^0,w,c
  5371  003254  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5372  003256  A4D8               	btfss	status,2,c
  5373  003258  EF30  F019         	goto	u3231
  5374  00325C  EF32  F019         	goto	u3230
  5375  003260                     u3231:
  5376  003260  EF54  F019         	goto	l3231
  5377  003264                     u3230:
  5378  003264  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5379  003268  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5380  00326C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5381  003270  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5382  003274  0E09               	movlw	9
  5383  003276                     u3245:
  5384  003276  90D8               	bcf	status,0,c
  5385  003278  3605               	rlcf	??___fpclassifyf^0,f,c
  5386  00327A  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5387  00327C  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5388  00327E  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5389  003280  2EE8               	decfsz	wreg,f,c
  5390  003282  EF3B  F019         	goto	u3245
  5391  003286  5005               	movf	??___fpclassifyf^0,w,c
  5392  003288  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5393  00328A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5394  00328C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5395  00328E  B4D8               	btfsc	status,2,c
  5396  003290  EF4C  F019         	goto	u3251
  5397  003294  EF4F  F019         	goto	u3250
  5398  003298                     u3251:
  5399  003298  0E01               	movlw	1
  5400  00329A  EF50  F019         	goto	u3260
  5401  00329E                     u3250:
  5402  00329E  0E00               	movlw	0
  5403  0032A0                     u3260:
  5404  0032A0  6E01               	movwf	?___fpclassifyf^0,c
  5405  0032A2  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5406  0032A4  EF58  F019         	goto	l1056
  5407  0032A8                     l3231:
  5408  0032A8  0E00               	movlw	0
  5409  0032AA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5410  0032AC  0E04               	movlw	4
  5411  0032AE  6E01               	movwf	?___fpclassifyf^0,c
  5412  0032B0                     l1056:
  5413  0032B0  0012               	return		;funcret
  5414  0032B2                     __end_of___fpclassifyf:
  5415                           	opt callstack 0
  5416                           
  5417 ;; *************** function ___fltol *****************
  5418 ;; Defined at:
  5419 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  5420 ;; Parameters:    Size  Location     Type
  5421 ;;  f1              4    0[COMRAM] int 
  5422 ;; Auto vars:     Size  Location     Type
  5423 ;;  exp1            1    9[COMRAM] unsigned char 
  5424 ;;  sign1           1    8[COMRAM] unsigned char 
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  4    0[COMRAM] long 
  5427 ;; Registers used:
  5428 ;;		wreg, status,2, status,0
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5434 ;;      Params:         4       0       0       0       0       0       0       0       0
  5435 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5436 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5437 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5438 ;;Total ram usage:       10 bytes
  5439 ;; Hardware stack levels used:    1
  5440 ;; This function calls:
  5441 ;;		Nothing
  5442 ;; This function is called by:
  5443 ;;		_efgtoa
  5444 ;; This function uses a non-reentrant model
  5445 ;;
  5446                           
  5447                           	psect	text16
  5448  002FAA                     __ptext16:
  5449                           	opt callstack 0
  5450  002FAA                     ___fltol:
  5451                           	opt callstack 26
  5452  002FAA  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5453  002FAC  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5454  002FAE  6E0A               	movwf	___fltol@exp1^0,c
  5455  002FB0  500A               	movf	___fltol@exp1^0,w,c
  5456  002FB2  A4D8               	btfss	status,2,c
  5457  002FB4  EFDE  F017         	goto	u4071
  5458  002FB8  EFE0  F017         	goto	u4070
  5459  002FBC                     u4071:
  5460  002FBC  EFEA  F017         	goto	l3693
  5461  002FC0                     u4070:
  5462  002FC0                     l3689:
  5463  002FC0  0E00               	movlw	0
  5464  002FC2  6E01               	movwf	?___fltol^0,c
  5465  002FC4  0E00               	movlw	0
  5466  002FC6  6E02               	movwf	(?___fltol+1)^0,c
  5467  002FC8  0E00               	movlw	0
  5468  002FCA  6E03               	movwf	(?___fltol+2)^0,c
  5469  002FCC  0E00               	movlw	0
  5470  002FCE  6E04               	movwf	(?___fltol+3)^0,c
  5471  002FD0  EF57  F018         	goto	l672
  5472  002FD4                     l3693:
  5473  002FD4  C001  F005         	movff	___fltol@f1,??___fltol
  5474  002FD8  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5475  002FDC  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5476  002FE0  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5477  002FE4  0E20               	movlw	32
  5478  002FE6  EFFA  F017         	goto	u4080
  5479  002FEA                     u4085:
  5480  002FEA  90D8               	bcf	status,0,c
  5481  002FEC  3208               	rrcf	(??___fltol+3)^0,f,c
  5482  002FEE  3207               	rrcf	(??___fltol+2)^0,f,c
  5483  002FF0  3206               	rrcf	(??___fltol+1)^0,f,c
  5484  002FF2  3205               	rrcf	??___fltol^0,f,c
  5485  002FF4                     u4080:
  5486  002FF4  2EE8               	decfsz	wreg,f,c
  5487  002FF6  EFF5  F017         	goto	u4085
  5488  002FFA  5005               	movf	??___fltol^0,w,c
  5489  002FFC  6E09               	movwf	___fltol@sign1^0,c
  5490  002FFE  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5491  003000  0EFF               	movlw	255
  5492  003002  1601               	andwf	___fltol@f1^0,f,c
  5493  003004  0EFF               	movlw	255
  5494  003006  1602               	andwf	(___fltol@f1+1)^0,f,c
  5495  003008  0EFF               	movlw	255
  5496  00300A  1603               	andwf	(___fltol@f1+2)^0,f,c
  5497  00300C  0E00               	movlw	0
  5498  00300E  1604               	andwf	(___fltol@f1+3)^0,f,c
  5499  003010  0E96               	movlw	150
  5500  003012  5E0A               	subwf	___fltol@exp1^0,f,c
  5501  003014  BE0A               	btfsc	___fltol@exp1^0,7,c
  5502  003016  EF11  F018         	goto	u4090
  5503  00301A  EF0F  F018         	goto	u4091
  5504  00301E                     u4091:
  5505  00301E  EF27  F018         	goto	l3713
  5506  003022                     u4090:
  5507  003022  500A               	movf	___fltol@exp1^0,w,c
  5508  003024  0A80               	xorlw	128
  5509  003026  0F97               	addlw	151
  5510  003028  B0D8               	btfsc	status,0,c
  5511  00302A  EF19  F018         	goto	u4101
  5512  00302E  EF1B  F018         	goto	u4100
  5513  003032                     u4101:
  5514  003032  EF1D  F018         	goto	l3709
  5515  003036                     u4100:
  5516  003036  EFE0  F017         	goto	l3689
  5517  00303A                     l3709:
  5518  00303A  90D8               	bcf	status,0,c
  5519  00303C  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5520  00303E  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5521  003040  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5522  003042  3201               	rrcf	___fltol@f1^0,f,c
  5523  003044  3E0A               	incfsz	___fltol@exp1^0,f,c
  5524  003046  EF1D  F018         	goto	l3709
  5525  00304A  EF3F  F018         	goto	l3723
  5526  00304E                     l3713:
  5527  00304E  0E1F               	movlw	31
  5528  003050  640A               	cpfsgt	___fltol@exp1^0,c
  5529  003052  EF2D  F018         	goto	u4111
  5530  003056  EF2F  F018         	goto	u4110
  5531  00305A                     u4111:
  5532  00305A  EF37  F018         	goto	l3721
  5533  00305E                     u4110:
  5534  00305E  EFE0  F017         	goto	l3689
  5535  003062                     l3719:
  5536  003062  90D8               	bcf	status,0,c
  5537  003064  3601               	rlcf	___fltol@f1^0,f,c
  5538  003066  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5539  003068  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5540  00306A  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5541  00306C  060A               	decf	___fltol@exp1^0,f,c
  5542  00306E                     l3721:
  5543  00306E  500A               	movf	___fltol@exp1^0,w,c
  5544  003070  A4D8               	btfss	status,2,c
  5545  003072  EF3D  F018         	goto	u4121
  5546  003076  EF3F  F018         	goto	u4120
  5547  00307A                     u4121:
  5548  00307A  EF31  F018         	goto	l3719
  5549  00307E                     u4120:
  5550  00307E                     l3723:
  5551  00307E  5009               	movf	___fltol@sign1^0,w,c
  5552  003080  B4D8               	btfsc	status,2,c
  5553  003082  EF45  F018         	goto	u4131
  5554  003086  EF47  F018         	goto	u4130
  5555  00308A                     u4131:
  5556  00308A  EF4F  F018         	goto	l3727
  5557  00308E                     u4130:
  5558  00308E  1E04               	comf	(___fltol@f1+3)^0,f,c
  5559  003090  1E03               	comf	(___fltol@f1+2)^0,f,c
  5560  003092  1E02               	comf	(___fltol@f1+1)^0,f,c
  5561  003094  6C01               	negf	___fltol@f1^0,c
  5562  003096  0E00               	movlw	0
  5563  003098  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5564  00309A  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5565  00309C  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5566  00309E                     l3727:
  5567  00309E  C001  F001         	movff	___fltol@f1,?___fltol
  5568  0030A2  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5569  0030A6  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5570  0030AA  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5571  0030AE                     l672:
  5572  0030AE  0012               	return		;funcret
  5573  0030B0                     __end_of___fltol:
  5574                           	opt callstack 0
  5575                           
  5576 ;; *************** function ___flsub *****************
  5577 ;; Defined at:
  5578 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  5579 ;; Parameters:    Size  Location     Type
  5580 ;;  b               4   39[COMRAM] long 
  5581 ;;  a               4   43[COMRAM] long 
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;		None
  5584 ;; Return value:  Size  Location     Type
  5585 ;;                  4   39[COMRAM] long 
  5586 ;; Registers used:
  5587 ;;		wreg, status,2, status,0, cstack
  5588 ;; Tracked objects:
  5589 ;;		On entry : 0/0
  5590 ;;		On exit  : 0/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5593 ;;      Params:         8       0       0       0       0       0       0       0       0
  5594 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5595 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5596 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5597 ;;Total ram usage:        8 bytes
  5598 ;; Hardware stack levels used:    1
  5599 ;; Hardware stack levels required when called:    1
  5600 ;; This function calls:
  5601 ;;		___fladd
  5602 ;; This function is called by:
  5603 ;;		_efgtoa
  5604 ;; This function uses a non-reentrant model
  5605 ;;
  5606                           
  5607                           	psect	text17
  5608  003B48                     __ptext17:
  5609                           	opt callstack 0
  5610  003B48                     ___flsub:
  5611                           	opt callstack 25
  5612  003B48  0E00               	movlw	0
  5613  003B4A  1A2C               	xorwf	___flsub@a^0,f,c
  5614  003B4C  0E00               	movlw	0
  5615  003B4E  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  5616  003B50  0E00               	movlw	0
  5617  003B52  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  5618  003B54  0E80               	movlw	128
  5619  003B56  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  5620  003B58  C028  F001         	movff	___flsub@b,___fladd@b
  5621  003B5C  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  5622  003B60  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  5623  003B64  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  5624  003B68  C02C  F005         	movff	___flsub@a,___fladd@a
  5625  003B6C  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  5626  003B70  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  5627  003B74  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  5628  003B78  ECB1  F00C         	call	___fladd	;wreg free
  5629  003B7C  C001  F028         	movff	?___fladd,?___flsub
  5630  003B80  C002  F029         	movff	?___fladd+1,?___flsub+1
  5631  003B84  C003  F02A         	movff	?___fladd+2,?___flsub+2
  5632  003B88  C004  F02B         	movff	?___fladd+3,?___flsub+3
  5633  003B8C  0012               	return		;funcret
  5634  003B8E                     __end_of___flsub:
  5635                           	opt callstack 0
  5636                           
  5637 ;; *************** function ___fladd *****************
  5638 ;; Defined at:
  5639 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  5640 ;; Parameters:    Size  Location     Type
  5641 ;;  b               4    0[COMRAM] long 
  5642 ;;  a               4    4[COMRAM] long 
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;  grs             1   15[COMRAM] unsigned char 
  5645 ;;  bexp            1   14[COMRAM] unsigned char 
  5646 ;;  aexp            1   13[COMRAM] unsigned char 
  5647 ;;  signs           1   12[COMRAM] unsigned char 
  5648 ;; Return value:  Size  Location     Type
  5649 ;;                  4    0[COMRAM] unsigned char 
  5650 ;; Registers used:
  5651 ;;		wreg, status,2, status,0
  5652 ;; Tracked objects:
  5653 ;;		On entry : 0/0
  5654 ;;		On exit  : 0/0
  5655 ;;		Unchanged: 0/0
  5656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5657 ;;      Params:         8       0       0       0       0       0       0       0       0
  5658 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5659 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5660 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5661 ;;Total ram usage:       16 bytes
  5662 ;; Hardware stack levels used:    1
  5663 ;; This function calls:
  5664 ;;		Nothing
  5665 ;; This function is called by:
  5666 ;;		_efgtoa
  5667 ;;		___flsub
  5668 ;; This function uses a non-reentrant model
  5669 ;;
  5670                           
  5671                           	psect	text18
  5672  001962                     __ptext18:
  5673                           	opt callstack 0
  5674  001962                     ___fladd:
  5675                           	opt callstack 25
  5676  001962  5004               	movf	(___fladd@b+3)^0,w,c
  5677  001964  0B80               	andlw	128
  5678  001966  6E0D               	movwf	___fladd@signs^0,c
  5679  001968  5004               	movf	(___fladd@b+3)^0,w,c
  5680  00196A  2404               	addwf	(___fladd@b+3)^0,w,c
  5681  00196C  6E0F               	movwf	___fladd@bexp^0,c
  5682  00196E  AE03               	btfss	(___fladd@b+2)^0,7,c
  5683  001970  EFBC  F00C         	goto	u2771
  5684  001974  EFBE  F00C         	goto	u2770
  5685  001978                     u2771:
  5686  001978  EFBF  F00C         	goto	l2995
  5687  00197C                     u2770:
  5688  00197C  800F               	bsf	___fladd@bexp^0,0,c
  5689  00197E                     l2995:
  5690  00197E  500F               	movf	___fladd@bexp^0,w,c
  5691  001980  B4D8               	btfsc	status,2,c
  5692  001982  EFC5  F00C         	goto	u2781
  5693  001986  EFC7  F00C         	goto	u2780
  5694  00198A                     u2781:
  5695  00198A  EFDC  F00C         	goto	l3005
  5696  00198E                     u2780:
  5697  00198E  280F               	incf	___fladd@bexp^0,w,c
  5698  001990  A4D8               	btfss	status,2,c
  5699  001992  EFCD  F00C         	goto	u2791
  5700  001996  EFCF  F00C         	goto	u2790
  5701  00199A                     u2791:
  5702  00199A  EFD7  F00C         	goto	l3001
  5703  00199E                     u2790:
  5704  00199E  0E00               	movlw	0
  5705  0019A0  6E01               	movwf	___fladd@b^0,c
  5706  0019A2  0E00               	movlw	0
  5707  0019A4  6E02               	movwf	(___fladd@b+1)^0,c
  5708  0019A6  0E00               	movlw	0
  5709  0019A8  6E03               	movwf	(___fladd@b+2)^0,c
  5710  0019AA  0E00               	movlw	0
  5711  0019AC  6E04               	movwf	(___fladd@b+3)^0,c
  5712  0019AE                     l3001:
  5713  0019AE  8E03               	bsf	(___fladd@b+2)^0,7,c
  5714  0019B0  0E00               	movlw	0
  5715  0019B2  6E04               	movwf	(___fladd@b+3)^0,c
  5716  0019B4  EFE4  F00C         	goto	l3007
  5717  0019B8                     l3005:
  5718  0019B8  0E00               	movlw	0
  5719  0019BA  6E01               	movwf	___fladd@b^0,c
  5720  0019BC  0E00               	movlw	0
  5721  0019BE  6E02               	movwf	(___fladd@b+1)^0,c
  5722  0019C0  0E00               	movlw	0
  5723  0019C2  6E03               	movwf	(___fladd@b+2)^0,c
  5724  0019C4  0E00               	movlw	0
  5725  0019C6  6E04               	movwf	(___fladd@b+3)^0,c
  5726  0019C8                     l3007:
  5727  0019C8  5008               	movf	(___fladd@a+3)^0,w,c
  5728  0019CA  0B80               	andlw	128
  5729  0019CC  6E0E               	movwf	___fladd@aexp^0,c
  5730  0019CE  500D               	movf	___fladd@signs^0,w,c
  5731  0019D0  180E               	xorwf	___fladd@aexp^0,w,c
  5732  0019D2  B4D8               	btfsc	status,2,c
  5733  0019D4  EFEE  F00C         	goto	u2801
  5734  0019D8  EFF0  F00C         	goto	u2800
  5735  0019DC                     u2801:
  5736  0019DC  EFF1  F00C         	goto	l3013
  5737  0019E0                     u2800:
  5738  0019E0  8C0D               	bsf	___fladd@signs^0,6,c
  5739  0019E2                     l3013:
  5740  0019E2  5008               	movf	(___fladd@a+3)^0,w,c
  5741  0019E4  2408               	addwf	(___fladd@a+3)^0,w,c
  5742  0019E6  6E0E               	movwf	___fladd@aexp^0,c
  5743  0019E8  AE07               	btfss	(___fladd@a+2)^0,7,c
  5744  0019EA  EFF9  F00C         	goto	u2811
  5745  0019EE  EFFB  F00C         	goto	u2810
  5746  0019F2                     u2811:
  5747  0019F2  EFFC  F00C         	goto	l3019
  5748  0019F6                     u2810:
  5749  0019F6  800E               	bsf	___fladd@aexp^0,0,c
  5750  0019F8                     l3019:
  5751  0019F8  500E               	movf	___fladd@aexp^0,w,c
  5752  0019FA  B4D8               	btfsc	status,2,c
  5753  0019FC  EF02  F00D         	goto	u2821
  5754  001A00  EF04  F00D         	goto	u2820
  5755  001A04                     u2821:
  5756  001A04  EF19  F00D         	goto	l3029
  5757  001A08                     u2820:
  5758  001A08  280E               	incf	___fladd@aexp^0,w,c
  5759  001A0A  A4D8               	btfss	status,2,c
  5760  001A0C  EF0A  F00D         	goto	u2831
  5761  001A10  EF0C  F00D         	goto	u2830
  5762  001A14                     u2831:
  5763  001A14  EF14  F00D         	goto	l3025
  5764  001A18                     u2830:
  5765  001A18  0E00               	movlw	0
  5766  001A1A  6E05               	movwf	___fladd@a^0,c
  5767  001A1C  0E00               	movlw	0
  5768  001A1E  6E06               	movwf	(___fladd@a+1)^0,c
  5769  001A20  0E00               	movlw	0
  5770  001A22  6E07               	movwf	(___fladd@a+2)^0,c
  5771  001A24  0E00               	movlw	0
  5772  001A26  6E08               	movwf	(___fladd@a+3)^0,c
  5773  001A28                     l3025:
  5774  001A28  8E07               	bsf	(___fladd@a+2)^0,7,c
  5775  001A2A  0E00               	movlw	0
  5776  001A2C  6E08               	movwf	(___fladd@a+3)^0,c
  5777  001A2E  EF21  F00D         	goto	l3031
  5778  001A32                     l3029:
  5779  001A32  0E00               	movlw	0
  5780  001A34  6E05               	movwf	___fladd@a^0,c
  5781  001A36  0E00               	movlw	0
  5782  001A38  6E06               	movwf	(___fladd@a+1)^0,c
  5783  001A3A  0E00               	movlw	0
  5784  001A3C  6E07               	movwf	(___fladd@a+2)^0,c
  5785  001A3E  0E00               	movlw	0
  5786  001A40  6E08               	movwf	(___fladd@a+3)^0,c
  5787  001A42                     l3031:
  5788  001A42  500F               	movf	___fladd@bexp^0,w,c
  5789  001A44  5C0E               	subwf	___fladd@aexp^0,w,c
  5790  001A46  B0D8               	btfsc	status,0,c
  5791  001A48  EF28  F00D         	goto	u2841
  5792  001A4C  EF2A  F00D         	goto	u2840
  5793  001A50                     u2841:
  5794  001A50  EF51  F00D         	goto	l3067
  5795  001A54                     u2840:
  5796  001A54  AC0D               	btfss	___fladd@signs^0,6,c
  5797  001A56  EF2F  F00D         	goto	u2851
  5798  001A5A  EF31  F00D         	goto	u2850
  5799  001A5E                     u2851:
  5800  001A5E  EF33  F00D         	goto	l3037
  5801  001A62                     u2850:
  5802  001A62  0E80               	movlw	128
  5803  001A64  1A0D               	xorwf	___fladd@signs^0,f,c
  5804  001A66                     l3037:
  5805  001A66  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5806  001A6A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5807  001A6E  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5808  001A72  C001  F010         	movff	___fladd@b,___fladd@grs
  5809  001A76  C005  F001         	movff	___fladd@a,___fladd@b
  5810  001A7A  C010  F005         	movff	___fladd@grs,___fladd@a
  5811  001A7E  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5812  001A82  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5813  001A86  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5814  001A8A  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5815  001A8E  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5816  001A92  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5817  001A96  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5818  001A9A  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5819  001A9E  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5820  001AA2                     l3067:
  5821  001AA2  0E00               	movlw	0
  5822  001AA4  6E10               	movwf	___fladd@grs^0,c
  5823  001AA6  500F               	movf	___fladd@bexp^0,w,c
  5824  001AA8  C00E  F009         	movff	___fladd@aexp,??___fladd
  5825  001AAC  6A0A               	clrf	(??___fladd+1)^0,c
  5826  001AAE  5E09               	subwf	??___fladd^0,f,c
  5827  001AB0  0E00               	movlw	0
  5828  001AB2  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5829  001AB4  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5830  001AB6  EF66  F00D         	goto	u2861
  5831  001ABA  500A               	movf	(??___fladd+1)^0,w,c
  5832  001ABC  E109               	bnz	u2860
  5833  001ABE  0E1A               	movlw	26
  5834  001AC0  5C09               	subwf	??___fladd^0,w,c
  5835  001AC2  A0D8               	btfss	status,0,c
  5836  001AC4  EF66  F00D         	goto	u2861
  5837  001AC8  EF68  F00D         	goto	u2860
  5838  001ACC                     u2861:
  5839  001ACC  EF9F  F00D         	goto	l904
  5840  001AD0                     u2860:
  5841  001AD0  5001               	movf	___fladd@b^0,w,c
  5842  001AD2  1002               	iorwf	(___fladd@b+1)^0,w,c
  5843  001AD4  1003               	iorwf	(___fladd@b+2)^0,w,c
  5844  001AD6  1004               	iorwf	(___fladd@b+3)^0,w,c
  5845  001AD8  A4D8               	btfss	status,2,c
  5846  001ADA  EF71  F00D         	goto	u2871
  5847  001ADE  EF74  F00D         	goto	u2870
  5848  001AE2                     u2871:
  5849  001AE2  0E01               	movlw	1
  5850  001AE4  EF75  F00D         	goto	u2880
  5851  001AE8                     u2870:
  5852  001AE8  0E00               	movlw	0
  5853  001AEA                     u2880:
  5854  001AEA  6E10               	movwf	___fladd@grs^0,c
  5855  001AEC  0E00               	movlw	0
  5856  001AEE  6E01               	movwf	___fladd@b^0,c
  5857  001AF0  0E00               	movlw	0
  5858  001AF2  6E02               	movwf	(___fladd@b+1)^0,c
  5859  001AF4  0E00               	movlw	0
  5860  001AF6  6E03               	movwf	(___fladd@b+2)^0,c
  5861  001AF8  0E00               	movlw	0
  5862  001AFA  6E04               	movwf	(___fladd@b+3)^0,c
  5863  001AFC  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5864  001B00  EFA8  F00D         	goto	l903
  5865  001B04                     l905:
  5866  001B04  A010               	btfss	___fladd@grs^0,0,c
  5867  001B06  EF87  F00D         	goto	u2891
  5868  001B0A  EF89  F00D         	goto	u2890
  5869  001B0E                     u2891:
  5870  001B0E  EF8F  F00D         	goto	l3079
  5871  001B12                     u2890:
  5872  001B12  90D8               	bcf	status,0,c
  5873  001B14  3010               	rrcf	___fladd@grs^0,w,c
  5874  001B16  0901               	iorlw	1
  5875  001B18  6E10               	movwf	___fladd@grs^0,c
  5876  001B1A  EF91  F00D         	goto	l3081
  5877  001B1E                     l3079:
  5878  001B1E  90D8               	bcf	status,0,c
  5879  001B20  3210               	rrcf	___fladd@grs^0,f,c
  5880  001B22                     l3081:
  5881  001B22  A001               	btfss	___fladd@b^0,0,c
  5882  001B24  EF96  F00D         	goto	u2901
  5883  001B28  EF98  F00D         	goto	u2900
  5884  001B2C                     u2901:
  5885  001B2C  EF99  F00D         	goto	l3085
  5886  001B30                     u2900:
  5887  001B30  8E10               	bsf	___fladd@grs^0,7,c
  5888  001B32                     l3085:
  5889  001B32  3404               	rlcf	(___fladd@b+3)^0,w,c
  5890  001B34  3204               	rrcf	(___fladd@b+3)^0,f,c
  5891  001B36  3203               	rrcf	(___fladd@b+2)^0,f,c
  5892  001B38  3202               	rrcf	(___fladd@b+1)^0,f,c
  5893  001B3A  3201               	rrcf	___fladd@b^0,f,c
  5894  001B3C  2A0F               	incf	___fladd@bexp^0,f,c
  5895  001B3E                     l904:
  5896  001B3E  500E               	movf	___fladd@aexp^0,w,c
  5897  001B40  5C0F               	subwf	___fladd@bexp^0,w,c
  5898  001B42  A0D8               	btfss	status,0,c
  5899  001B44  EFA6  F00D         	goto	u2911
  5900  001B48  EFA8  F00D         	goto	u2910
  5901  001B4C                     u2911:
  5902  001B4C  EF82  F00D         	goto	l905
  5903  001B50                     u2910:
  5904  001B50                     l903:
  5905  001B50  BC0D               	btfsc	___fladd@signs^0,6,c
  5906  001B52  EFAD  F00D         	goto	u2921
  5907  001B56  EFAF  F00D         	goto	u2920
  5908  001B5A                     u2921:
  5909  001B5A  EFEF  F00D         	goto	l3113
  5910  001B5E                     u2920:
  5911  001B5E  500F               	movf	___fladd@bexp^0,w,c
  5912  001B60  A4D8               	btfss	status,2,c
  5913  001B62  EFB5  F00D         	goto	u2931
  5914  001B66  EFB7  F00D         	goto	u2930
  5915  001B6A                     u2931:
  5916  001B6A  EFC1  F00D         	goto	l3095
  5917  001B6E                     u2930:
  5918  001B6E  0E00               	movlw	0
  5919  001B70  6E01               	movwf	?___fladd^0,c
  5920  001B72  0E00               	movlw	0
  5921  001B74  6E02               	movwf	(?___fladd+1)^0,c
  5922  001B76  0E00               	movlw	0
  5923  001B78  6E03               	movwf	(?___fladd+2)^0,c
  5924  001B7A  0E00               	movlw	0
  5925  001B7C  6E04               	movwf	(?___fladd+3)^0,c
  5926  001B7E  EF10  F00F         	goto	l912
  5927  001B82                     l3095:
  5928  001B82  5005               	movf	___fladd@a^0,w,c
  5929  001B84  2601               	addwf	___fladd@b^0,f,c
  5930  001B86  5006               	movf	(___fladd@a+1)^0,w,c
  5931  001B88  2202               	addwfc	(___fladd@b+1)^0,f,c
  5932  001B8A  5007               	movf	(___fladd@a+2)^0,w,c
  5933  001B8C  2203               	addwfc	(___fladd@b+2)^0,f,c
  5934  001B8E  5008               	movf	(___fladd@a+3)^0,w,c
  5935  001B90  2204               	addwfc	(___fladd@b+3)^0,f,c
  5936  001B92  A004               	btfss	(___fladd@b+3)^0,0,c
  5937  001B94  EFCE  F00D         	goto	u2941
  5938  001B98  EFD0  F00D         	goto	u2940
  5939  001B9C                     u2941:
  5940  001B9C  EF7C  F00E         	goto	l3149
  5941  001BA0                     u2940:
  5942  001BA0  A010               	btfss	___fladd@grs^0,0,c
  5943  001BA2  EFD5  F00D         	goto	u2951
  5944  001BA6  EFD7  F00D         	goto	u2950
  5945  001BAA                     u2951:
  5946  001BAA  EFDD  F00D         	goto	l3103
  5947  001BAE                     u2950:
  5948  001BAE  90D8               	bcf	status,0,c
  5949  001BB0  3010               	rrcf	___fladd@grs^0,w,c
  5950  001BB2  0901               	iorlw	1
  5951  001BB4  6E10               	movwf	___fladd@grs^0,c
  5952  001BB6  EFDF  F00D         	goto	l3105
  5953  001BBA                     l3103:
  5954  001BBA  90D8               	bcf	status,0,c
  5955  001BBC  3210               	rrcf	___fladd@grs^0,f,c
  5956  001BBE                     l3105:
  5957  001BBE  A001               	btfss	___fladd@b^0,0,c
  5958  001BC0  EFE4  F00D         	goto	u2961
  5959  001BC4  EFE6  F00D         	goto	u2960
  5960  001BC8                     u2961:
  5961  001BC8  EFE7  F00D         	goto	l3109
  5962  001BCC                     u2960:
  5963  001BCC  8E10               	bsf	___fladd@grs^0,7,c
  5964  001BCE                     l3109:
  5965  001BCE  3404               	rlcf	(___fladd@b+3)^0,w,c
  5966  001BD0  3204               	rrcf	(___fladd@b+3)^0,f,c
  5967  001BD2  3203               	rrcf	(___fladd@b+2)^0,f,c
  5968  001BD4  3202               	rrcf	(___fladd@b+1)^0,f,c
  5969  001BD6  3201               	rrcf	___fladd@b^0,f,c
  5970  001BD8  2A0F               	incf	___fladd@bexp^0,f,c
  5971  001BDA  EF7C  F00E         	goto	l3149
  5972  001BDE                     l3113:
  5973  001BDE  5005               	movf	___fladd@a^0,w,c
  5974  001BE0  5C01               	subwf	___fladd@b^0,w,c
  5975  001BE2  5006               	movf	(___fladd@a+1)^0,w,c
  5976  001BE4  5802               	subwfb	(___fladd@b+1)^0,w,c
  5977  001BE6  5007               	movf	(___fladd@a+2)^0,w,c
  5978  001BE8  5803               	subwfb	(___fladd@b+2)^0,w,c
  5979  001BEA  5004               	movf	(___fladd@b+3)^0,w,c
  5980  001BEC  0A80               	xorlw	128
  5981  001BEE  6E09               	movwf	??___fladd^0,c
  5982  001BF0  5008               	movf	(___fladd@a+3)^0,w,c
  5983  001BF2  0A80               	xorlw	128
  5984  001BF4  5809               	subwfb	??___fladd^0,w,c
  5985  001BF6  B0D8               	btfsc	status,0,c
  5986  001BF8  EF00  F00E         	goto	u2971
  5987  001BFC  EF02  F00E         	goto	u2970
  5988  001C00                     u2971:
  5989  001C00  EF2D  F00E         	goto	l3123
  5990  001C04                     u2970:
  5991  001C04  5001               	movf	___fladd@b^0,w,c
  5992  001C06  5C05               	subwf	___fladd@a^0,w,c
  5993  001C08  6E09               	movwf	??___fladd^0,c
  5994  001C0A  5002               	movf	(___fladd@b+1)^0,w,c
  5995  001C0C  5806               	subwfb	(___fladd@a+1)^0,w,c
  5996  001C0E  6E0A               	movwf	(??___fladd+1)^0,c
  5997  001C10  5003               	movf	(___fladd@b+2)^0,w,c
  5998  001C12  5807               	subwfb	(___fladd@a+2)^0,w,c
  5999  001C14  6E0B               	movwf	(??___fladd+2)^0,c
  6000  001C16  5004               	movf	(___fladd@b+3)^0,w,c
  6001  001C18  5808               	subwfb	(___fladd@a+3)^0,w,c
  6002  001C1A  6E0C               	movwf	(??___fladd+3)^0,c
  6003  001C1C  0EFF               	movlw	255
  6004  001C1E  2409               	addwf	??___fladd^0,w,c
  6005  001C20  6E01               	movwf	___fladd@b^0,c
  6006  001C22  0EFF               	movlw	255
  6007  001C24  200A               	addwfc	(??___fladd+1)^0,w,c
  6008  001C26  6E02               	movwf	(___fladd@b+1)^0,c
  6009  001C28  0EFF               	movlw	255
  6010  001C2A  200B               	addwfc	(??___fladd+2)^0,w,c
  6011  001C2C  6E03               	movwf	(___fladd@b+2)^0,c
  6012  001C2E  0EFF               	movlw	255
  6013  001C30  200C               	addwfc	(??___fladd+3)^0,w,c
  6014  001C32  6E04               	movwf	(___fladd@b+3)^0,c
  6015  001C34  0E80               	movlw	128
  6016  001C36  1A0D               	xorwf	___fladd@signs^0,f,c
  6017  001C38  6C10               	negf	___fladd@grs^0,c
  6018  001C3A  5010               	movf	___fladd@grs^0,w,c
  6019  001C3C  A4D8               	btfss	status,2,c
  6020  001C3E  EF23  F00E         	goto	u2981
  6021  001C42  EF25  F00E         	goto	u2980
  6022  001C46                     u2981:
  6023  001C46  EF35  F00E         	goto	l920
  6024  001C4A                     u2980:
  6025  001C4A  0E01               	movlw	1
  6026  001C4C  2601               	addwf	___fladd@b^0,f,c
  6027  001C4E  0E00               	movlw	0
  6028  001C50  2202               	addwfc	(___fladd@b+1)^0,f,c
  6029  001C52  2203               	addwfc	(___fladd@b+2)^0,f,c
  6030  001C54  2204               	addwfc	(___fladd@b+3)^0,f,c
  6031  001C56  EF35  F00E         	goto	l920
  6032  001C5A                     l3123:
  6033  001C5A  5005               	movf	___fladd@a^0,w,c
  6034  001C5C  5E01               	subwf	___fladd@b^0,f,c
  6035  001C5E  5006               	movf	(___fladd@a+1)^0,w,c
  6036  001C60  5A02               	subwfb	(___fladd@b+1)^0,f,c
  6037  001C62  5007               	movf	(___fladd@a+2)^0,w,c
  6038  001C64  5A03               	subwfb	(___fladd@b+2)^0,f,c
  6039  001C66  5008               	movf	(___fladd@a+3)^0,w,c
  6040  001C68  5A04               	subwfb	(___fladd@b+3)^0,f,c
  6041  001C6A                     l920:
  6042  001C6A  5001               	movf	___fladd@b^0,w,c
  6043  001C6C  1002               	iorwf	(___fladd@b+1)^0,w,c
  6044  001C6E  1003               	iorwf	(___fladd@b+2)^0,w,c
  6045  001C70  1004               	iorwf	(___fladd@b+3)^0,w,c
  6046  001C72  A4D8               	btfss	status,2,c
  6047  001C74  EF3E  F00E         	goto	u2991
  6048  001C78  EF40  F00E         	goto	u2990
  6049  001C7C                     u2991:
  6050  001C7C  EF75  F00E         	goto	l3147
  6051  001C80                     u2990:
  6052  001C80  5010               	movf	___fladd@grs^0,w,c
  6053  001C82  A4D8               	btfss	status,2,c
  6054  001C84  EF46  F00E         	goto	u3001
  6055  001C88  EF48  F00E         	goto	u3000
  6056  001C8C                     u3001:
  6057  001C8C  EF75  F00E         	goto	l3147
  6058  001C90                     u3000:
  6059  001C90  0E00               	movlw	0
  6060  001C92  6E01               	movwf	?___fladd^0,c
  6061  001C94  0E00               	movlw	0
  6062  001C96  6E02               	movwf	(?___fladd+1)^0,c
  6063  001C98  0E00               	movlw	0
  6064  001C9A  6E03               	movwf	(?___fladd+2)^0,c
  6065  001C9C  0E00               	movlw	0
  6066  001C9E  6E04               	movwf	(?___fladd+3)^0,c
  6067  001CA0  EF10  F00F         	goto	l912
  6068  001CA4                     l3131:
  6069  001CA4  90D8               	bcf	status,0,c
  6070  001CA6  3601               	rlcf	___fladd@b^0,f,c
  6071  001CA8  3602               	rlcf	(___fladd@b+1)^0,f,c
  6072  001CAA  3603               	rlcf	(___fladd@b+2)^0,f,c
  6073  001CAC  3604               	rlcf	(___fladd@b+3)^0,f,c
  6074  001CAE  AE10               	btfss	___fladd@grs^0,7,c
  6075  001CB0  EF5C  F00E         	goto	u3011
  6076  001CB4  EF5E  F00E         	goto	u3010
  6077  001CB8                     u3011:
  6078  001CB8  EF5F  F00E         	goto	l3137
  6079  001CBC                     u3010:
  6080  001CBC  8001               	bsf	___fladd@b^0,0,c
  6081  001CBE                     l3137:
  6082  001CBE  A010               	btfss	___fladd@grs^0,0,c
  6083  001CC0  EF64  F00E         	goto	u3021
  6084  001CC4  EF66  F00E         	goto	u3020
  6085  001CC8                     u3021:
  6086  001CC8  EF6A  F00E         	goto	l3141
  6087  001CCC                     u3020:
  6088  001CCC  80D8               	bsf	status,0,c
  6089  001CCE  3610               	rlcf	___fladd@grs^0,f,c
  6090  001CD0  EF6C  F00E         	goto	l3143
  6091  001CD4                     l3141:
  6092  001CD4  90D8               	bcf	status,0,c
  6093  001CD6  3610               	rlcf	___fladd@grs^0,f,c
  6094  001CD8                     l3143:
  6095  001CD8  500F               	movf	___fladd@bexp^0,w,c
  6096  001CDA  B4D8               	btfsc	status,2,c
  6097  001CDC  EF72  F00E         	goto	u3031
  6098  001CE0  EF74  F00E         	goto	u3030
  6099  001CE4                     u3031:
  6100  001CE4  EF75  F00E         	goto	l3147
  6101  001CE8                     u3030:
  6102  001CE8  060F               	decf	___fladd@bexp^0,f,c
  6103  001CEA                     l3147:
  6104  001CEA  AE03               	btfss	(___fladd@b+2)^0,7,c
  6105  001CEC  EF7A  F00E         	goto	u3041
  6106  001CF0  EF7C  F00E         	goto	u3040
  6107  001CF4                     u3041:
  6108  001CF4  EF52  F00E         	goto	l3131
  6109  001CF8                     u3040:
  6110  001CF8                     l3149:
  6111  001CF8  0E00               	movlw	0
  6112  001CFA  6E0E               	movwf	___fladd@aexp^0,c
  6113  001CFC  AE10               	btfss	___fladd@grs^0,7,c
  6114  001CFE  EF83  F00E         	goto	u3051
  6115  001D02  EF85  F00E         	goto	u3050
  6116  001D06                     u3051:
  6117  001D06  EF9D  F00E         	goto	l929
  6118  001D0A                     u3050:
  6119  001D0A  C010  F009         	movff	___fladd@grs,??___fladd
  6120  001D0E  0E7F               	movlw	127
  6121  001D10  1609               	andwf	??___fladd^0,f,c
  6122  001D12  B4D8               	btfsc	status,2,c
  6123  001D14  EF8E  F00E         	goto	u3061
  6124  001D18  EF90  F00E         	goto	u3060
  6125  001D1C                     u3061:
  6126  001D1C  EF94  F00E         	goto	l930
  6127  001D20                     u3060:
  6128  001D20                     l3155:
  6129  001D20  0E01               	movlw	1
  6130  001D22  6E0E               	movwf	___fladd@aexp^0,c
  6131  001D24  EF9D  F00E         	goto	l929
  6132  001D28                     l930:
  6133  001D28  A001               	btfss	___fladd@b^0,0,c
  6134  001D2A  EF99  F00E         	goto	u3071
  6135  001D2E  EF9B  F00E         	goto	u3070
  6136  001D32                     u3071:
  6137  001D32  EF9D  F00E         	goto	l929
  6138  001D36                     u3070:
  6139  001D36  EF90  F00E         	goto	l3155
  6140  001D3A                     l929:
  6141  001D3A  500E               	movf	___fladd@aexp^0,w,c
  6142  001D3C  B4D8               	btfsc	status,2,c
  6143  001D3E  EFA3  F00E         	goto	u3081
  6144  001D42  EFA5  F00E         	goto	u3080
  6145  001D46                     u3081:
  6146  001D46  EFD0  F00E         	goto	l3167
  6147  001D4A                     u3080:
  6148  001D4A  0E01               	movlw	1
  6149  001D4C  2601               	addwf	___fladd@b^0,f,c
  6150  001D4E  0E00               	movlw	0
  6151  001D50  2202               	addwfc	(___fladd@b+1)^0,f,c
  6152  001D52  2203               	addwfc	(___fladd@b+2)^0,f,c
  6153  001D54  2204               	addwfc	(___fladd@b+3)^0,f,c
  6154  001D56  A004               	btfss	(___fladd@b+3)^0,0,c
  6155  001D58  EFB0  F00E         	goto	u3091
  6156  001D5C  EFB2  F00E         	goto	u3090
  6157  001D60                     u3091:
  6158  001D60  EFD0  F00E         	goto	l3167
  6159  001D64                     u3090:
  6160  001D64  C001  F009         	movff	___fladd@b,??___fladd
  6161  001D68  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6162  001D6C  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6163  001D70  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6164  001D74  340C               	rlcf	(??___fladd+3)^0,w,c
  6165  001D76  320C               	rrcf	(??___fladd+3)^0,f,c
  6166  001D78  320B               	rrcf	(??___fladd+2)^0,f,c
  6167  001D7A  320A               	rrcf	(??___fladd+1)^0,f,c
  6168  001D7C  3209               	rrcf	??___fladd^0,f,c
  6169  001D7E  C009  F001         	movff	??___fladd,___fladd@b
  6170  001D82  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6171  001D86  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6172  001D8A  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6173  001D8E  280F               	incf	___fladd@bexp^0,w,c
  6174  001D90  B4D8               	btfsc	status,2,c
  6175  001D92  EFCD  F00E         	goto	u3101
  6176  001D96  EFCF  F00E         	goto	u3100
  6177  001D9A                     u3101:
  6178  001D9A  EFD0  F00E         	goto	l3167
  6179  001D9E                     u3100:
  6180  001D9E  2A0F               	incf	___fladd@bexp^0,f,c
  6181  001DA0                     l3167:
  6182  001DA0  280F               	incf	___fladd@bexp^0,w,c
  6183  001DA2  B4D8               	btfsc	status,2,c
  6184  001DA4  EFD6  F00E         	goto	u3111
  6185  001DA8  EFD8  F00E         	goto	u3110
  6186  001DAC                     u3111:
  6187  001DAC  EFE0  F00E         	goto	l3171
  6188  001DB0                     u3110:
  6189  001DB0  500F               	movf	___fladd@bexp^0,w,c
  6190  001DB2  A4D8               	btfss	status,2,c
  6191  001DB4  EFDE  F00E         	goto	u3121
  6192  001DB8  EFE0  F00E         	goto	u3120
  6193  001DBC                     u3121:
  6194  001DBC  EFF2  F00E         	goto	l3175
  6195  001DC0                     u3120:
  6196  001DC0                     l3171:
  6197  001DC0  0E00               	movlw	0
  6198  001DC2  6E01               	movwf	___fladd@b^0,c
  6199  001DC4  0E00               	movlw	0
  6200  001DC6  6E02               	movwf	(___fladd@b+1)^0,c
  6201  001DC8  0E00               	movlw	0
  6202  001DCA  6E03               	movwf	(___fladd@b+2)^0,c
  6203  001DCC  0E00               	movlw	0
  6204  001DCE  6E04               	movwf	(___fladd@b+3)^0,c
  6205  001DD0  500F               	movf	___fladd@bexp^0,w,c
  6206  001DD2  A4D8               	btfss	status,2,c
  6207  001DD4  EFEE  F00E         	goto	u3131
  6208  001DD8  EFF0  F00E         	goto	u3130
  6209  001DDC                     u3131:
  6210  001DDC  EFF2  F00E         	goto	l3175
  6211  001DE0                     u3130:
  6212  001DE0  0E00               	movlw	0
  6213  001DE2  6E0D               	movwf	___fladd@signs^0,c
  6214  001DE4                     l3175:
  6215  001DE4  A00F               	btfss	___fladd@bexp^0,0,c
  6216  001DE6  EFF7  F00E         	goto	u3141
  6217  001DEA  EFF9  F00E         	goto	u3140
  6218  001DEE                     u3141:
  6219  001DEE  EFFC  F00E         	goto	l3179
  6220  001DF2                     u3140:
  6221  001DF2  8E03               	bsf	(___fladd@b+2)^0,7,c
  6222  001DF4  EFFD  F00E         	goto	l3181
  6223  001DF8                     l3179:
  6224  001DF8  9E03               	bcf	(___fladd@b+2)^0,7,c
  6225  001DFA                     l3181:
  6226  001DFA  90D8               	bcf	status,0,c
  6227  001DFC  300F               	rrcf	___fladd@bexp^0,w,c
  6228  001DFE  6E04               	movwf	(___fladd@b+3)^0,c
  6229  001E00  AE0D               	btfss	___fladd@signs^0,7,c
  6230  001E02  EF05  F00F         	goto	u3151
  6231  001E06  EF07  F00F         	goto	u3150
  6232  001E0A                     u3151:
  6233  001E0A  EF08  F00F         	goto	l3187
  6234  001E0E                     u3150:
  6235  001E0E  8E04               	bsf	(___fladd@b+3)^0,7,c
  6236  001E10                     l3187:
  6237  001E10  C001  F001         	movff	___fladd@b,?___fladd
  6238  001E14  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6239  001E18  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6240  001E1C  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6241  001E20                     l912:
  6242  001E20  0012               	return		;funcret
  6243  001E22                     __end_of___fladd:
  6244                           	opt callstack 0
  6245                           
  6246 ;; *************** function ___flneg *****************
  6247 ;; Defined at:
  6248 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;  f1              4    0[COMRAM] unsigned char 
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;		None
  6253 ;; Return value:  Size  Location     Type
  6254 ;;                  4    0[COMRAM] unsigned char 
  6255 ;; Registers used:
  6256 ;;		wreg, status,2, status,0
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6262 ;;      Params:         4       0       0       0       0       0       0       0       0
  6263 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6264 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6265 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6266 ;;Total ram usage:        4 bytes
  6267 ;; Hardware stack levels used:    1
  6268 ;; This function calls:
  6269 ;;		Nothing
  6270 ;; This function is called by:
  6271 ;;		_efgtoa
  6272 ;; This function uses a non-reentrant model
  6273 ;;
  6274                           
  6275                           	psect	text19
  6276  003C8E                     __ptext19:
  6277                           	opt callstack 0
  6278  003C8E                     ___flneg:
  6279                           	opt callstack 26
  6280  003C8E  5001               	movf	___flneg@f1^0,w,c
  6281  003C90  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6282  003C92  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6283  003C94  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6284  003C96  B4D8               	btfsc	status,2,c
  6285  003C98  EF50  F01E         	goto	u4061
  6286  003C9C  EF52  F01E         	goto	u4060
  6287  003CA0                     u4061:
  6288  003CA0  EF5A  F01E         	goto	l3683
  6289  003CA4                     u4060:
  6290  003CA4  0E00               	movlw	0
  6291  003CA6  1A01               	xorwf	___flneg@f1^0,f,c
  6292  003CA8  0E00               	movlw	0
  6293  003CAA  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6294  003CAC  0E00               	movlw	0
  6295  003CAE  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6296  003CB0  0E80               	movlw	128
  6297  003CB2  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6298  003CB4                     l3683:
  6299  003CB4  C001  F001         	movff	___flneg@f1,?___flneg
  6300  003CB8  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6301  003CBC  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6302  003CC0  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6303  003CC4  0012               	return		;funcret
  6304  003CC6                     __end_of___flneg:
  6305                           	opt callstack 0
  6306                           
  6307 ;; *************** function ___flmul *****************
  6308 ;; Defined at:
  6309 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  6310 ;; Parameters:    Size  Location     Type
  6311 ;;  b               4   14[COMRAM] unsigned char 
  6312 ;;  a               4   18[COMRAM] unsigned char 
  6313 ;; Auto vars:     Size  Location     Type
  6314 ;;  prod            4   33[COMRAM] struct .
  6315 ;;  grs             4   27[COMRAM] unsigned long 
  6316 ;;  temp            2   37[COMRAM] struct .
  6317 ;;  bexp            1   32[COMRAM] unsigned char 
  6318 ;;  aexp            1   31[COMRAM] unsigned char 
  6319 ;;  sign            1   26[COMRAM] unsigned char 
  6320 ;; Return value:  Size  Location     Type
  6321 ;;                  4   14[COMRAM] unsigned char 
  6322 ;; Registers used:
  6323 ;;		wreg, status,2, status,0, prodl, prodh
  6324 ;; Tracked objects:
  6325 ;;		On entry : 0/0
  6326 ;;		On exit  : 0/0
  6327 ;;		Unchanged: 0/0
  6328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6329 ;;      Params:         8       0       0       0       0       0       0       0       0
  6330 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6331 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6332 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6333 ;;Total ram usage:       25 bytes
  6334 ;; Hardware stack levels used:    1
  6335 ;; This function calls:
  6336 ;;		Nothing
  6337 ;; This function is called by:
  6338 ;;		_main
  6339 ;;		_efgtoa
  6340 ;; This function uses a non-reentrant model
  6341 ;;
  6342                           
  6343                           	psect	text20
  6344  002290                     __ptext20:
  6345                           	opt callstack 0
  6346  002290                     ___flmul:
  6347                           	opt callstack 26
  6348  002290  5012               	movf	(___flmul@b+3)^0,w,c
  6349  002292  0B80               	andlw	128
  6350  002294  6E1B               	movwf	___flmul@sign^0,c
  6351  002296  5012               	movf	(___flmul@b+3)^0,w,c
  6352  002298  2412               	addwf	(___flmul@b+3)^0,w,c
  6353  00229A  6E21               	movwf	___flmul@bexp^0,c
  6354  00229C  AE11               	btfss	(___flmul@b+2)^0,7,c
  6355  00229E  EF53  F011         	goto	u3671
  6356  0022A2  EF55  F011         	goto	u3670
  6357  0022A6                     u3671:
  6358  0022A6  EF56  F011         	goto	l3431
  6359  0022AA                     u3670:
  6360  0022AA  8021               	bsf	___flmul@bexp^0,0,c
  6361  0022AC                     l3431:
  6362  0022AC  5021               	movf	___flmul@bexp^0,w,c
  6363  0022AE  B4D8               	btfsc	status,2,c
  6364  0022B0  EF5C  F011         	goto	u3681
  6365  0022B4  EF5E  F011         	goto	u3680
  6366  0022B8                     u3681:
  6367  0022B8  EF71  F011         	goto	l3439
  6368  0022BC                     u3680:
  6369  0022BC  2821               	incf	___flmul@bexp^0,w,c
  6370  0022BE  A4D8               	btfss	status,2,c
  6371  0022C0  EF64  F011         	goto	u3691
  6372  0022C4  EF66  F011         	goto	u3690
  6373  0022C8                     u3691:
  6374  0022C8  EF6E  F011         	goto	l3437
  6375  0022CC                     u3690:
  6376  0022CC  0E00               	movlw	0
  6377  0022CE  6E0F               	movwf	___flmul@b^0,c
  6378  0022D0  0E00               	movlw	0
  6379  0022D2  6E10               	movwf	(___flmul@b+1)^0,c
  6380  0022D4  0E00               	movlw	0
  6381  0022D6  6E11               	movwf	(___flmul@b+2)^0,c
  6382  0022D8  0E00               	movlw	0
  6383  0022DA  6E12               	movwf	(___flmul@b+3)^0,c
  6384  0022DC                     l3437:
  6385  0022DC  8E11               	bsf	(___flmul@b+2)^0,7,c
  6386  0022DE  EF79  F011         	goto	l3441
  6387  0022E2                     l3439:
  6388  0022E2  0E00               	movlw	0
  6389  0022E4  6E0F               	movwf	___flmul@b^0,c
  6390  0022E6  0E00               	movlw	0
  6391  0022E8  6E10               	movwf	(___flmul@b+1)^0,c
  6392  0022EA  0E00               	movlw	0
  6393  0022EC  6E11               	movwf	(___flmul@b+2)^0,c
  6394  0022EE  0E00               	movlw	0
  6395  0022F0  6E12               	movwf	(___flmul@b+3)^0,c
  6396  0022F2                     l3441:
  6397  0022F2  5016               	movf	(___flmul@a+3)^0,w,c
  6398  0022F4  0B80               	andlw	128
  6399  0022F6  1A1B               	xorwf	___flmul@sign^0,f,c
  6400  0022F8  5016               	movf	(___flmul@a+3)^0,w,c
  6401  0022FA  2416               	addwf	(___flmul@a+3)^0,w,c
  6402  0022FC  6E20               	movwf	___flmul@aexp^0,c
  6403  0022FE  AE15               	btfss	(___flmul@a+2)^0,7,c
  6404  002300  EF84  F011         	goto	u3701
  6405  002304  EF86  F011         	goto	u3700
  6406  002308                     u3701:
  6407  002308  EF87  F011         	goto	l3449
  6408  00230C                     u3700:
  6409  00230C  8020               	bsf	___flmul@aexp^0,0,c
  6410  00230E                     l3449:
  6411  00230E  5020               	movf	___flmul@aexp^0,w,c
  6412  002310  B4D8               	btfsc	status,2,c
  6413  002312  EF8D  F011         	goto	u3711
  6414  002316  EF8F  F011         	goto	u3710
  6415  00231A                     u3711:
  6416  00231A  EFA2  F011         	goto	l3457
  6417  00231E                     u3710:
  6418  00231E  2820               	incf	___flmul@aexp^0,w,c
  6419  002320  A4D8               	btfss	status,2,c
  6420  002322  EF95  F011         	goto	u3721
  6421  002326  EF97  F011         	goto	u3720
  6422  00232A                     u3721:
  6423  00232A  EF9F  F011         	goto	l3455
  6424  00232E                     u3720:
  6425  00232E  0E00               	movlw	0
  6426  002330  6E13               	movwf	___flmul@a^0,c
  6427  002332  0E00               	movlw	0
  6428  002334  6E14               	movwf	(___flmul@a+1)^0,c
  6429  002336  0E00               	movlw	0
  6430  002338  6E15               	movwf	(___flmul@a+2)^0,c
  6431  00233A  0E00               	movlw	0
  6432  00233C  6E16               	movwf	(___flmul@a+3)^0,c
  6433  00233E                     l3455:
  6434  00233E  8E15               	bsf	(___flmul@a+2)^0,7,c
  6435  002340  EFAA  F011         	goto	l989
  6436  002344                     l3457:
  6437  002344  0E00               	movlw	0
  6438  002346  6E13               	movwf	___flmul@a^0,c
  6439  002348  0E00               	movlw	0
  6440  00234A  6E14               	movwf	(___flmul@a+1)^0,c
  6441  00234C  0E00               	movlw	0
  6442  00234E  6E15               	movwf	(___flmul@a+2)^0,c
  6443  002350  0E00               	movlw	0
  6444  002352  6E16               	movwf	(___flmul@a+3)^0,c
  6445  002354                     l989:
  6446  002354  5020               	movf	___flmul@aexp^0,w,c
  6447  002356  B4D8               	btfsc	status,2,c
  6448  002358  EFB0  F011         	goto	u3731
  6449  00235C  EFB2  F011         	goto	u3730
  6450  002360                     u3731:
  6451  002360  EFBA  F011         	goto	l3461
  6452  002364                     u3730:
  6453  002364  5021               	movf	___flmul@bexp^0,w,c
  6454  002366  A4D8               	btfss	status,2,c
  6455  002368  EFB8  F011         	goto	u3741
  6456  00236C  EFBA  F011         	goto	u3740
  6457  002370                     u3741:
  6458  002370  EFC4  F011         	goto	l3465
  6459  002374                     u3740:
  6460  002374                     l3461:
  6461  002374  0E00               	movlw	0
  6462  002376  6E0F               	movwf	?___flmul^0,c
  6463  002378  0E00               	movlw	0
  6464  00237A  6E10               	movwf	(?___flmul+1)^0,c
  6465  00237C  0E00               	movlw	0
  6466  00237E  6E11               	movwf	(?___flmul+2)^0,c
  6467  002380  0E00               	movlw	0
  6468  002382  6E12               	movwf	(?___flmul+3)^0,c
  6469  002384  EF5C  F013         	goto	l993
  6470  002388                     l3465:
  6471  002388  5015               	movf	(___flmul@a+2)^0,w,c
  6472  00238A  020F               	mulwf	___flmul@b^0,c
  6473  00238C  CFF3 F026          	movff	prodl,___flmul@temp
  6474  002390  CFF4 F027          	movff	prodh,___flmul@temp+1
  6475  002394  5026               	movf	___flmul@temp^0,w,c
  6476  002396  6E1C               	movwf	___flmul@grs^0,c
  6477  002398  6A1D               	clrf	(___flmul@grs+1)^0,c
  6478  00239A  6A1E               	clrf	(___flmul@grs+2)^0,c
  6479  00239C  6A1F               	clrf	(___flmul@grs+3)^0,c
  6480  00239E  5027               	movf	(___flmul@temp+1)^0,w,c
  6481  0023A0  6E22               	movwf	___flmul@prod^0,c
  6482  0023A2  6A23               	clrf	(___flmul@prod+1)^0,c
  6483  0023A4  6A24               	clrf	(___flmul@prod+2)^0,c
  6484  0023A6  6A25               	clrf	(___flmul@prod+3)^0,c
  6485  0023A8  5014               	movf	(___flmul@a+1)^0,w,c
  6486  0023AA  0210               	mulwf	(___flmul@b+1)^0,c
  6487  0023AC  CFF3 F026          	movff	prodl,___flmul@temp
  6488  0023B0  CFF4 F027          	movff	prodh,___flmul@temp+1
  6489  0023B4  5026               	movf	___flmul@temp^0,w,c
  6490  0023B6  261C               	addwf	___flmul@grs^0,f,c
  6491  0023B8  0E00               	movlw	0
  6492  0023BA  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6493  0023BC  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6494  0023BE  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6495  0023C0  5027               	movf	(___flmul@temp+1)^0,w,c
  6496  0023C2  2622               	addwf	___flmul@prod^0,f,c
  6497  0023C4  0E00               	movlw	0
  6498  0023C6  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6499  0023C8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6500  0023CA  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6501  0023CC  5013               	movf	___flmul@a^0,w,c
  6502  0023CE  0211               	mulwf	(___flmul@b+2)^0,c
  6503  0023D0  CFF3 F026          	movff	prodl,___flmul@temp
  6504  0023D4  CFF4 F027          	movff	prodh,___flmul@temp+1
  6505  0023D8  5026               	movf	___flmul@temp^0,w,c
  6506  0023DA  261C               	addwf	___flmul@grs^0,f,c
  6507  0023DC  0E00               	movlw	0
  6508  0023DE  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6509  0023E0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6510  0023E2  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6511  0023E4  5027               	movf	(___flmul@temp+1)^0,w,c
  6512  0023E6  2622               	addwf	___flmul@prod^0,f,c
  6513  0023E8  0E00               	movlw	0
  6514  0023EA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6515  0023EC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6516  0023EE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6517  0023F0  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6518  0023F4  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6519  0023F8  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6520  0023FC  6A1C               	clrf	___flmul@grs^0,c
  6521  0023FE  5013               	movf	___flmul@a^0,w,c
  6522  002400  0210               	mulwf	(___flmul@b+1)^0,c
  6523  002402  CFF3 F026          	movff	prodl,___flmul@temp
  6524  002406  CFF4 F027          	movff	prodh,___flmul@temp+1
  6525  00240A  5026               	movf	___flmul@temp^0,w,c
  6526  00240C  261C               	addwf	___flmul@grs^0,f,c
  6527  00240E  5027               	movf	(___flmul@temp+1)^0,w,c
  6528  002410  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6529  002412  0E00               	movlw	0
  6530  002414  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6531  002416  0E00               	movlw	0
  6532  002418  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6533  00241A  5014               	movf	(___flmul@a+1)^0,w,c
  6534  00241C  020F               	mulwf	___flmul@b^0,c
  6535  00241E  CFF3 F026          	movff	prodl,___flmul@temp
  6536  002422  CFF4 F027          	movff	prodh,___flmul@temp+1
  6537  002426  5026               	movf	___flmul@temp^0,w,c
  6538  002428  261C               	addwf	___flmul@grs^0,f,c
  6539  00242A  5027               	movf	(___flmul@temp+1)^0,w,c
  6540  00242C  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6541  00242E  0E00               	movlw	0
  6542  002430  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6543  002432  0E00               	movlw	0
  6544  002434  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6545  002436  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6546  00243A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6547  00243E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6548  002442  6A1C               	clrf	___flmul@grs^0,c
  6549  002444  5013               	movf	___flmul@a^0,w,c
  6550  002446  020F               	mulwf	___flmul@b^0,c
  6551  002448  CFF3 F026          	movff	prodl,___flmul@temp
  6552  00244C  CFF4 F027          	movff	prodh,___flmul@temp+1
  6553  002450  5026               	movf	___flmul@temp^0,w,c
  6554  002452  261C               	addwf	___flmul@grs^0,f,c
  6555  002454  5027               	movf	(___flmul@temp+1)^0,w,c
  6556  002456  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6557  002458  0E00               	movlw	0
  6558  00245A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6559  00245C  0E00               	movlw	0
  6560  00245E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6561  002460  5015               	movf	(___flmul@a+2)^0,w,c
  6562  002462  0210               	mulwf	(___flmul@b+1)^0,c
  6563  002464  CFF3 F026          	movff	prodl,___flmul@temp
  6564  002468  CFF4 F027          	movff	prodh,___flmul@temp+1
  6565  00246C  5026               	movf	___flmul@temp^0,w,c
  6566  00246E  2622               	addwf	___flmul@prod^0,f,c
  6567  002470  5027               	movf	(___flmul@temp+1)^0,w,c
  6568  002472  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6569  002474  0E00               	movlw	0
  6570  002476  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6571  002478  0E00               	movlw	0
  6572  00247A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6573  00247C  5014               	movf	(___flmul@a+1)^0,w,c
  6574  00247E  0211               	mulwf	(___flmul@b+2)^0,c
  6575  002480  CFF3 F026          	movff	prodl,___flmul@temp
  6576  002484  CFF4 F027          	movff	prodh,___flmul@temp+1
  6577  002488  5026               	movf	___flmul@temp^0,w,c
  6578  00248A  2622               	addwf	___flmul@prod^0,f,c
  6579  00248C  5027               	movf	(___flmul@temp+1)^0,w,c
  6580  00248E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6581  002490  0E00               	movlw	0
  6582  002492  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6583  002494  0E00               	movlw	0
  6584  002496  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6585  002498  5015               	movf	(___flmul@a+2)^0,w,c
  6586  00249A  0211               	mulwf	(___flmul@b+2)^0,c
  6587  00249C  CFF3 F026          	movff	prodl,___flmul@temp
  6588  0024A0  CFF4 F027          	movff	prodh,___flmul@temp+1
  6589  0024A4  5026               	movf	___flmul@temp^0,w,c
  6590  0024A6  6E17               	movwf	??___flmul^0,c
  6591  0024A8  5027               	movf	(___flmul@temp+1)^0,w,c
  6592  0024AA  6E18               	movwf	(??___flmul+1)^0,c
  6593  0024AC  6A19               	clrf	(??___flmul+2)^0,c
  6594  0024AE  6A1A               	clrf	(??___flmul+3)^0,c
  6595  0024B0  C019  F01A         	movff	??___flmul+2,??___flmul+3
  6596  0024B4  C018  F019         	movff	??___flmul+1,??___flmul+2
  6597  0024B8  C017  F018         	movff	??___flmul,??___flmul+1
  6598  0024BC  6A17               	clrf	??___flmul^0,c
  6599  0024BE  5017               	movf	??___flmul^0,w,c
  6600  0024C0  2622               	addwf	___flmul@prod^0,f,c
  6601  0024C2  5018               	movf	(??___flmul+1)^0,w,c
  6602  0024C4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6603  0024C6  5019               	movf	(??___flmul+2)^0,w,c
  6604  0024C8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6605  0024CA  501A               	movf	(??___flmul+3)^0,w,c
  6606  0024CC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6607  0024CE  C01C  F017         	movff	___flmul@grs,??___flmul
  6608  0024D2  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  6609  0024D6  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  6610  0024DA  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  6611  0024DE  0E19               	movlw	25
  6612  0024E0  EF77  F012         	goto	u3750
  6613  0024E4                     u3755:
  6614  0024E4  90D8               	bcf	status,0,c
  6615  0024E6  321A               	rrcf	(??___flmul+3)^0,f,c
  6616  0024E8  3219               	rrcf	(??___flmul+2)^0,f,c
  6617  0024EA  3218               	rrcf	(??___flmul+1)^0,f,c
  6618  0024EC  3217               	rrcf	??___flmul^0,f,c
  6619  0024EE                     u3750:
  6620  0024EE  2EE8               	decfsz	wreg,f,c
  6621  0024F0  EF72  F012         	goto	u3755
  6622  0024F4  5017               	movf	??___flmul^0,w,c
  6623  0024F6  2622               	addwf	___flmul@prod^0,f,c
  6624  0024F8  5018               	movf	(??___flmul+1)^0,w,c
  6625  0024FA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6626  0024FC  5019               	movf	(??___flmul+2)^0,w,c
  6627  0024FE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6628  002500  501A               	movf	(??___flmul+3)^0,w,c
  6629  002502  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6630  002504  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6631  002508  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6632  00250C  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6633  002510  6A1C               	clrf	___flmul@grs^0,c
  6634  002512  5020               	movf	___flmul@aexp^0,w,c
  6635  002514  C021  F017         	movff	___flmul@bexp,??___flmul
  6636  002518  6A18               	clrf	(??___flmul+1)^0,c
  6637  00251A  2617               	addwf	??___flmul^0,f,c
  6638  00251C  0E00               	movlw	0
  6639  00251E  2218               	addwfc	(??___flmul+1)^0,f,c
  6640  002520  0E82               	movlw	130
  6641  002522  2417               	addwf	??___flmul^0,w,c
  6642  002524  6E26               	movwf	___flmul@temp^0,c
  6643  002526  0EFF               	movlw	255
  6644  002528  2018               	addwfc	(??___flmul+1)^0,w,c
  6645  00252A  6E27               	movwf	(___flmul@temp+1)^0,c
  6646  00252C  EFAD  F012         	goto	l3513
  6647  002530                     l3507:
  6648  002530  90D8               	bcf	status,0,c
  6649  002532  3622               	rlcf	___flmul@prod^0,f,c
  6650  002534  3623               	rlcf	(___flmul@prod+1)^0,f,c
  6651  002536  3624               	rlcf	(___flmul@prod+2)^0,f,c
  6652  002538  3625               	rlcf	(___flmul@prod+3)^0,f,c
  6653  00253A  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  6654  00253C  EFA2  F012         	goto	u3761
  6655  002540  EFA4  F012         	goto	u3760
  6656  002544                     u3761:
  6657  002544  EFA5  F012         	goto	l996
  6658  002548                     u3760:
  6659  002548  8022               	bsf	___flmul@prod^0,0,c
  6660  00254A                     l996:
  6661  00254A  90D8               	bcf	status,0,c
  6662  00254C  361C               	rlcf	___flmul@grs^0,f,c
  6663  00254E  361D               	rlcf	(___flmul@grs+1)^0,f,c
  6664  002550  361E               	rlcf	(___flmul@grs+2)^0,f,c
  6665  002552  361F               	rlcf	(___flmul@grs+3)^0,f,c
  6666  002554  0626               	decf	___flmul@temp^0,f,c
  6667  002556  A0D8               	btfss	status,0,c
  6668  002558  0627               	decf	(___flmul@temp+1)^0,f,c
  6669  00255A                     l3513:
  6670  00255A  AE24               	btfss	(___flmul@prod+2)^0,7,c
  6671  00255C  EFB2  F012         	goto	u3771
  6672  002560  EFB4  F012         	goto	u3770
  6673  002564                     u3771:
  6674  002564  EF98  F012         	goto	l3507
  6675  002568                     u3770:
  6676  002568  0E00               	movlw	0
  6677  00256A  6E20               	movwf	___flmul@aexp^0,c
  6678  00256C  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  6679  00256E  EFBB  F012         	goto	u3781
  6680  002572  EFBD  F012         	goto	u3780
  6681  002576                     u3781:
  6682  002576  EFE1  F012         	goto	l998
  6683  00257A                     u3780:
  6684  00257A  0EFF               	movlw	255
  6685  00257C  141C               	andwf	___flmul@grs^0,w,c
  6686  00257E  6E17               	movwf	??___flmul^0,c
  6687  002580  0EFF               	movlw	255
  6688  002582  141D               	andwf	(___flmul@grs+1)^0,w,c
  6689  002584  6E18               	movwf	(??___flmul+1)^0,c
  6690  002586  0EFF               	movlw	255
  6691  002588  141E               	andwf	(___flmul@grs+2)^0,w,c
  6692  00258A  6E19               	movwf	(??___flmul+2)^0,c
  6693  00258C  0E7F               	movlw	127
  6694  00258E  141F               	andwf	(___flmul@grs+3)^0,w,c
  6695  002590  6E1A               	movwf	(??___flmul+3)^0,c
  6696  002592  5017               	movf	??___flmul^0,w,c
  6697  002594  1018               	iorwf	(??___flmul+1)^0,w,c
  6698  002596  1019               	iorwf	(??___flmul+2)^0,w,c
  6699  002598  101A               	iorwf	(??___flmul+3)^0,w,c
  6700  00259A  B4D8               	btfsc	status,2,c
  6701  00259C  EFD2  F012         	goto	u3791
  6702  0025A0  EFD4  F012         	goto	u3790
  6703  0025A4                     u3791:
  6704  0025A4  EFD8  F012         	goto	l999
  6705  0025A8                     u3790:
  6706  0025A8                     l3521:
  6707  0025A8  0E01               	movlw	1
  6708  0025AA  6E20               	movwf	___flmul@aexp^0,c
  6709  0025AC  EFE1  F012         	goto	l998
  6710  0025B0                     l999:
  6711  0025B0  A022               	btfss	___flmul@prod^0,0,c
  6712  0025B2  EFDD  F012         	goto	u3801
  6713  0025B6  EFDF  F012         	goto	u3800
  6714  0025BA                     u3801:
  6715  0025BA  EFE1  F012         	goto	l998
  6716  0025BE                     u3800:
  6717  0025BE  EFD4  F012         	goto	l3521
  6718  0025C2                     l998:
  6719  0025C2  5020               	movf	___flmul@aexp^0,w,c
  6720  0025C4  B4D8               	btfsc	status,2,c
  6721  0025C6  EFE7  F012         	goto	u3811
  6722  0025CA  EFE9  F012         	goto	u3810
  6723  0025CE                     u3811:
  6724  0025CE  EF0D  F013         	goto	l3533
  6725  0025D2                     u3810:
  6726  0025D2  0E01               	movlw	1
  6727  0025D4  2622               	addwf	___flmul@prod^0,f,c
  6728  0025D6  0E00               	movlw	0
  6729  0025D8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6730  0025DA  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6731  0025DC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6732  0025DE  A025               	btfss	(___flmul@prod+3)^0,0,c
  6733  0025E0  EFF4  F012         	goto	u3821
  6734  0025E4  EFF6  F012         	goto	u3820
  6735  0025E8                     u3821:
  6736  0025E8  EF0D  F013         	goto	l3533
  6737  0025EC                     u3820:
  6738  0025EC  C022  F017         	movff	___flmul@prod,??___flmul
  6739  0025F0  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  6740  0025F4  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  6741  0025F8  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  6742  0025FC  341A               	rlcf	(??___flmul+3)^0,w,c
  6743  0025FE  321A               	rrcf	(??___flmul+3)^0,f,c
  6744  002600  3219               	rrcf	(??___flmul+2)^0,f,c
  6745  002602  3218               	rrcf	(??___flmul+1)^0,f,c
  6746  002604  3217               	rrcf	??___flmul^0,f,c
  6747  002606  C017  F022         	movff	??___flmul,___flmul@prod
  6748  00260A  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  6749  00260E  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  6750  002612  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  6751  002616  4A26               	infsnz	___flmul@temp^0,f,c
  6752  002618  2A27               	incf	(___flmul@temp+1)^0,f,c
  6753  00261A                     l3533:
  6754  00261A  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6755  00261C  EF18  F013         	goto	u3831
  6756  002620  5027               	movf	(___flmul@temp+1)^0,w,c
  6757  002622  E108               	bnz	u3830
  6758  002624  2826               	incf	___flmul@temp^0,w,c
  6759  002626  A0D8               	btfss	status,0,c
  6760  002628  EF18  F013         	goto	u3831
  6761  00262C  EF1A  F013         	goto	u3830
  6762  002630                     u3831:
  6763  002630  EF24  F013         	goto	l3537
  6764  002634                     u3830:
  6765  002634  0E00               	movlw	0
  6766  002636  6E22               	movwf	___flmul@prod^0,c
  6767  002638  0E00               	movlw	0
  6768  00263A  6E23               	movwf	(___flmul@prod+1)^0,c
  6769  00263C  0E80               	movlw	128
  6770  00263E  6E24               	movwf	(___flmul@prod+2)^0,c
  6771  002640  0E7F               	movlw	127
  6772  002642  6E25               	movwf	(___flmul@prod+3)^0,c
  6773  002644  EF52  F013         	goto	l3549
  6774  002648                     l3537:
  6775  002648  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6776  00264A  EF31  F013         	goto	u3840
  6777  00264E  5027               	movf	(___flmul@temp+1)^0,w,c
  6778  002650  E106               	bnz	u3841
  6779  002652  0426               	decf	___flmul@temp^0,w,c
  6780  002654  B0D8               	btfsc	status,0,c
  6781  002656  EF2F  F013         	goto	u3841
  6782  00265A  EF31  F013         	goto	u3840
  6783  00265E                     u3841:
  6784  00265E  EF3D  F013         	goto	l1006
  6785  002662                     u3840:
  6786  002662  0E00               	movlw	0
  6787  002664  6E22               	movwf	___flmul@prod^0,c
  6788  002666  0E00               	movlw	0
  6789  002668  6E23               	movwf	(___flmul@prod+1)^0,c
  6790  00266A  0E00               	movlw	0
  6791  00266C  6E24               	movwf	(___flmul@prod+2)^0,c
  6792  00266E  0E00               	movlw	0
  6793  002670  6E25               	movwf	(___flmul@prod+3)^0,c
  6794  002672  0E00               	movlw	0
  6795  002674  6E1B               	movwf	___flmul@sign^0,c
  6796  002676  EF52  F013         	goto	l3549
  6797  00267A                     l1006:
  6798  00267A  C026  F021         	movff	___flmul@temp,___flmul@bexp
  6799  00267E  0EFF               	movlw	255
  6800  002680  1622               	andwf	___flmul@prod^0,f,c
  6801  002682  0EFF               	movlw	255
  6802  002684  1623               	andwf	(___flmul@prod+1)^0,f,c
  6803  002686  0E7F               	movlw	127
  6804  002688  1624               	andwf	(___flmul@prod+2)^0,f,c
  6805  00268A  0E00               	movlw	0
  6806  00268C  1625               	andwf	(___flmul@prod+3)^0,f,c
  6807  00268E  A021               	btfss	___flmul@bexp^0,0,c
  6808  002690  EF4C  F013         	goto	u3851
  6809  002694  EF4E  F013         	goto	u3850
  6810  002698                     u3851:
  6811  002698  EF4F  F013         	goto	l3547
  6812  00269C                     u3850:
  6813  00269C  8E24               	bsf	(___flmul@prod+2)^0,7,c
  6814  00269E                     l3547:
  6815  00269E  90D8               	bcf	status,0,c
  6816  0026A0  3021               	rrcf	___flmul@bexp^0,w,c
  6817  0026A2  6E25               	movwf	(___flmul@prod+3)^0,c
  6818  0026A4                     l3549:
  6819  0026A4  501B               	movf	___flmul@sign^0,w,c
  6820  0026A6  1225               	iorwf	(___flmul@prod+3)^0,f,c
  6821  0026A8  C022  F00F         	movff	___flmul@prod,?___flmul
  6822  0026AC  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  6823  0026B0  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  6824  0026B4  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  6825  0026B8                     l993:
  6826  0026B8  0012               	return		;funcret
  6827  0026BA                     __end_of___flmul:
  6828                           	opt callstack 0
  6829                           
  6830 ;; *************** function ___flge *****************
  6831 ;; Defined at:
  6832 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  6833 ;; Parameters:    Size  Location     Type
  6834 ;;  ff1             4   39[COMRAM] unsigned char 
  6835 ;;  ff2             4   43[COMRAM] unsigned char 
  6836 ;; Auto vars:     Size  Location     Type
  6837 ;;		None
  6838 ;; Return value:  Size  Location     Type
  6839 ;;		None               void
  6840 ;; Registers used:
  6841 ;;		wreg, status,2, status,0
  6842 ;; Tracked objects:
  6843 ;;		On entry : 0/0
  6844 ;;		On exit  : 0/0
  6845 ;;		Unchanged: 0/0
  6846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6847 ;;      Params:         8       0       0       0       0       0       0       0       0
  6848 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6849 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6850 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6851 ;;Total ram usage:       12 bytes
  6852 ;; Hardware stack levels used:    1
  6853 ;; This function calls:
  6854 ;;		Nothing
  6855 ;; This function is called by:
  6856 ;;		_efgtoa
  6857 ;; This function uses a non-reentrant model
  6858 ;;
  6859                           
  6860                           	psect	text21
  6861  0030B0                     __ptext21:
  6862                           	opt callstack 0
  6863  0030B0                     ___flge:
  6864                           	opt callstack 26
  6865  0030B0  0E00               	movlw	0
  6866  0030B2  1428               	andwf	___flge@ff1^0,w,c
  6867  0030B4  6E30               	movwf	??___flge^0,c
  6868  0030B6  0E00               	movlw	0
  6869  0030B8  1429               	andwf	(___flge@ff1+1)^0,w,c
  6870  0030BA  6E31               	movwf	(??___flge+1)^0,c
  6871  0030BC  0E80               	movlw	128
  6872  0030BE  142A               	andwf	(___flge@ff1+2)^0,w,c
  6873  0030C0  6E32               	movwf	(??___flge+2)^0,c
  6874  0030C2  0E7F               	movlw	127
  6875  0030C4  142B               	andwf	(___flge@ff1+3)^0,w,c
  6876  0030C6  6E33               	movwf	(??___flge+3)^0,c
  6877  0030C8  5030               	movf	??___flge^0,w,c
  6878  0030CA  1031               	iorwf	(??___flge+1)^0,w,c
  6879  0030CC  1032               	iorwf	(??___flge+2)^0,w,c
  6880  0030CE  1033               	iorwf	(??___flge+3)^0,w,c
  6881  0030D0  A4D8               	btfss	status,2,c
  6882  0030D2  EF6D  F018         	goto	u4011
  6883  0030D6  EF6F  F018         	goto	u4010
  6884  0030DA                     u4011:
  6885  0030DA  EF77  F018         	goto	l3661
  6886  0030DE                     u4010:
  6887  0030DE  0E00               	movlw	0
  6888  0030E0  6E28               	movwf	___flge@ff1^0,c
  6889  0030E2  0E00               	movlw	0
  6890  0030E4  6E29               	movwf	(___flge@ff1+1)^0,c
  6891  0030E6  0E00               	movlw	0
  6892  0030E8  6E2A               	movwf	(___flge@ff1+2)^0,c
  6893  0030EA  0E00               	movlw	0
  6894  0030EC  6E2B               	movwf	(___flge@ff1+3)^0,c
  6895  0030EE                     l3661:
  6896  0030EE  0E00               	movlw	0
  6897  0030F0  142C               	andwf	___flge@ff2^0,w,c
  6898  0030F2  6E30               	movwf	??___flge^0,c
  6899  0030F4  0E00               	movlw	0
  6900  0030F6  142D               	andwf	(___flge@ff2+1)^0,w,c
  6901  0030F8  6E31               	movwf	(??___flge+1)^0,c
  6902  0030FA  0E80               	movlw	128
  6903  0030FC  142E               	andwf	(___flge@ff2+2)^0,w,c
  6904  0030FE  6E32               	movwf	(??___flge+2)^0,c
  6905  003100  0E7F               	movlw	127
  6906  003102  142F               	andwf	(___flge@ff2+3)^0,w,c
  6907  003104  6E33               	movwf	(??___flge+3)^0,c
  6908  003106  5030               	movf	??___flge^0,w,c
  6909  003108  1031               	iorwf	(??___flge+1)^0,w,c
  6910  00310A  1032               	iorwf	(??___flge+2)^0,w,c
  6911  00310C  1033               	iorwf	(??___flge+3)^0,w,c
  6912  00310E  A4D8               	btfss	status,2,c
  6913  003110  EF8C  F018         	goto	u4021
  6914  003114  EF8E  F018         	goto	u4020
  6915  003118                     u4021:
  6916  003118  EF96  F018         	goto	l3665
  6917  00311C                     u4020:
  6918  00311C  0E00               	movlw	0
  6919  00311E  6E2C               	movwf	___flge@ff2^0,c
  6920  003120  0E00               	movlw	0
  6921  003122  6E2D               	movwf	(___flge@ff2+1)^0,c
  6922  003124  0E00               	movlw	0
  6923  003126  6E2E               	movwf	(___flge@ff2+2)^0,c
  6924  003128  0E00               	movlw	0
  6925  00312A  6E2F               	movwf	(___flge@ff2+3)^0,c
  6926  00312C                     l3665:
  6927  00312C  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  6928  00312E  EF9B  F018         	goto	u4031
  6929  003132  EF9D  F018         	goto	u4030
  6930  003136                     u4031:
  6931  003136  EFA6  F018         	goto	l3669
  6932  00313A                     u4030:
  6933  00313A  6C28               	negf	___flge@ff1^0,c
  6934  00313C  1E29               	comf	(___flge@ff1+1)^0,f,c
  6935  00313E  B0D8               	btfsc	status,0,c
  6936  003140  2A29               	incf	(___flge@ff1+1)^0,f,c
  6937  003142  1E2A               	comf	(___flge@ff1+2)^0,f,c
  6938  003144  B0D8               	btfsc	status,0,c
  6939  003146  2A2A               	incf	(___flge@ff1+2)^0,f,c
  6940  003148  0E80               	movlw	128
  6941  00314A  562B               	subfwb	(___flge@ff1+3)^0,f,c
  6942  00314C                     l3669:
  6943  00314C  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  6944  00314E  EFAB  F018         	goto	u4041
  6945  003152  EFAD  F018         	goto	u4040
  6946  003156                     u4041:
  6947  003156  EFB6  F018         	goto	l640
  6948  00315A                     u4040:
  6949  00315A  6C2C               	negf	___flge@ff2^0,c
  6950  00315C  1E2D               	comf	(___flge@ff2+1)^0,f,c
  6951  00315E  B0D8               	btfsc	status,0,c
  6952  003160  2A2D               	incf	(___flge@ff2+1)^0,f,c
  6953  003162  1E2E               	comf	(___flge@ff2+2)^0,f,c
  6954  003164  B0D8               	btfsc	status,0,c
  6955  003166  2A2E               	incf	(___flge@ff2+2)^0,f,c
  6956  003168  0E80               	movlw	128
  6957  00316A  562F               	subfwb	(___flge@ff2+3)^0,f,c
  6958  00316C                     l640:
  6959  00316C  0E00               	movlw	0
  6960  00316E  1A28               	xorwf	___flge@ff1^0,f,c
  6961  003170  0E00               	movlw	0
  6962  003172  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  6963  003174  0E00               	movlw	0
  6964  003176  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  6965  003178  0E80               	movlw	128
  6966  00317A  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  6967  00317C  0E00               	movlw	0
  6968  00317E  1A2C               	xorwf	___flge@ff2^0,f,c
  6969  003180  0E00               	movlw	0
  6970  003182  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  6971  003184  0E00               	movlw	0
  6972  003186  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  6973  003188  0E80               	movlw	128
  6974  00318A  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  6975  00318C  502C               	movf	___flge@ff2^0,w,c
  6976  00318E  5C28               	subwf	___flge@ff1^0,w,c
  6977  003190  502D               	movf	(___flge@ff2+1)^0,w,c
  6978  003192  5829               	subwfb	(___flge@ff1+1)^0,w,c
  6979  003194  502E               	movf	(___flge@ff2+2)^0,w,c
  6980  003196  582A               	subwfb	(___flge@ff1+2)^0,w,c
  6981  003198  502F               	movf	(___flge@ff2+3)^0,w,c
  6982  00319A  582B               	subwfb	(___flge@ff1+3)^0,w,c
  6983  00319C  B0D8               	btfsc	status,0,c
  6984  00319E  EFD3  F018         	goto	u4051
  6985  0031A2  EFD5  F018         	goto	u4050
  6986  0031A6                     u4051:
  6987  0031A6  EFD8  F018         	goto	l3675
  6988  0031AA                     u4050:
  6989  0031AA  90D8               	bcf	status,0,c
  6990  0031AC  EFD9  F018         	goto	l645
  6991  0031B0                     l3675:
  6992  0031B0  80D8               	bsf	status,0,c
  6993  0031B2                     l645:
  6994  0031B2  0012               	return		;funcret
  6995  0031B4                     __end_of___flge:
  6996                           	opt callstack 0
  6997                           
  6998 ;; *************** function ___fleq *****************
  6999 ;; Defined at:
  7000 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  7001 ;; Parameters:    Size  Location     Type
  7002 ;;  ff1             4    0[COMRAM] unsigned char 
  7003 ;;  ff2             4    4[COMRAM] unsigned char 
  7004 ;; Auto vars:     Size  Location     Type
  7005 ;;		None
  7006 ;; Return value:  Size  Location     Type
  7007 ;;		None               void
  7008 ;; Registers used:
  7009 ;;		wreg, status,2, status,0
  7010 ;; Tracked objects:
  7011 ;;		On entry : 0/0
  7012 ;;		On exit  : 0/0
  7013 ;;		Unchanged: 0/0
  7014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7015 ;;      Params:         8       0       0       0       0       0       0       0       0
  7016 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7017 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7018 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7019 ;;Total ram usage:       12 bytes
  7020 ;; Hardware stack levels used:    1
  7021 ;; This function calls:
  7022 ;;		Nothing
  7023 ;; This function is called by:
  7024 ;;		_efgtoa
  7025 ;; This function uses a non-reentrant model
  7026 ;;
  7027                           
  7028                           	psect	text22
  7029  003776                     __ptext22:
  7030                           	opt callstack 0
  7031  003776                     ___fleq:
  7032                           	opt callstack 26
  7033  003776  0E00               	movlw	0
  7034  003778  1401               	andwf	___fleq@ff1^0,w,c
  7035  00377A  6E09               	movwf	??___fleq^0,c
  7036  00377C  0E00               	movlw	0
  7037  00377E  1402               	andwf	(___fleq@ff1+1)^0,w,c
  7038  003780  6E0A               	movwf	(??___fleq+1)^0,c
  7039  003782  0E80               	movlw	128
  7040  003784  1403               	andwf	(___fleq@ff1+2)^0,w,c
  7041  003786  6E0B               	movwf	(??___fleq+2)^0,c
  7042  003788  0E7F               	movlw	127
  7043  00378A  1404               	andwf	(___fleq@ff1+3)^0,w,c
  7044  00378C  6E0C               	movwf	(??___fleq+3)^0,c
  7045  00378E  5009               	movf	??___fleq^0,w,c
  7046  003790  100A               	iorwf	(??___fleq+1)^0,w,c
  7047  003792  100B               	iorwf	(??___fleq+2)^0,w,c
  7048  003794  100C               	iorwf	(??___fleq+3)^0,w,c
  7049  003796  A4D8               	btfss	status,2,c
  7050  003798  EFD0  F01B         	goto	u3981
  7051  00379C  EFD2  F01B         	goto	u3980
  7052  0037A0                     u3981:
  7053  0037A0  EFDA  F01B         	goto	l3645
  7054  0037A4                     u3980:
  7055  0037A4  0E00               	movlw	0
  7056  0037A6  6E01               	movwf	___fleq@ff1^0,c
  7057  0037A8  0E00               	movlw	0
  7058  0037AA  6E02               	movwf	(___fleq@ff1+1)^0,c
  7059  0037AC  0E00               	movlw	0
  7060  0037AE  6E03               	movwf	(___fleq@ff1+2)^0,c
  7061  0037B0  0E00               	movlw	0
  7062  0037B2  6E04               	movwf	(___fleq@ff1+3)^0,c
  7063  0037B4                     l3645:
  7064  0037B4  0E00               	movlw	0
  7065  0037B6  1405               	andwf	___fleq@ff2^0,w,c
  7066  0037B8  6E09               	movwf	??___fleq^0,c
  7067  0037BA  0E00               	movlw	0
  7068  0037BC  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7069  0037BE  6E0A               	movwf	(??___fleq+1)^0,c
  7070  0037C0  0E80               	movlw	128
  7071  0037C2  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7072  0037C4  6E0B               	movwf	(??___fleq+2)^0,c
  7073  0037C6  0E7F               	movlw	127
  7074  0037C8  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7075  0037CA  6E0C               	movwf	(??___fleq+3)^0,c
  7076  0037CC  5009               	movf	??___fleq^0,w,c
  7077  0037CE  100A               	iorwf	(??___fleq+1)^0,w,c
  7078  0037D0  100B               	iorwf	(??___fleq+2)^0,w,c
  7079  0037D2  100C               	iorwf	(??___fleq+3)^0,w,c
  7080  0037D4  A4D8               	btfss	status,2,c
  7081  0037D6  EFEF  F01B         	goto	u3991
  7082  0037DA  EFF1  F01B         	goto	u3990
  7083  0037DE                     u3991:
  7084  0037DE  EFF9  F01B         	goto	l3649
  7085  0037E2                     u3990:
  7086  0037E2  0E00               	movlw	0
  7087  0037E4  6E05               	movwf	___fleq@ff2^0,c
  7088  0037E6  0E00               	movlw	0
  7089  0037E8  6E06               	movwf	(___fleq@ff2+1)^0,c
  7090  0037EA  0E00               	movlw	0
  7091  0037EC  6E07               	movwf	(___fleq@ff2+2)^0,c
  7092  0037EE  0E00               	movlw	0
  7093  0037F0  6E08               	movwf	(___fleq@ff2+3)^0,c
  7094  0037F2                     l3649:
  7095  0037F2  5005               	movf	___fleq@ff2^0,w,c
  7096  0037F4  1801               	xorwf	___fleq@ff1^0,w,c
  7097  0037F6  E10F               	bnz	u4000
  7098  0037F8  5006               	movf	(___fleq@ff2+1)^0,w,c
  7099  0037FA  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7100  0037FC  E10C               	bnz	u4000
  7101  0037FE  5007               	movf	(___fleq@ff2+2)^0,w,c
  7102  003800  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7103  003802  E109               	bnz	u4000
  7104  003804  5008               	movf	(___fleq@ff2+3)^0,w,c
  7105  003806  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7106  003808  B4D8               	btfsc	status,2,c
  7107  00380A  EF09  F01C         	goto	u4001
  7108  00380E  EF0B  F01C         	goto	u4000
  7109  003812                     u4001:
  7110  003812  EF0E  F01C         	goto	l3653
  7111  003816                     u4000:
  7112  003816  90D8               	bcf	status,0,c
  7113  003818  EF0F  F01C         	goto	l634
  7114  00381C                     l3653:
  7115  00381C  80D8               	bsf	status,0,c
  7116  00381E                     l634:
  7117  00381E  0012               	return		;funcret
  7118  003820                     __end_of___fleq:
  7119                           	opt callstack 0
  7120                           
  7121 ;; *************** function ___fldiv *****************
  7122 ;; Defined at:
  7123 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  7124 ;; Parameters:    Size  Location     Type
  7125 ;;  b               4   39[COMRAM] unsigned char 
  7126 ;;  a               4   43[COMRAM] unsigned char 
  7127 ;; Auto vars:     Size  Location     Type
  7128 ;;  grs             4   58[COMRAM] unsigned long 
  7129 ;;  rem             4   51[COMRAM] unsigned long 
  7130 ;;  new_exp         2   56[COMRAM] short 
  7131 ;;  aexp            1   63[COMRAM] unsigned char 
  7132 ;;  bexp            1   62[COMRAM] unsigned char 
  7133 ;;  sign            1   55[COMRAM] unsigned char 
  7134 ;; Return value:  Size  Location     Type
  7135 ;;                  4   39[COMRAM] unsigned char 
  7136 ;; Registers used:
  7137 ;;		wreg, status,2, status,0
  7138 ;; Tracked objects:
  7139 ;;		On entry : 0/0
  7140 ;;		On exit  : 0/0
  7141 ;;		Unchanged: 0/0
  7142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7143 ;;      Params:         8       0       0       0       0       0       0       0       0
  7144 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7145 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7146 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7147 ;;Total ram usage:       25 bytes
  7148 ;; Hardware stack levels used:    1
  7149 ;; This function calls:
  7150 ;;		Nothing
  7151 ;; This function is called by:
  7152 ;;		_main
  7153 ;;		_efgtoa
  7154 ;; This function uses a non-reentrant model
  7155 ;;
  7156                           
  7157                           	psect	text23
  7158  0026BA                     __ptext23:
  7159                           	opt callstack 0
  7160  0026BA                     ___fldiv:
  7161                           	opt callstack 26
  7162  0026BA  502B               	movf	(___fldiv@b+3)^0,w,c
  7163  0026BC  0B80               	andlw	128
  7164  0026BE  6E38               	movwf	___fldiv@sign^0,c
  7165  0026C0  502B               	movf	(___fldiv@b+3)^0,w,c
  7166  0026C2  242B               	addwf	(___fldiv@b+3)^0,w,c
  7167  0026C4  6E3F               	movwf	___fldiv@bexp^0,c
  7168  0026C6  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  7169  0026C8  EF68  F013         	goto	u3441
  7170  0026CC  EF6A  F013         	goto	u3440
  7171  0026D0                     u3441:
  7172  0026D0  EF6B  F013         	goto	l3293
  7173  0026D4                     u3440:
  7174  0026D4  803F               	bsf	___fldiv@bexp^0,0,c
  7175  0026D6                     l3293:
  7176  0026D6  503F               	movf	___fldiv@bexp^0,w,c
  7177  0026D8  B4D8               	btfsc	status,2,c
  7178  0026DA  EF71  F013         	goto	u3451
  7179  0026DE  EF73  F013         	goto	u3450
  7180  0026E2                     u3451:
  7181  0026E2  EF88  F013         	goto	l3303
  7182  0026E6                     u3450:
  7183  0026E6  283F               	incf	___fldiv@bexp^0,w,c
  7184  0026E8  A4D8               	btfss	status,2,c
  7185  0026EA  EF79  F013         	goto	u3461
  7186  0026EE  EF7B  F013         	goto	u3460
  7187  0026F2                     u3461:
  7188  0026F2  EF83  F013         	goto	l3299
  7189  0026F6                     u3460:
  7190  0026F6  0E00               	movlw	0
  7191  0026F8  6E28               	movwf	___fldiv@b^0,c
  7192  0026FA  0E00               	movlw	0
  7193  0026FC  6E29               	movwf	(___fldiv@b+1)^0,c
  7194  0026FE  0E00               	movlw	0
  7195  002700  6E2A               	movwf	(___fldiv@b+2)^0,c
  7196  002702  0E00               	movlw	0
  7197  002704  6E2B               	movwf	(___fldiv@b+3)^0,c
  7198  002706                     l3299:
  7199  002706  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  7200  002708  0E00               	movlw	0
  7201  00270A  6E2B               	movwf	(___fldiv@b+3)^0,c
  7202  00270C  EF90  F013         	goto	l3305
  7203  002710                     l3303:
  7204  002710  0E00               	movlw	0
  7205  002712  6E28               	movwf	___fldiv@b^0,c
  7206  002714  0E00               	movlw	0
  7207  002716  6E29               	movwf	(___fldiv@b+1)^0,c
  7208  002718  0E00               	movlw	0
  7209  00271A  6E2A               	movwf	(___fldiv@b+2)^0,c
  7210  00271C  0E00               	movlw	0
  7211  00271E  6E2B               	movwf	(___fldiv@b+3)^0,c
  7212  002720                     l3305:
  7213  002720  502F               	movf	(___fldiv@a+3)^0,w,c
  7214  002722  0B80               	andlw	128
  7215  002724  1A38               	xorwf	___fldiv@sign^0,f,c
  7216  002726  502F               	movf	(___fldiv@a+3)^0,w,c
  7217  002728  242F               	addwf	(___fldiv@a+3)^0,w,c
  7218  00272A  6E40               	movwf	___fldiv@aexp^0,c
  7219  00272C  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  7220  00272E  EF9B  F013         	goto	u3471
  7221  002732  EF9D  F013         	goto	u3470
  7222  002736                     u3471:
  7223  002736  EF9E  F013         	goto	l3313
  7224  00273A                     u3470:
  7225  00273A  8040               	bsf	___fldiv@aexp^0,0,c
  7226  00273C                     l3313:
  7227  00273C  5040               	movf	___fldiv@aexp^0,w,c
  7228  00273E  B4D8               	btfsc	status,2,c
  7229  002740  EFA4  F013         	goto	u3481
  7230  002744  EFA6  F013         	goto	u3480
  7231  002748                     u3481:
  7232  002748  EFBB  F013         	goto	l3323
  7233  00274C                     u3480:
  7234  00274C  2840               	incf	___fldiv@aexp^0,w,c
  7235  00274E  A4D8               	btfss	status,2,c
  7236  002750  EFAC  F013         	goto	u3491
  7237  002754  EFAE  F013         	goto	u3490
  7238  002758                     u3491:
  7239  002758  EFB6  F013         	goto	l3319
  7240  00275C                     u3490:
  7241  00275C  0E00               	movlw	0
  7242  00275E  6E2C               	movwf	___fldiv@a^0,c
  7243  002760  0E00               	movlw	0
  7244  002762  6E2D               	movwf	(___fldiv@a+1)^0,c
  7245  002764  0E00               	movlw	0
  7246  002766  6E2E               	movwf	(___fldiv@a+2)^0,c
  7247  002768  0E00               	movlw	0
  7248  00276A  6E2F               	movwf	(___fldiv@a+3)^0,c
  7249  00276C                     l3319:
  7250  00276C  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  7251  00276E  0E00               	movlw	0
  7252  002770  6E2F               	movwf	(___fldiv@a+3)^0,c
  7253  002772  EFC3  F013         	goto	l3325
  7254  002776                     l3323:
  7255  002776  0E00               	movlw	0
  7256  002778  6E2C               	movwf	___fldiv@a^0,c
  7257  00277A  0E00               	movlw	0
  7258  00277C  6E2D               	movwf	(___fldiv@a+1)^0,c
  7259  00277E  0E00               	movlw	0
  7260  002780  6E2E               	movwf	(___fldiv@a+2)^0,c
  7261  002782  0E00               	movlw	0
  7262  002784  6E2F               	movwf	(___fldiv@a+3)^0,c
  7263  002786                     l3325:
  7264  002786  502C               	movf	___fldiv@a^0,w,c
  7265  002788  102D               	iorwf	(___fldiv@a+1)^0,w,c
  7266  00278A  102E               	iorwf	(___fldiv@a+2)^0,w,c
  7267  00278C  102F               	iorwf	(___fldiv@a+3)^0,w,c
  7268  00278E  A4D8               	btfss	status,2,c
  7269  002790  EFCC  F013         	goto	u3501
  7270  002794  EFCE  F013         	goto	u3500
  7271  002798                     u3501:
  7272  002798  EFE6  F013         	goto	l3337
  7273  00279C                     u3500:
  7274  00279C  0E00               	movlw	0
  7275  00279E  6E28               	movwf	___fldiv@b^0,c
  7276  0027A0  0E00               	movlw	0
  7277  0027A2  6E29               	movwf	(___fldiv@b+1)^0,c
  7278  0027A4  0E00               	movlw	0
  7279  0027A6  6E2A               	movwf	(___fldiv@b+2)^0,c
  7280  0027A8  0E00               	movlw	0
  7281  0027AA  6E2B               	movwf	(___fldiv@b+3)^0,c
  7282  0027AC  0E80               	movlw	128
  7283  0027AE  122A               	iorwf	(___fldiv@b+2)^0,f,c
  7284  0027B0  0E7F               	movlw	127
  7285  0027B2  122B               	iorwf	(___fldiv@b+3)^0,f,c
  7286  0027B4                     l3331:
  7287  0027B4  5038               	movf	___fldiv@sign^0,w,c
  7288  0027B6  122B               	iorwf	(___fldiv@b+3)^0,f,c
  7289  0027B8  C028  F028         	movff	___fldiv@b,?___fldiv
  7290  0027BC  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  7291  0027C0  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  7292  0027C4  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  7293  0027C8  EF29  F015         	goto	l957
  7294  0027CC                     l3337:
  7295  0027CC  503F               	movf	___fldiv@bexp^0,w,c
  7296  0027CE  A4D8               	btfss	status,2,c
  7297  0027D0  EFEC  F013         	goto	u3511
  7298  0027D4  EFEE  F013         	goto	u3510
  7299  0027D8                     u3511:
  7300  0027D8  EFF8  F013         	goto	l3345
  7301  0027DC                     u3510:
  7302  0027DC  0E00               	movlw	0
  7303  0027DE  6E28               	movwf	?___fldiv^0,c
  7304  0027E0  0E00               	movlw	0
  7305  0027E2  6E29               	movwf	(?___fldiv+1)^0,c
  7306  0027E4  0E00               	movlw	0
  7307  0027E6  6E2A               	movwf	(?___fldiv+2)^0,c
  7308  0027E8  0E00               	movlw	0
  7309  0027EA  6E2B               	movwf	(?___fldiv+3)^0,c
  7310  0027EC  EF29  F015         	goto	l957
  7311  0027F0                     l3345:
  7312  0027F0  5040               	movf	___fldiv@aexp^0,w,c
  7313  0027F2  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  7314  0027F6  6A31               	clrf	(??___fldiv+1)^0,c
  7315  0027F8  5E30               	subwf	??___fldiv^0,f,c
  7316  0027FA  0E00               	movlw	0
  7317  0027FC  5A31               	subwfb	(??___fldiv+1)^0,f,c
  7318  0027FE  0E7F               	movlw	127
  7319  002800  2430               	addwf	??___fldiv^0,w,c
  7320  002802  6E39               	movwf	___fldiv@new_exp^0,c
  7321  002804  0E00               	movlw	0
  7322  002806  2031               	addwfc	(??___fldiv+1)^0,w,c
  7323  002808  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7324  00280A  C028  F034         	movff	___fldiv@b,___fldiv@rem
  7325  00280E  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  7326  002812  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  7327  002816  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  7328  00281A  0E00               	movlw	0
  7329  00281C  6E28               	movwf	___fldiv@b^0,c
  7330  00281E  0E00               	movlw	0
  7331  002820  6E29               	movwf	(___fldiv@b+1)^0,c
  7332  002822  0E00               	movlw	0
  7333  002824  6E2A               	movwf	(___fldiv@b+2)^0,c
  7334  002826  0E00               	movlw	0
  7335  002828  6E2B               	movwf	(___fldiv@b+3)^0,c
  7336  00282A  0E00               	movlw	0
  7337  00282C  6E3B               	movwf	___fldiv@grs^0,c
  7338  00282E  0E00               	movlw	0
  7339  002830  6E3C               	movwf	(___fldiv@grs+1)^0,c
  7340  002832  0E00               	movlw	0
  7341  002834  6E3D               	movwf	(___fldiv@grs+2)^0,c
  7342  002836  0E00               	movlw	0
  7343  002838  6E3E               	movwf	(___fldiv@grs+3)^0,c
  7344  00283A  0E00               	movlw	0
  7345  00283C  6E40               	movwf	___fldiv@aexp^0,c
  7346  00283E  EF59  F014         	goto	l959
  7347  002842                     l3355:
  7348  002842  5040               	movf	___fldiv@aexp^0,w,c
  7349  002844  B4D8               	btfsc	status,2,c
  7350  002846  EF27  F014         	goto	u3521
  7351  00284A  EF29  F014         	goto	u3520
  7352  00284E                     u3521:
  7353  00284E  EF40  F014         	goto	l3363
  7354  002852                     u3520:
  7355  002852  90D8               	bcf	status,0,c
  7356  002854  3634               	rlcf	___fldiv@rem^0,f,c
  7357  002856  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  7358  002858  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  7359  00285A  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  7360  00285C  90D8               	bcf	status,0,c
  7361  00285E  3628               	rlcf	___fldiv@b^0,f,c
  7362  002860  3629               	rlcf	(___fldiv@b+1)^0,f,c
  7363  002862  362A               	rlcf	(___fldiv@b+2)^0,f,c
  7364  002864  362B               	rlcf	(___fldiv@b+3)^0,f,c
  7365  002866  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7366  002868  EF38  F014         	goto	u3531
  7367  00286C  EF3A  F014         	goto	u3530
  7368  002870                     u3531:
  7369  002870  EF3B  F014         	goto	l962
  7370  002874                     u3530:
  7371  002874  8028               	bsf	___fldiv@b^0,0,c
  7372  002876                     l962:
  7373  002876  90D8               	bcf	status,0,c
  7374  002878  363B               	rlcf	___fldiv@grs^0,f,c
  7375  00287A  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  7376  00287C  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  7377  00287E  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  7378  002880                     l3363:
  7379  002880  502C               	movf	___fldiv@a^0,w,c
  7380  002882  5C34               	subwf	___fldiv@rem^0,w,c
  7381  002884  502D               	movf	(___fldiv@a+1)^0,w,c
  7382  002886  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  7383  002888  502E               	movf	(___fldiv@a+2)^0,w,c
  7384  00288A  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  7385  00288C  502F               	movf	(___fldiv@a+3)^0,w,c
  7386  00288E  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  7387  002890  A0D8               	btfss	status,0,c
  7388  002892  EF4D  F014         	goto	u3541
  7389  002896  EF4F  F014         	goto	u3540
  7390  00289A                     u3541:
  7391  00289A  EF58  F014         	goto	l3369
  7392  00289E                     u3540:
  7393  00289E  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  7394  0028A0  502C               	movf	___fldiv@a^0,w,c
  7395  0028A2  5E34               	subwf	___fldiv@rem^0,f,c
  7396  0028A4  502D               	movf	(___fldiv@a+1)^0,w,c
  7397  0028A6  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  7398  0028A8  502E               	movf	(___fldiv@a+2)^0,w,c
  7399  0028AA  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  7400  0028AC  502F               	movf	(___fldiv@a+3)^0,w,c
  7401  0028AE  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  7402  0028B0                     l3369:
  7403  0028B0  2A40               	incf	___fldiv@aexp^0,f,c
  7404  0028B2                     l959:
  7405  0028B2  0E19               	movlw	25
  7406  0028B4  6440               	cpfsgt	___fldiv@aexp^0,c
  7407  0028B6  EF5F  F014         	goto	u3551
  7408  0028BA  EF61  F014         	goto	u3550
  7409  0028BE                     u3551:
  7410  0028BE  EF21  F014         	goto	l3355
  7411  0028C2                     u3550:
  7412  0028C2  5034               	movf	___fldiv@rem^0,w,c
  7413  0028C4  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  7414  0028C6  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  7415  0028C8  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  7416  0028CA  B4D8               	btfsc	status,2,c
  7417  0028CC  EF6A  F014         	goto	u3561
  7418  0028D0  EF6C  F014         	goto	u3560
  7419  0028D4                     u3561:
  7420  0028D4  EF84  F014         	goto	l3381
  7421  0028D8                     u3560:
  7422  0028D8  803B               	bsf	___fldiv@grs^0,0,c
  7423  0028DA  EF84  F014         	goto	l3381
  7424  0028DE                     l3375:
  7425  0028DE  90D8               	bcf	status,0,c
  7426  0028E0  3628               	rlcf	___fldiv@b^0,f,c
  7427  0028E2  3629               	rlcf	(___fldiv@b+1)^0,f,c
  7428  0028E4  362A               	rlcf	(___fldiv@b+2)^0,f,c
  7429  0028E6  362B               	rlcf	(___fldiv@b+3)^0,f,c
  7430  0028E8  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7431  0028EA  EF79  F014         	goto	u3571
  7432  0028EE  EF7B  F014         	goto	u3570
  7433  0028F2                     u3571:
  7434  0028F2  EF7C  F014         	goto	l968
  7435  0028F6                     u3570:
  7436  0028F6  8028               	bsf	___fldiv@b^0,0,c
  7437  0028F8                     l968:
  7438  0028F8  90D8               	bcf	status,0,c
  7439  0028FA  363B               	rlcf	___fldiv@grs^0,f,c
  7440  0028FC  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  7441  0028FE  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  7442  002900  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  7443  002902  0639               	decf	___fldiv@new_exp^0,f,c
  7444  002904  A0D8               	btfss	status,0,c
  7445  002906  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  7446  002908                     l3381:
  7447  002908  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  7448  00290A  EF89  F014         	goto	u3581
  7449  00290E  EF8B  F014         	goto	u3580
  7450  002912                     u3581:
  7451  002912  EF6F  F014         	goto	l3375
  7452  002916                     u3580:
  7453  002916  0E00               	movlw	0
  7454  002918  6E40               	movwf	___fldiv@aexp^0,c
  7455  00291A  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7456  00291C  EF92  F014         	goto	u3591
  7457  002920  EF94  F014         	goto	u3590
  7458  002924                     u3591:
  7459  002924  EFB8  F014         	goto	l970
  7460  002928                     u3590:
  7461  002928  0EFF               	movlw	255
  7462  00292A  143B               	andwf	___fldiv@grs^0,w,c
  7463  00292C  6E30               	movwf	??___fldiv^0,c
  7464  00292E  0EFF               	movlw	255
  7465  002930  143C               	andwf	(___fldiv@grs+1)^0,w,c
  7466  002932  6E31               	movwf	(??___fldiv+1)^0,c
  7467  002934  0EFF               	movlw	255
  7468  002936  143D               	andwf	(___fldiv@grs+2)^0,w,c
  7469  002938  6E32               	movwf	(??___fldiv+2)^0,c
  7470  00293A  0E7F               	movlw	127
  7471  00293C  143E               	andwf	(___fldiv@grs+3)^0,w,c
  7472  00293E  6E33               	movwf	(??___fldiv+3)^0,c
  7473  002940  5030               	movf	??___fldiv^0,w,c
  7474  002942  1031               	iorwf	(??___fldiv+1)^0,w,c
  7475  002944  1032               	iorwf	(??___fldiv+2)^0,w,c
  7476  002946  1033               	iorwf	(??___fldiv+3)^0,w,c
  7477  002948  B4D8               	btfsc	status,2,c
  7478  00294A  EFA9  F014         	goto	u3601
  7479  00294E  EFAB  F014         	goto	u3600
  7480  002952                     u3601:
  7481  002952  EFAF  F014         	goto	l971
  7482  002956                     u3600:
  7483  002956                     l3389:
  7484  002956  0E01               	movlw	1
  7485  002958  6E40               	movwf	___fldiv@aexp^0,c
  7486  00295A  EFB8  F014         	goto	l970
  7487  00295E                     l971:
  7488  00295E  A028               	btfss	___fldiv@b^0,0,c
  7489  002960  EFB4  F014         	goto	u3611
  7490  002964  EFB6  F014         	goto	u3610
  7491  002968                     u3611:
  7492  002968  EFB8  F014         	goto	l970
  7493  00296C                     u3610:
  7494  00296C  EFAB  F014         	goto	l3389
  7495  002970                     l970:
  7496  002970  5040               	movf	___fldiv@aexp^0,w,c
  7497  002972  B4D8               	btfsc	status,2,c
  7498  002974  EFBE  F014         	goto	u3621
  7499  002978  EFC0  F014         	goto	u3620
  7500  00297C                     u3621:
  7501  00297C  EFE4  F014         	goto	l3401
  7502  002980                     u3620:
  7503  002980  0E01               	movlw	1
  7504  002982  2628               	addwf	___fldiv@b^0,f,c
  7505  002984  0E00               	movlw	0
  7506  002986  2229               	addwfc	(___fldiv@b+1)^0,f,c
  7507  002988  222A               	addwfc	(___fldiv@b+2)^0,f,c
  7508  00298A  222B               	addwfc	(___fldiv@b+3)^0,f,c
  7509  00298C  A02B               	btfss	(___fldiv@b+3)^0,0,c
  7510  00298E  EFCB  F014         	goto	u3631
  7511  002992  EFCD  F014         	goto	u3630
  7512  002996                     u3631:
  7513  002996  EFE4  F014         	goto	l3401
  7514  00299A                     u3630:
  7515  00299A  C028  F030         	movff	___fldiv@b,??___fldiv
  7516  00299E  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  7517  0029A2  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  7518  0029A6  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  7519  0029AA  3433               	rlcf	(??___fldiv+3)^0,w,c
  7520  0029AC  3233               	rrcf	(??___fldiv+3)^0,f,c
  7521  0029AE  3232               	rrcf	(??___fldiv+2)^0,f,c
  7522  0029B0  3231               	rrcf	(??___fldiv+1)^0,f,c
  7523  0029B2  3230               	rrcf	??___fldiv^0,f,c
  7524  0029B4  C030  F028         	movff	??___fldiv,___fldiv@b
  7525  0029B8  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  7526  0029BC  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  7527  0029C0  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  7528  0029C4  4A39               	infsnz	___fldiv@new_exp^0,f,c
  7529  0029C6  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  7530  0029C8                     l3401:
  7531  0029C8  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7532  0029CA  EFEF  F014         	goto	u3641
  7533  0029CE  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  7534  0029D0  E108               	bnz	u3640
  7535  0029D2  2839               	incf	___fldiv@new_exp^0,w,c
  7536  0029D4  A0D8               	btfss	status,0,c
  7537  0029D6  EFEF  F014         	goto	u3641
  7538  0029DA  EFF1  F014         	goto	u3640
  7539  0029DE                     u3641:
  7540  0029DE  EFFC  F014         	goto	l3405
  7541  0029E2                     u3640:
  7542  0029E2  0E00               	movlw	0
  7543  0029E4  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7544  0029E6  6839               	setf	___fldiv@new_exp^0,c
  7545  0029E8  0E00               	movlw	0
  7546  0029EA  6E28               	movwf	___fldiv@b^0,c
  7547  0029EC  0E00               	movlw	0
  7548  0029EE  6E29               	movwf	(___fldiv@b+1)^0,c
  7549  0029F0  0E00               	movlw	0
  7550  0029F2  6E2A               	movwf	(___fldiv@b+2)^0,c
  7551  0029F4  0E00               	movlw	0
  7552  0029F6  6E2B               	movwf	(___fldiv@b+3)^0,c
  7553  0029F8                     l3405:
  7554  0029F8  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7555  0029FA  EF09  F015         	goto	u3650
  7556  0029FE  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  7557  002A00  E106               	bnz	u3651
  7558  002A02  0439               	decf	___fldiv@new_exp^0,w,c
  7559  002A04  B0D8               	btfsc	status,0,c
  7560  002A06  EF07  F015         	goto	u3651
  7561  002A0A  EF09  F015         	goto	u3650
  7562  002A0E                     u3651:
  7563  002A0E  EF17  F015         	goto	l3409
  7564  002A12                     u3650:
  7565  002A12  0E00               	movlw	0
  7566  002A14  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7567  002A16  0E00               	movlw	0
  7568  002A18  6E39               	movwf	___fldiv@new_exp^0,c
  7569  002A1A  0E00               	movlw	0
  7570  002A1C  6E28               	movwf	___fldiv@b^0,c
  7571  002A1E  0E00               	movlw	0
  7572  002A20  6E29               	movwf	(___fldiv@b+1)^0,c
  7573  002A22  0E00               	movlw	0
  7574  002A24  6E2A               	movwf	(___fldiv@b+2)^0,c
  7575  002A26  0E00               	movlw	0
  7576  002A28  6E2B               	movwf	(___fldiv@b+3)^0,c
  7577  002A2A  0E00               	movlw	0
  7578  002A2C  6E38               	movwf	___fldiv@sign^0,c
  7579  002A2E                     l3409:
  7580  002A2E  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  7581  002A32  A03F               	btfss	___fldiv@bexp^0,0,c
  7582  002A34  EF1E  F015         	goto	u3661
  7583  002A38  EF20  F015         	goto	u3660
  7584  002A3C                     u3661:
  7585  002A3C  EF23  F015         	goto	l3415
  7586  002A40                     u3660:
  7587  002A40  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  7588  002A42  EF24  F015         	goto	l3417
  7589  002A46                     l3415:
  7590  002A46  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  7591  002A48                     l3417:
  7592  002A48  90D8               	bcf	status,0,c
  7593  002A4A  303F               	rrcf	___fldiv@bexp^0,w,c
  7594  002A4C  6E2B               	movwf	(___fldiv@b+3)^0,c
  7595  002A4E  EFDA  F013         	goto	l3331
  7596  002A52                     l957:
  7597  002A52  0012               	return		;funcret
  7598  002A54                     __end_of___fldiv:
  7599                           	opt callstack 0
  7600                           
  7601 ;; *************** function ___awmod *****************
  7602 ;; Defined at:
  7603 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  7604 ;; Parameters:    Size  Location     Type
  7605 ;;  dividend        2    0[COMRAM] int 
  7606 ;;  divisor         2    2[COMRAM] int 
  7607 ;; Auto vars:     Size  Location     Type
  7608 ;;  sign            1    5[COMRAM] unsigned char 
  7609 ;;  counter         1    4[COMRAM] unsigned char 
  7610 ;; Return value:  Size  Location     Type
  7611 ;;                  2    0[COMRAM] int 
  7612 ;; Registers used:
  7613 ;;		wreg, status,2, status,0
  7614 ;; Tracked objects:
  7615 ;;		On entry : 0/0
  7616 ;;		On exit  : 0/0
  7617 ;;		Unchanged: 0/0
  7618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7619 ;;      Params:         4       0       0       0       0       0       0       0       0
  7620 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7621 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7622 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7623 ;;Total ram usage:        6 bytes
  7624 ;; Hardware stack levels used:    1
  7625 ;; This function calls:
  7626 ;;		Nothing
  7627 ;; This function is called by:
  7628 ;;		_efgtoa
  7629 ;; This function uses a non-reentrant model
  7630 ;;
  7631                           
  7632                           	psect	text24
  7633  0036C6                     __ptext24:
  7634                           	opt callstack 0
  7635  0036C6                     ___awmod:
  7636                           	opt callstack 26
  7637  0036C6  0E00               	movlw	0
  7638  0036C8  6E06               	movwf	___awmod@sign^0,c
  7639  0036CA  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7640  0036CC  EF6C  F01B         	goto	u3920
  7641  0036D0  EF6A  F01B         	goto	u3921
  7642  0036D4                     u3921:
  7643  0036D4  EF72  F01B         	goto	l3613
  7644  0036D8                     u3920:
  7645  0036D8  6C01               	negf	___awmod@dividend^0,c
  7646  0036DA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7647  0036DC  B0D8               	btfsc	status,0,c
  7648  0036DE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7649  0036E0  0E01               	movlw	1
  7650  0036E2  6E06               	movwf	___awmod@sign^0,c
  7651  0036E4                     l3613:
  7652  0036E4  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7653  0036E6  EF79  F01B         	goto	u3930
  7654  0036EA  EF77  F01B         	goto	u3931
  7655  0036EE                     u3931:
  7656  0036EE  EF7D  F01B         	goto	l3617
  7657  0036F2                     u3930:
  7658  0036F2  6C03               	negf	___awmod@divisor^0,c
  7659  0036F4  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7660  0036F6  B0D8               	btfsc	status,0,c
  7661  0036F8  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7662  0036FA                     l3617:
  7663  0036FA  5003               	movf	___awmod@divisor^0,w,c
  7664  0036FC  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7665  0036FE  B4D8               	btfsc	status,2,c
  7666  003700  EF84  F01B         	goto	u3941
  7667  003704  EF86  F01B         	goto	u3940
  7668  003708                     u3941:
  7669  003708  EFAA  F01B         	goto	l3633
  7670  00370C                     u3940:
  7671  00370C  0E01               	movlw	1
  7672  00370E  6E05               	movwf	___awmod@counter^0,c
  7673  003710  EF8E  F01B         	goto	l3623
  7674  003714                     l3621:
  7675  003714  90D8               	bcf	status,0,c
  7676  003716  3603               	rlcf	___awmod@divisor^0,f,c
  7677  003718  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7678  00371A  2A05               	incf	___awmod@counter^0,f,c
  7679  00371C                     l3623:
  7680  00371C  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7681  00371E  EF93  F01B         	goto	u3951
  7682  003722  EF95  F01B         	goto	u3950
  7683  003726                     u3951:
  7684  003726  EF8A  F01B         	goto	l3621
  7685  00372A                     u3950:
  7686  00372A                     l3625:
  7687  00372A  5003               	movf	___awmod@divisor^0,w,c
  7688  00372C  5C01               	subwf	___awmod@dividend^0,w,c
  7689  00372E  5004               	movf	(___awmod@divisor+1)^0,w,c
  7690  003730  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7691  003732  A0D8               	btfss	status,0,c
  7692  003734  EF9E  F01B         	goto	u3961
  7693  003738  EFA0  F01B         	goto	u3960
  7694  00373C                     u3961:
  7695  00373C  EFA4  F01B         	goto	l3629
  7696  003740                     u3960:
  7697  003740  5003               	movf	___awmod@divisor^0,w,c
  7698  003742  5E01               	subwf	___awmod@dividend^0,f,c
  7699  003744  5004               	movf	(___awmod@divisor+1)^0,w,c
  7700  003746  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7701  003748                     l3629:
  7702  003748  90D8               	bcf	status,0,c
  7703  00374A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7704  00374C  3203               	rrcf	___awmod@divisor^0,f,c
  7705  00374E  2E05               	decfsz	___awmod@counter^0,f,c
  7706  003750  EF95  F01B         	goto	l3625
  7707  003754                     l3633:
  7708  003754  5006               	movf	___awmod@sign^0,w,c
  7709  003756  B4D8               	btfsc	status,2,c
  7710  003758  EFB0  F01B         	goto	u3971
  7711  00375C  EFB2  F01B         	goto	u3970
  7712  003760                     u3971:
  7713  003760  EFB6  F01B         	goto	l3637
  7714  003764                     u3970:
  7715  003764  6C01               	negf	___awmod@dividend^0,c
  7716  003766  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7717  003768  B0D8               	btfsc	status,0,c
  7718  00376A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7719  00376C                     l3637:
  7720  00376C  C001  F001         	movff	___awmod@dividend,?___awmod
  7721  003770  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7722  003774  0012               	return		;funcret
  7723  003776                     __end_of___awmod:
  7724                           	opt callstack 0
  7725                           
  7726 ;; *************** function ___awdiv *****************
  7727 ;; Defined at:
  7728 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  7729 ;; Parameters:    Size  Location     Type
  7730 ;;  dividend        2    0[COMRAM] int 
  7731 ;;  divisor         2    2[COMRAM] int 
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;  quotient        2    6[COMRAM] int 
  7734 ;;  sign            1    5[COMRAM] unsigned char 
  7735 ;;  counter         1    4[COMRAM] unsigned char 
  7736 ;; Return value:  Size  Location     Type
  7737 ;;                  2    0[COMRAM] int 
  7738 ;; Registers used:
  7739 ;;		wreg, status,2, status,0
  7740 ;; Tracked objects:
  7741 ;;		On entry : 0/0
  7742 ;;		On exit  : 0/0
  7743 ;;		Unchanged: 0/0
  7744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7745 ;;      Params:         4       0       0       0       0       0       0       0       0
  7746 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7747 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7748 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7749 ;;Total ram usage:        8 bytes
  7750 ;; Hardware stack levels used:    1
  7751 ;; This function calls:
  7752 ;;		Nothing
  7753 ;; This function is called by:
  7754 ;;		_efgtoa
  7755 ;; This function uses a non-reentrant model
  7756 ;;
  7757                           
  7758                           	psect	text25
  7759  003602                     __ptext25:
  7760                           	opt callstack 0
  7761  003602                     ___awdiv:
  7762                           	opt callstack 26
  7763  003602  0E00               	movlw	0
  7764  003604  6E06               	movwf	___awdiv@sign^0,c
  7765  003606  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7766  003608  EF0A  F01B         	goto	u3860
  7767  00360C  EF08  F01B         	goto	u3861
  7768  003610                     u3861:
  7769  003610  EF10  F01B         	goto	l3569
  7770  003614                     u3860:
  7771  003614  6C03               	negf	___awdiv@divisor^0,c
  7772  003616  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7773  003618  B0D8               	btfsc	status,0,c
  7774  00361A  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7775  00361C  0E01               	movlw	1
  7776  00361E  6E06               	movwf	___awdiv@sign^0,c
  7777  003620                     l3569:
  7778  003620  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7779  003622  EF17  F01B         	goto	u3870
  7780  003626  EF15  F01B         	goto	u3871
  7781  00362A                     u3871:
  7782  00362A  EF1D  F01B         	goto	l3575
  7783  00362E                     u3870:
  7784  00362E  6C01               	negf	___awdiv@dividend^0,c
  7785  003630  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7786  003632  B0D8               	btfsc	status,0,c
  7787  003634  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7788  003636  0E01               	movlw	1
  7789  003638  1A06               	xorwf	___awdiv@sign^0,f,c
  7790  00363A                     l3575:
  7791  00363A  0E00               	movlw	0
  7792  00363C  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7793  00363E  0E00               	movlw	0
  7794  003640  6E07               	movwf	___awdiv@quotient^0,c
  7795  003642  5003               	movf	___awdiv@divisor^0,w,c
  7796  003644  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7797  003646  B4D8               	btfsc	status,2,c
  7798  003648  EF28  F01B         	goto	u3881
  7799  00364C  EF2A  F01B         	goto	u3880
  7800  003650                     u3881:
  7801  003650  EF52  F01B         	goto	l3597
  7802  003654                     u3880:
  7803  003654  0E01               	movlw	1
  7804  003656  6E05               	movwf	___awdiv@counter^0,c
  7805  003658  EF32  F01B         	goto	l3583
  7806  00365C                     l3581:
  7807  00365C  90D8               	bcf	status,0,c
  7808  00365E  3603               	rlcf	___awdiv@divisor^0,f,c
  7809  003660  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7810  003662  2A05               	incf	___awdiv@counter^0,f,c
  7811  003664                     l3583:
  7812  003664  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7813  003666  EF37  F01B         	goto	u3891
  7814  00366A  EF39  F01B         	goto	u3890
  7815  00366E                     u3891:
  7816  00366E  EF2E  F01B         	goto	l3581
  7817  003672                     u3890:
  7818  003672                     l3585:
  7819  003672  90D8               	bcf	status,0,c
  7820  003674  3607               	rlcf	___awdiv@quotient^0,f,c
  7821  003676  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7822  003678  5003               	movf	___awdiv@divisor^0,w,c
  7823  00367A  5C01               	subwf	___awdiv@dividend^0,w,c
  7824  00367C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7825  00367E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7826  003680  A0D8               	btfss	status,0,c
  7827  003682  EF45  F01B         	goto	u3901
  7828  003686  EF47  F01B         	goto	u3900
  7829  00368A                     u3901:
  7830  00368A  EF4C  F01B         	goto	l3593
  7831  00368E                     u3900:
  7832  00368E  5003               	movf	___awdiv@divisor^0,w,c
  7833  003690  5E01               	subwf	___awdiv@dividend^0,f,c
  7834  003692  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7835  003694  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7836  003696  8007               	bsf	___awdiv@quotient^0,0,c
  7837  003698                     l3593:
  7838  003698  90D8               	bcf	status,0,c
  7839  00369A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7840  00369C  3203               	rrcf	___awdiv@divisor^0,f,c
  7841  00369E  2E05               	decfsz	___awdiv@counter^0,f,c
  7842  0036A0  EF39  F01B         	goto	l3585
  7843  0036A4                     l3597:
  7844  0036A4  5006               	movf	___awdiv@sign^0,w,c
  7845  0036A6  B4D8               	btfsc	status,2,c
  7846  0036A8  EF58  F01B         	goto	u3911
  7847  0036AC  EF5A  F01B         	goto	u3910
  7848  0036B0                     u3911:
  7849  0036B0  EF5E  F01B         	goto	l3601
  7850  0036B4                     u3910:
  7851  0036B4  6C07               	negf	___awdiv@quotient^0,c
  7852  0036B6  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7853  0036B8  B0D8               	btfsc	status,0,c
  7854  0036BA  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7855  0036BC                     l3601:
  7856  0036BC  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7857  0036C0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7858  0036C4  0012               	return		;funcret
  7859  0036C6                     __end_of___awdiv:
  7860                           	opt callstack 0
  7861                           
  7862 ;; *************** function _atoi *****************
  7863 ;; Defined at:
  7864 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  7865 ;; Parameters:    Size  Location     Type
  7866 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7867 ;;		 -> STR_11(5), STR_9(5), STR_7(5), 
  7868 ;; Auto vars:     Size  Location     Type
  7869 ;;  n               2   20[COMRAM] int 
  7870 ;;  neg             2   13[COMRAM] int 
  7871 ;; Return value:  Size  Location     Type
  7872 ;;                  2    7[COMRAM] int 
  7873 ;; Registers used:
  7874 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7875 ;; Tracked objects:
  7876 ;;		On entry : 0/0
  7877 ;;		On exit  : 0/0
  7878 ;;		Unchanged: 0/0
  7879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7880 ;;      Params:         2       0       0       0       0       0       0       0       0
  7881 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7882 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7883 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7884 ;;Total ram usage:       15 bytes
  7885 ;; Hardware stack levels used:    1
  7886 ;; Hardware stack levels required when called:    1
  7887 ;; This function calls:
  7888 ;;		___wmul
  7889 ;;		_isdigit
  7890 ;;		_isspace
  7891 ;; This function is called by:
  7892 ;;		_vfpfcnvrt
  7893 ;; This function uses a non-reentrant model
  7894 ;;
  7895                           
  7896                           	psect	text26
  7897  002E1A                     __ptext26:
  7898                           	opt callstack 0
  7899  002E1A                     _atoi:
  7900                           	opt callstack 26
  7901  002E1A  0E00               	movlw	0
  7902  002E1C  6E16               	movwf	(atoi@n+1)^0,c
  7903  002E1E  0E00               	movlw	0
  7904  002E20  6E15               	movwf	atoi@n^0,c
  7905  002E22  0E00               	movlw	0
  7906  002E24  6E0F               	movwf	(atoi@neg+1)^0,c
  7907  002E26  0E00               	movlw	0
  7908  002E28  6E0E               	movwf	atoi@neg^0,c
  7909  002E2A  EF19  F017         	goto	l4047
  7910  002E2E                     l4045:
  7911  002E2E  4A08               	infsnz	atoi@s^0,f,c
  7912  002E30  2A09               	incf	(atoi@s+1)^0,f,c
  7913  002E32                     l4047:
  7914  002E32  0E01               	movlw	1
  7915  002E34  6E14               	movwf	_atoi$1127^0,c
  7916  002E36  C008  FFF6         	movff	atoi@s,tblptrl
  7917  002E3A  C009  FFF7         	movff	atoi@s+1,tblptrh
  7918  002E3E                     	if	0	;tblptru may be non-zero
  7919  002E3E                     	endif
  7920  002E3E                     	if	0	;tblptru may be non-zero
  7921  002E3E                     	endif
  7922  002E3E  0008               	tblrd		*
  7923  002E40  50F5               	movf	tablat,w,c
  7924  002E42  0A20               	xorlw	32
  7925  002E44  B4D8               	btfsc	status,2,c
  7926  002E46  EF27  F017         	goto	u4681
  7927  002E4A  EF29  F017         	goto	u4680
  7928  002E4E                     u4681:
  7929  002E4E  EF46  F017         	goto	l4055
  7930  002E52                     u4680:
  7931  002E52  0EF7               	movlw	247
  7932  002E54  6E0A               	movwf	??_atoi^0,c
  7933  002E56  0EFF               	movlw	255
  7934  002E58  6E0B               	movwf	(??_atoi+1)^0,c
  7935  002E5A  C008  FFF6         	movff	atoi@s,tblptrl
  7936  002E5E  C009  FFF7         	movff	atoi@s+1,tblptrh
  7937  002E62                     	if	0	;tblptru may be non-zero
  7938  002E62                     	endif
  7939  002E62                     	if	0	;tblptru may be non-zero
  7940  002E62                     	endif
  7941  002E62  0008               	tblrd		*
  7942  002E64  50F5               	movf	tablat,w,c
  7943  002E66  6E0C               	movwf	(??_atoi+2)^0,c
  7944  002E68  6A0D               	clrf	(??_atoi+3)^0,c
  7945  002E6A  500A               	movf	??_atoi^0,w,c
  7946  002E6C  260C               	addwf	(??_atoi+2)^0,f,c
  7947  002E6E  500B               	movf	(??_atoi+1)^0,w,c
  7948  002E70  220D               	addwfc	(??_atoi+3)^0,f,c
  7949  002E72  500D               	movf	(??_atoi+3)^0,w,c
  7950  002E74  E109               	bnz	u4690
  7951  002E76  0E05               	movlw	5
  7952  002E78  5C0C               	subwf	(??_atoi+2)^0,w,c
  7953  002E7A  A0D8               	btfss	status,0,c
  7954  002E7C  EF42  F017         	goto	u4691
  7955  002E80  EF44  F017         	goto	u4690
  7956  002E84                     u4691:
  7957  002E84  EF46  F017         	goto	l4055
  7958  002E88                     u4690:
  7959  002E88  0E00               	movlw	0
  7960  002E8A  6E14               	movwf	_atoi$1127^0,c
  7961  002E8C                     l4055:
  7962  002E8C  C014  F010         	movff	_atoi$1127,_atoi$1126
  7963  002E90  6A11               	clrf	(_atoi$1126+1)^0,c
  7964  002E92  5010               	movf	_atoi$1126^0,w,c
  7965  002E94  1011               	iorwf	(_atoi$1126+1)^0,w,c
  7966  002E96  A4D8               	btfss	status,2,c
  7967  002E98  EF50  F017         	goto	u4701
  7968  002E9C  EF52  F017         	goto	u4700
  7969  002EA0                     u4701:
  7970  002EA0  EF17  F017         	goto	l4045
  7971  002EA4                     u4700:
  7972  002EA4  EF5C  F017         	goto	l4065
  7973  002EA8                     l4061:
  7974  002EA8  0E00               	movlw	0
  7975  002EAA  6E0F               	movwf	(atoi@neg+1)^0,c
  7976  002EAC  0E01               	movlw	1
  7977  002EAE  6E0E               	movwf	atoi@neg^0,c
  7978  002EB0                     l4063:
  7979  002EB0  4A08               	infsnz	atoi@s^0,f,c
  7980  002EB2  2A09               	incf	(atoi@s+1)^0,f,c
  7981  002EB4  EF91  F017         	goto	l4071
  7982  002EB8                     l4065:
  7983  002EB8  C008  FFF6         	movff	atoi@s,tblptrl
  7984  002EBC  C009  FFF7         	movff	atoi@s+1,tblptrh
  7985  002EC0                     	if	0	;tblptru may be non-zero
  7986  002EC0                     	endif
  7987  002EC0                     	if	0	;tblptru may be non-zero
  7988  002EC0                     	endif
  7989  002EC0  0008               	tblrd		*
  7990  002EC2  50F5               	movf	tablat,w,c
  7991  002EC4  6E0A               	movwf	??_atoi^0,c
  7992  002EC6  6A0B               	clrf	(??_atoi+1)^0,c
  7993                           
  7994                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7995                           ; Switch size 1, requested type "simple"
  7996                           ; Number of cases is 1, Range of values is 0 to 0
  7997                           ; switch strategies available:
  7998                           ; Name         Instructions Cycles
  7999                           ; simple_byte            4     3 (average)
  8000                           ;	Chosen strategy is simple_byte
  8001  002EC8  500B               	movf	(??_atoi+1)^0,w,c
  8002  002ECA  0A00               	xorlw	0	; case 0
  8003  002ECC  B4D8               	btfsc	status,2,c
  8004  002ECE  EF6B  F017         	goto	l4715
  8005  002ED2  EF91  F017         	goto	l4071
  8006  002ED6                     l4715:
  8007                           
  8008                           ; Switch size 1, requested type "simple"
  8009                           ; Number of cases is 2, Range of values is 43 to 45
  8010                           ; switch strategies available:
  8011                           ; Name         Instructions Cycles
  8012                           ; simple_byte            7     4 (average)
  8013                           ;	Chosen strategy is simple_byte
  8014  002ED6  500A               	movf	??_atoi^0,w,c
  8015  002ED8  0A2B               	xorlw	43	; case 43
  8016  002EDA  B4D8               	btfsc	status,2,c
  8017  002EDC  EF58  F017         	goto	l4063
  8018  002EE0  0A06               	xorlw	6	; case 45
  8019  002EE2  B4D8               	btfsc	status,2,c
  8020  002EE4  EF54  F017         	goto	l4061
  8021  002EE8  EF91  F017         	goto	l4071
  8022  002EEC                     l4067:
  8023  002EEC  C015  F001         	movff	atoi@n,___wmul@multiplier
  8024  002EF0  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  8025  002EF4  0E00               	movlw	0
  8026  002EF6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8027  002EF8  0E0A               	movlw	10
  8028  002EFA  6E03               	movwf	___wmul@multiplicand^0,c
  8029  002EFC  ECC6  F01E         	call	___wmul	;wreg free
  8030  002F00  C008  FFF6         	movff	atoi@s,tblptrl
  8031  002F04  C009  FFF7         	movff	atoi@s+1,tblptrh
  8032  002F08                     	if	0	;tblptru may be non-zero
  8033  002F08                     	endif
  8034  002F08                     	if	0	;tblptru may be non-zero
  8035  002F08                     	endif
  8036  002F08  0008               	tblrd		*
  8037  002F0A  50F5               	movf	tablat,w,c
  8038  002F0C  5E01               	subwf	?___wmul^0,f,c
  8039  002F0E  0E00               	movlw	0
  8040  002F10  5A02               	subwfb	(?___wmul+1)^0,f,c
  8041  002F12  0E30               	movlw	48
  8042  002F14  2401               	addwf	?___wmul^0,w,c
  8043  002F16  6E15               	movwf	atoi@n^0,c
  8044  002F18  0E00               	movlw	0
  8045  002F1A  2002               	addwfc	(?___wmul+1)^0,w,c
  8046  002F1C  6E16               	movwf	(atoi@n+1)^0,c
  8047  002F1E  EF58  F017         	goto	l4063
  8048  002F22                     l4071:
  8049  002F22  0ED0               	movlw	208
  8050  002F24  6E0A               	movwf	??_atoi^0,c
  8051  002F26  0EFF               	movlw	255
  8052  002F28  6E0B               	movwf	(??_atoi+1)^0,c
  8053  002F2A  C008  FFF6         	movff	atoi@s,tblptrl
  8054  002F2E  C009  FFF7         	movff	atoi@s+1,tblptrh
  8055  002F32                     	if	0	;tblptru may be non-zero
  8056  002F32                     	endif
  8057  002F32                     	if	0	;tblptru may be non-zero
  8058  002F32                     	endif
  8059  002F32  0008               	tblrd		*
  8060  002F34  50F5               	movf	tablat,w,c
  8061  002F36  6E0C               	movwf	(??_atoi+2)^0,c
  8062  002F38  6A0D               	clrf	(??_atoi+3)^0,c
  8063  002F3A  500A               	movf	??_atoi^0,w,c
  8064  002F3C  260C               	addwf	(??_atoi+2)^0,f,c
  8065  002F3E  500B               	movf	(??_atoi+1)^0,w,c
  8066  002F40  220D               	addwfc	(??_atoi+3)^0,f,c
  8067  002F42  500D               	movf	(??_atoi+3)^0,w,c
  8068  002F44  E10A               	bnz	u4710
  8069  002F46  0E0A               	movlw	10
  8070  002F48  5C0C               	subwf	(??_atoi+2)^0,w,c
  8071  002F4A  A0D8               	btfss	status,0,c
  8072  002F4C  EFAA  F017         	goto	u4711
  8073  002F50  EFAD  F017         	goto	u4710
  8074  002F54                     u4711:
  8075  002F54  0E01               	movlw	1
  8076  002F56  EFAE  F017         	goto	u4720
  8077  002F5A                     u4710:
  8078  002F5A  0E00               	movlw	0
  8079  002F5C                     u4720:
  8080  002F5C  6E12               	movwf	_atoi$1128^0,c
  8081  002F5E  6A13               	clrf	(_atoi$1128+1)^0,c
  8082  002F60  5012               	movf	_atoi$1128^0,w,c
  8083  002F62  1013               	iorwf	(_atoi$1128+1)^0,w,c
  8084  002F64  A4D8               	btfss	status,2,c
  8085  002F66  EFB7  F017         	goto	u4731
  8086  002F6A  EFB9  F017         	goto	u4730
  8087  002F6E                     u4731:
  8088  002F6E  EF76  F017         	goto	l4067
  8089  002F72                     u4730:
  8090  002F72  500E               	movf	atoi@neg^0,w,c
  8091  002F74  100F               	iorwf	(atoi@neg+1)^0,w,c
  8092  002F76  A4D8               	btfss	status,2,c
  8093  002F78  EFC0  F017         	goto	u4741
  8094  002F7C  EFC2  F017         	goto	u4740
  8095  002F80                     u4741:
  8096  002F80  EFD0  F017         	goto	l1085
  8097  002F84                     u4740:
  8098  002F84  C015  F00A         	movff	atoi@n,??_atoi
  8099  002F88  C016  F00B         	movff	atoi@n+1,??_atoi+1
  8100  002F8C  1E0A               	comf	??_atoi^0,f,c
  8101  002F8E  1E0B               	comf	(??_atoi+1)^0,f,c
  8102  002F90  4A0A               	infsnz	??_atoi^0,f,c
  8103  002F92  2A0B               	incf	(??_atoi+1)^0,f,c
  8104  002F94  C00A  F008         	movff	??_atoi,?_atoi
  8105  002F98  C00B  F009         	movff	??_atoi+1,?_atoi+1
  8106  002F9C  EFD4  F017         	goto	l1088
  8107  002FA0                     l1085:
  8108  002FA0  C015  F008         	movff	atoi@n,?_atoi
  8109  002FA4  C016  F009         	movff	atoi@n+1,?_atoi+1
  8110  002FA8                     l1088:
  8111  002FA8  0012               	return		;funcret
  8112  002FAA                     __end_of_atoi:
  8113                           	opt callstack 0
  8114                           
  8115 ;; *************** function _isspace *****************
  8116 ;; Defined at:
  8117 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  8118 ;; Parameters:    Size  Location     Type
  8119 ;;  c               2    0[COMRAM] int 
  8120 ;; Auto vars:     Size  Location     Type
  8121 ;;		None
  8122 ;; Return value:  Size  Location     Type
  8123 ;;                  2    0[COMRAM] int 
  8124 ;; Registers used:
  8125 ;;		wreg, status,2, status,0
  8126 ;; Tracked objects:
  8127 ;;		On entry : 0/0
  8128 ;;		On exit  : 0/0
  8129 ;;		Unchanged: 0/0
  8130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8131 ;;      Params:         2       0       0       0       0       0       0       0       0
  8132 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8133 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8134 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8135 ;;Total ram usage:        7 bytes
  8136 ;; Hardware stack levels used:    1
  8137 ;; This function calls:
  8138 ;;		Nothing
  8139 ;; This function is called by:
  8140 ;;		_atoi
  8141 ;; This function uses a non-reentrant model
  8142 ;;
  8143                           
  8144                           	psect	text27
  8145  003A5C                     __ptext27:
  8146                           	opt callstack 0
  8147  003A5C                     _isspace:
  8148                           	opt callstack 26
  8149  003A5C  0E01               	movlw	1
  8150  003A5E  6E07               	movwf	_isspace$1157^0,c
  8151  003A60  0E20               	movlw	32
  8152  003A62  1801               	xorwf	isspace@c^0,w,c
  8153  003A64  1002               	iorwf	(isspace@c+1)^0,w,c
  8154  003A66  B4D8               	btfsc	status,2,c
  8155  003A68  EF38  F01D         	goto	u4141
  8156  003A6C  EF3A  F01D         	goto	u4140
  8157  003A70                     u4141:
  8158  003A70  EF53  F01D         	goto	l3739
  8159  003A74                     u4140:
  8160  003A74  0EF7               	movlw	247
  8161  003A76  6E03               	movwf	??_isspace^0,c
  8162  003A78  0EFF               	movlw	255
  8163  003A7A  6E04               	movwf	(??_isspace+1)^0,c
  8164  003A7C  C001  F005         	movff	isspace@c,??_isspace+2
  8165  003A80  C002  F006         	movff	isspace@c+1,??_isspace+3
  8166  003A84  5003               	movf	??_isspace^0,w,c
  8167  003A86  2605               	addwf	(??_isspace+2)^0,f,c
  8168  003A88  5004               	movf	(??_isspace+1)^0,w,c
  8169  003A8A  2206               	addwfc	(??_isspace+3)^0,f,c
  8170  003A8C  5006               	movf	(??_isspace+3)^0,w,c
  8171  003A8E  E109               	bnz	u4150
  8172  003A90  0E05               	movlw	5
  8173  003A92  5C05               	subwf	(??_isspace+2)^0,w,c
  8174  003A94  A0D8               	btfss	status,0,c
  8175  003A96  EF4F  F01D         	goto	u4151
  8176  003A9A  EF51  F01D         	goto	u4150
  8177  003A9E                     u4151:
  8178  003A9E  EF53  F01D         	goto	l3739
  8179  003AA2                     u4150:
  8180  003AA2  0E00               	movlw	0
  8181  003AA4  6E07               	movwf	_isspace$1157^0,c
  8182  003AA6                     l3739:
  8183  003AA6  C007  F001         	movff	_isspace$1157,?_isspace
  8184  003AAA  6A02               	clrf	(?_isspace+1)^0,c
  8185  003AAC  0012               	return		;funcret
  8186  003AAE                     __end_of_isspace:
  8187                           	opt callstack 0
  8188                           
  8189 ;; *************** function _isdigit *****************
  8190 ;; Defined at:
  8191 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  8192 ;; Parameters:    Size  Location     Type
  8193 ;;  c               2    0[COMRAM] int 
  8194 ;; Auto vars:     Size  Location     Type
  8195 ;;		None
  8196 ;; Return value:  Size  Location     Type
  8197 ;;                  2    0[COMRAM] int 
  8198 ;; Registers used:
  8199 ;;		wreg, status,2, status,0
  8200 ;; Tracked objects:
  8201 ;;		On entry : 0/0
  8202 ;;		On exit  : 0/0
  8203 ;;		Unchanged: 0/0
  8204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8205 ;;      Params:         2       0       0       0       0       0       0       0       0
  8206 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8207 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8208 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8209 ;;Total ram usage:        6 bytes
  8210 ;; Hardware stack levels used:    1
  8211 ;; This function calls:
  8212 ;;		Nothing
  8213 ;; This function is called by:
  8214 ;;		_vfpfcnvrt
  8215 ;;		_atoi
  8216 ;; This function uses a non-reentrant model
  8217 ;;
  8218                           
  8219                           	psect	text28
  8220  003CC6                     __ptext28:
  8221                           	opt callstack 0
  8222  003CC6                     _isdigit:
  8223                           	opt callstack 27
  8224  003CC6  0ED0               	movlw	208
  8225  003CC8  6E03               	movwf	??_isdigit^0,c
  8226  003CCA  0EFF               	movlw	255
  8227  003CCC  6E04               	movwf	(??_isdigit+1)^0,c
  8228  003CCE  C001  F005         	movff	isdigit@c,??_isdigit+2
  8229  003CD2  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  8230  003CD6  5003               	movf	??_isdigit^0,w,c
  8231  003CD8  2605               	addwf	(??_isdigit+2)^0,f,c
  8232  003CDA  5004               	movf	(??_isdigit+1)^0,w,c
  8233  003CDC  2206               	addwfc	(??_isdigit+3)^0,f,c
  8234  003CDE  5006               	movf	(??_isdigit+3)^0,w,c
  8235  003CE0  E10A               	bnz	u3420
  8236  003CE2  0E0A               	movlw	10
  8237  003CE4  5C05               	subwf	(??_isdigit+2)^0,w,c
  8238  003CE6  A0D8               	btfss	status,0,c
  8239  003CE8  EF78  F01E         	goto	u3421
  8240  003CEC  EF7B  F01E         	goto	u3420
  8241  003CF0                     u3421:
  8242  003CF0  0E01               	movlw	1
  8243  003CF2  EF7C  F01E         	goto	u3430
  8244  003CF6                     u3420:
  8245  003CF6  0E00               	movlw	0
  8246  003CF8                     u3430:
  8247  003CF8  6E01               	movwf	?_isdigit^0,c
  8248  003CFA  6A02               	clrf	(?_isdigit+1)^0,c
  8249  003CFC  0012               	return		;funcret
  8250  003CFE                     __end_of_isdigit:
  8251                           	opt callstack 0
  8252                           
  8253 ;; *************** function ___wmul *****************
  8254 ;; Defined at:
  8255 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  8256 ;; Parameters:    Size  Location     Type
  8257 ;;  multiplier      2    0[COMRAM] unsigned int 
  8258 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8259 ;; Auto vars:     Size  Location     Type
  8260 ;;  product         2    4[COMRAM] unsigned int 
  8261 ;; Return value:  Size  Location     Type
  8262 ;;                  2    0[COMRAM] unsigned int 
  8263 ;; Registers used:
  8264 ;;		wreg, status,2, status,0, prodl, prodh
  8265 ;; Tracked objects:
  8266 ;;		On entry : 0/0
  8267 ;;		On exit  : 0/0
  8268 ;;		Unchanged: 0/0
  8269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8270 ;;      Params:         4       0       0       0       0       0       0       0       0
  8271 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8272 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8273 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8274 ;;Total ram usage:        6 bytes
  8275 ;; Hardware stack levels used:    1
  8276 ;; This function calls:
  8277 ;;		Nothing
  8278 ;; This function is called by:
  8279 ;;		_atoi
  8280 ;; This function uses a non-reentrant model
  8281 ;;
  8282                           
  8283                           	psect	text29
  8284  003D8C                     __ptext29:
  8285                           	opt callstack 0
  8286  003D8C                     ___wmul:
  8287                           	opt callstack 26
  8288  003D8C  5001               	movf	___wmul@multiplier^0,w,c
  8289  003D8E  0203               	mulwf	___wmul@multiplicand^0,c
  8290  003D90  CFF3 F005          	movff	prodl,___wmul@product
  8291  003D94  CFF4 F006          	movff	prodh,___wmul@product+1
  8292  003D98  5001               	movf	___wmul@multiplier^0,w,c
  8293  003D9A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8294  003D9C  50F3               	movf	243,w,c
  8295  003D9E  2606               	addwf	(___wmul@product+1)^0,f,c
  8296  003DA0  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8297  003DA2  0203               	mulwf	___wmul@multiplicand^0,c
  8298  003DA4  50F3               	movf	243,w,c
  8299  003DA6  2606               	addwf	(___wmul@product+1)^0,f,c
  8300  003DA8  C005  F001         	movff	___wmul@product,?___wmul
  8301  003DAC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8302  003DB0  0012               	return		;funcret
  8303  003DB2                     __end_of___wmul:
  8304                           	opt callstack 0
  8305                           
  8306 ;; *************** function _putrsXLCD *****************
  8307 ;; Defined at:
  8308 ;;		line 138 in file "LCD_libreria.c"
  8309 ;; Parameters:    Size  Location     Type
  8310 ;;  buffer          2    1[COMRAM] PTR const unsigned char 
  8311 ;;		 -> STR_10(16), STR_8(16), datos(20), STR_6(16), 
  8312 ;;		 -> STR_5(15), STR_4(15), STR_3(15), STR_2(15), 
  8313 ;;		 -> STR_1(18), 
  8314 ;; Auto vars:     Size  Location     Type
  8315 ;;		None
  8316 ;; Return value:  Size  Location     Type
  8317 ;;                  1    wreg      void 
  8318 ;; Registers used:
  8319 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8320 ;; Tracked objects:
  8321 ;;		On entry : 0/0
  8322 ;;		On exit  : 0/0
  8323 ;;		Unchanged: 0/0
  8324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8325 ;;      Params:         2       0       0       0       0       0       0       0       0
  8326 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8327 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8328 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8329 ;;Total ram usage:        2 bytes
  8330 ;; Hardware stack levels used:    1
  8331 ;; Hardware stack levels required when called:    3
  8332 ;; This function calls:
  8333 ;;		_BusyXLCD
  8334 ;;		_WriteDataXLCD
  8335 ;; This function is called by:
  8336 ;;		_main
  8337 ;; This function uses a non-reentrant model
  8338 ;;
  8339                           
  8340                           	psect	text30
  8341  003820                     __ptext30:
  8342                           	opt callstack 0
  8343  003820                     _putrsXLCD:
  8344                           	opt callstack 27
  8345  003820                     
  8346                           ;LCD_libreria.c: 138: void putrsXLCD(const char *buffer);LCD_libreria.c: 139: {;LCD_libr
      +                          eria.c: 140:         while(*buffer)
  8347  003820  EF30  F01C         	goto	l4407
  8348  003824                     l4401:
  8349  003824  ECC7  F01D         	call	_BusyXLCD	;wreg free
  8350  003828  0900               	iorlw	0
  8351  00382A  A4D8               	btfss	status,2,c
  8352  00382C  EF1A  F01C         	goto	u5081
  8353  003830  EF1C  F01C         	goto	u5080
  8354  003834                     u5081:
  8355  003834  EF12  F01C         	goto	l4401
  8356  003838                     u5080:
  8357  003838                     
  8358                           ;LCD_libreria.c: 143:                 WriteDataXLCD(*buffer);
  8359  003838  C002  FFF6         	movff	putrsXLCD@buffer,tblptrl
  8360  00383C  C003  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  8361  003840  6AF8               	clrf	tblptru,c
  8362  003842  0E07               	movlw	(high __ramtop+-1)
  8363  003844  64F7               	cpfsgt	tblptrh,c
  8364  003846  D003               	bra	u5097
  8365  003848  0008               	tblrd		*
  8366  00384A  50F5               	movf	tablat,w,c
  8367  00384C  D005               	bra	u5090
  8368  00384E                     u5097:
  8369  00384E  CFF6 FFE9          	movff	tblptrl,fsr0l
  8370  003852  CFF7 FFEA          	movff	tblptrh,fsr0h
  8371  003856  50EF               	movf	indf0,w,c
  8372  003858                     u5090:
  8373  003858  EC57  F01D         	call	_WriteDataXLCD
  8374  00385C                     
  8375                           ;LCD_libreria.c: 144:                 buffer++;
  8376  00385C  4A02               	infsnz	putrsXLCD@buffer^0,f,c
  8377  00385E  2A03               	incf	(putrsXLCD@buffer+1)^0,f,c
  8378  003860                     l4407:
  8379                           
  8380                           ;LCD_libreria.c: 140:         while(*buffer)
  8381  003860  C002  FFF6         	movff	putrsXLCD@buffer,tblptrl
  8382  003864  C003  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  8383  003868  6AF8               	clrf	tblptru,c
  8384  00386A  0E07               	movlw	(high __ramtop+-1)
  8385  00386C  64F7               	cpfsgt	tblptrh,c
  8386  00386E  D003               	bra	u5107
  8387  003870  0008               	tblrd		*
  8388  003872  50F5               	movf	tablat,w,c
  8389  003874  D005               	bra	u5100
  8390  003876                     u5107:
  8391  003876  CFF6 FFE9          	movff	tblptrl,fsr0l
  8392  00387A  CFF7 FFEA          	movff	tblptrh,fsr0h
  8393  00387E  50EF               	movf	indf0,w,c
  8394  003880                     u5100:
  8395  003880  0900               	iorlw	0
  8396  003882  A4D8               	btfss	status,2,c
  8397  003884  EF46  F01C         	goto	u5111
  8398  003888  EF48  F01C         	goto	u5110
  8399  00388C                     u5111:
  8400  00388C  EF12  F01C         	goto	l4401
  8401  003890                     u5110:
  8402  003890  0012               	return		;funcret
  8403  003892                     __end_of_putrsXLCD:
  8404                           	opt callstack 0
  8405                           
  8406 ;; *************** function _WriteDataXLCD *****************
  8407 ;; Defined at:
  8408 ;;		line 395 in file "LCD_libreria.c"
  8409 ;; Parameters:    Size  Location     Type
  8410 ;;  data            1    wreg     unsigned char 
  8411 ;; Auto vars:     Size  Location     Type
  8412 ;;  data            1    0[COMRAM] unsigned char 
  8413 ;; Return value:  Size  Location     Type
  8414 ;;                  1    wreg      void 
  8415 ;; Registers used:
  8416 ;;		wreg, status,2, status,0, cstack
  8417 ;; Tracked objects:
  8418 ;;		On entry : 0/0
  8419 ;;		On exit  : 0/0
  8420 ;;		Unchanged: 0/0
  8421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8422 ;;      Params:         0       0       0       0       0       0       0       0       0
  8423 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8424 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8425 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8426 ;;Total ram usage:        1 bytes
  8427 ;; Hardware stack levels used:    1
  8428 ;; Hardware stack levels required when called:    2
  8429 ;; This function calls:
  8430 ;;		_BusyXLCD
  8431 ;;		_DelayFor18TCY
  8432 ;; This function is called by:
  8433 ;;		_putrsXLCD
  8434 ;;		_LCD_WriteChr_CGRAM
  8435 ;;		_putsXLCD
  8436 ;; This function uses a non-reentrant model
  8437 ;;
  8438                           
  8439                           	psect	text31
  8440  003AAE                     __ptext31:
  8441                           	opt callstack 0
  8442  003AAE                     _WriteDataXLCD:
  8443                           	opt callstack 27
  8444                           
  8445                           ;incstack = 0
  8446                           ;WriteDataXLCD@data stored from wreg
  8447  003AAE  6E01               	movwf	WriteDataXLCD@data^0,c
  8448  003AB0                     l4285:
  8449  003AB0  ECC7  F01D         	call	_BusyXLCD	;wreg free
  8450  003AB4  0900               	iorlw	0
  8451  003AB6  A4D8               	btfss	status,2,c
  8452  003AB8  EF60  F01D         	goto	u4961
  8453  003ABC  EF62  F01D         	goto	u4960
  8454  003AC0                     u4961:
  8455  003AC0  EF58  F01D         	goto	l4285
  8456  003AC4                     u4960:
  8457  003AC4                     
  8458                           ;LCD_libreria.c: 415:         TRISD &= 0xf0;
  8459  003AC4  0EF0               	movlw	240
  8460  003AC6  1695               	andwf	149,f,c	;volatile
  8461                           
  8462                           ;LCD_libreria.c: 416:         PORTD &= 0xf0;
  8463  003AC8  0EF0               	movlw	240
  8464  003ACA  1683               	andwf	131,f,c	;volatile
  8465                           
  8466                           ;LCD_libreria.c: 417:         PORTD |= ((data>>4)&0x0f);
  8467  003ACC  3801               	swapf	WriteDataXLCD@data^0,w,c
  8468  003ACE  0B0F               	andlw	15
  8469  003AD0  0B0F               	andlw	15
  8470  003AD2  1283               	iorwf	131,f,c	;volatile
  8471  003AD4                     
  8472                           ;LCD_libreria.c: 419:         LATDbits.LATD5 = 1;
  8473  003AD4  8A8C               	bsf	140,5,c	;volatile
  8474  003AD6                     
  8475                           ;LCD_libreria.c: 420:         LATDbits.LATD6 = 0;
  8476  003AD6  9C8C               	bcf	140,6,c	;volatile
  8477  003AD8                     
  8478                           ;LCD_libreria.c: 421:         DelayFor18TCY();
  8479  003AD8  ECFC  F01E         	call	_DelayFor18TCY	;wreg free
  8480  003ADC                     
  8481                           ;LCD_libreria.c: 422:         LATDbits.LATD4 = 1;
  8482  003ADC  888C               	bsf	140,4,c	;volatile
  8483  003ADE                     
  8484                           ;LCD_libreria.c: 423:         DelayFor18TCY();
  8485  003ADE  ECFC  F01E         	call	_DelayFor18TCY	;wreg free
  8486  003AE2                     
  8487                           ;LCD_libreria.c: 424:         LATDbits.LATD4 = 0;
  8488  003AE2  988C               	bcf	140,4,c	;volatile
  8489                           
  8490                           ;LCD_libreria.c: 429:         PORTD &= 0xf0;
  8491  003AE4  0EF0               	movlw	240
  8492  003AE6  1683               	andwf	131,f,c	;volatile
  8493                           
  8494                           ;LCD_libreria.c: 430:         PORTD |= (data&0x0f);
  8495  003AE8  5001               	movf	WriteDataXLCD@data^0,w,c
  8496  003AEA  0B0F               	andlw	15
  8497  003AEC  1283               	iorwf	131,f,c	;volatile
  8498  003AEE                     
  8499                           ;LCD_libreria.c: 432:         DelayFor18TCY();
  8500  003AEE  ECFC  F01E         	call	_DelayFor18TCY	;wreg free
  8501  003AF2                     
  8502                           ;LCD_libreria.c: 433:         LATDbits.LATD4 = 1;
  8503  003AF2  888C               	bsf	140,4,c	;volatile
  8504  003AF4                     
  8505                           ;LCD_libreria.c: 434:         DelayFor18TCY();
  8506  003AF4  ECFC  F01E         	call	_DelayFor18TCY	;wreg free
  8507  003AF8                     
  8508                           ;LCD_libreria.c: 435:         LATDbits.LATD4 = 0;
  8509  003AF8  988C               	bcf	140,4,c	;volatile
  8510                           
  8511                           ;LCD_libreria.c: 439:         TRISD |= 0x0f;
  8512  003AFA  0E0F               	movlw	15
  8513  003AFC  1295               	iorwf	149,f,c	;volatile
  8514  003AFE  0012               	return		;funcret
  8515  003B00                     __end_of_WriteDataXLCD:
  8516                           	opt callstack 0
  8517                           
  8518 ;; *************** function ___xxtofl *****************
  8519 ;; Defined at:
  8520 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  8521 ;; Parameters:    Size  Location     Type
  8522 ;;  sign            1    wreg     unsigned char 
  8523 ;;  val             4    0[COMRAM] long 
  8524 ;; Auto vars:     Size  Location     Type
  8525 ;;  sign            1    8[COMRAM] unsigned char 
  8526 ;;  arg             4   10[COMRAM] unsigned long 
  8527 ;;  exp             1    9[COMRAM] unsigned char 
  8528 ;; Return value:  Size  Location     Type
  8529 ;;                  4    0[COMRAM] unsigned char 
  8530 ;; Registers used:
  8531 ;;		wreg, status,2, status,0
  8532 ;; Tracked objects:
  8533 ;;		On entry : 0/0
  8534 ;;		On exit  : 0/0
  8535 ;;		Unchanged: 0/0
  8536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8537 ;;      Params:         4       0       0       0       0       0       0       0       0
  8538 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8539 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8540 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8541 ;;Total ram usage:       14 bytes
  8542 ;; Hardware stack levels used:    1
  8543 ;; This function calls:
  8544 ;;		Nothing
  8545 ;; This function is called by:
  8546 ;;		_main
  8547 ;; This function uses a non-reentrant model
  8548 ;;
  8549                           
  8550                           	psect	text32
  8551  002C66                     __ptext32:
  8552                           	opt callstack 0
  8553  002C66                     ___xxtofl:
  8554                           	opt callstack 30
  8555                           
  8556                           ;incstack = 0
  8557                           ;___xxtofl@sign stored from wreg
  8558  002C66  6E09               	movwf	___xxtofl@sign^0,c
  8559  002C68  5009               	movf	___xxtofl@sign^0,w,c
  8560  002C6A  B4D8               	btfsc	status,2,c
  8561  002C6C  EF3A  F016         	goto	u5131
  8562  002C70  EF3C  F016         	goto	u5130
  8563  002C74                     u5131:
  8564  002C74  EF5E  F016         	goto	l1030
  8565  002C78                     u5130:
  8566  002C78  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8567  002C7A  EF43  F016         	goto	u5140
  8568  002C7E  EF41  F016         	goto	u5141
  8569  002C82                     u5141:
  8570  002C82  EF5E  F016         	goto	l1030
  8571  002C86                     u5140:
  8572  002C86  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8573  002C8A  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8574  002C8E  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8575  002C92  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8576  002C96  1E05               	comf	??___xxtofl^0,f,c
  8577  002C98  1E06               	comf	(??___xxtofl+1)^0,f,c
  8578  002C9A  1E07               	comf	(??___xxtofl+2)^0,f,c
  8579  002C9C  1E08               	comf	(??___xxtofl+3)^0,f,c
  8580  002C9E  2A05               	incf	??___xxtofl^0,f,c
  8581  002CA0  0E00               	movlw	0
  8582  002CA2  2206               	addwfc	(??___xxtofl+1)^0,f,c
  8583  002CA4  2207               	addwfc	(??___xxtofl+2)^0,f,c
  8584  002CA6  2208               	addwfc	(??___xxtofl+3)^0,f,c
  8585  002CA8  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8586  002CAC  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8587  002CB0  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8588  002CB4  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8589  002CB8  EF66  F016         	goto	l4437
  8590  002CBC                     l1030:
  8591  002CBC  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8592  002CC0  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8593  002CC4  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8594  002CC8  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8595  002CCC                     l4437:
  8596  002CCC  5001               	movf	___xxtofl@val^0,w,c
  8597  002CCE  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  8598  002CD0  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  8599  002CD2  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  8600  002CD4  A4D8               	btfss	status,2,c
  8601  002CD6  EF6F  F016         	goto	u5151
  8602  002CDA  EF71  F016         	goto	u5150
  8603  002CDE                     u5151:
  8604  002CDE  EF7B  F016         	goto	l4443
  8605  002CE2                     u5150:
  8606  002CE2  0E00               	movlw	0
  8607  002CE4  6E01               	movwf	?___xxtofl^0,c
  8608  002CE6  0E00               	movlw	0
  8609  002CE8  6E02               	movwf	(?___xxtofl+1)^0,c
  8610  002CEA  0E00               	movlw	0
  8611  002CEC  6E03               	movwf	(?___xxtofl+2)^0,c
  8612  002CEE  0E00               	movlw	0
  8613  002CF0  6E04               	movwf	(?___xxtofl+3)^0,c
  8614  002CF2  EF0C  F017         	goto	l1033
  8615  002CF6                     l4443:
  8616  002CF6  0E96               	movlw	150
  8617  002CF8  6E0A               	movwf	___xxtofl@exp^0,c
  8618  002CFA  EF85  F016         	goto	l4447
  8619  002CFE                     l4445:
  8620  002CFE  2A0A               	incf	___xxtofl@exp^0,f,c
  8621  002D00  90D8               	bcf	status,0,c
  8622  002D02  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8623  002D04  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8624  002D06  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8625  002D08  320B               	rrcf	___xxtofl@arg^0,f,c
  8626  002D0A                     l4447:
  8627  002D0A  0E00               	movlw	0
  8628  002D0C  140B               	andwf	___xxtofl@arg^0,w,c
  8629  002D0E  6E05               	movwf	??___xxtofl^0,c
  8630  002D10  0E00               	movlw	0
  8631  002D12  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8632  002D14  6E06               	movwf	(??___xxtofl+1)^0,c
  8633  002D16  0E00               	movlw	0
  8634  002D18  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8635  002D1A  6E07               	movwf	(??___xxtofl+2)^0,c
  8636  002D1C  0EFE               	movlw	254
  8637  002D1E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8638  002D20  6E08               	movwf	(??___xxtofl+3)^0,c
  8639  002D22  5005               	movf	??___xxtofl^0,w,c
  8640  002D24  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8641  002D26  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8642  002D28  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8643  002D2A  A4D8               	btfss	status,2,c
  8644  002D2C  EF9A  F016         	goto	u5161
  8645  002D30  EF9C  F016         	goto	u5160
  8646  002D34                     u5161:
  8647  002D34  EF7F  F016         	goto	l4445
  8648  002D38                     u5160:
  8649  002D38  EFAA  F016         	goto	l1037
  8650  002D3C                     l4449:
  8651  002D3C  2A0A               	incf	___xxtofl@exp^0,f,c
  8652  002D3E  0E01               	movlw	1
  8653  002D40  260B               	addwf	___xxtofl@arg^0,f,c
  8654  002D42  0E00               	movlw	0
  8655  002D44  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  8656  002D46  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  8657  002D48  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  8658  002D4A  90D8               	bcf	status,0,c
  8659  002D4C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8660  002D4E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8661  002D50  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8662  002D52  320B               	rrcf	___xxtofl@arg^0,f,c
  8663  002D54                     l1037:
  8664  002D54  0E00               	movlw	0
  8665  002D56  140B               	andwf	___xxtofl@arg^0,w,c
  8666  002D58  6E05               	movwf	??___xxtofl^0,c
  8667  002D5A  0E00               	movlw	0
  8668  002D5C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8669  002D5E  6E06               	movwf	(??___xxtofl+1)^0,c
  8670  002D60  0E00               	movlw	0
  8671  002D62  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8672  002D64  6E07               	movwf	(??___xxtofl+2)^0,c
  8673  002D66  0EFF               	movlw	255
  8674  002D68  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8675  002D6A  6E08               	movwf	(??___xxtofl+3)^0,c
  8676  002D6C  5005               	movf	??___xxtofl^0,w,c
  8677  002D6E  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8678  002D70  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8679  002D72  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8680  002D74  A4D8               	btfss	status,2,c
  8681  002D76  EFBF  F016         	goto	u5171
  8682  002D7A  EFC1  F016         	goto	u5170
  8683  002D7E                     u5171:
  8684  002D7E  EF9E  F016         	goto	l4449
  8685  002D82                     u5170:
  8686  002D82  EFC9  F016         	goto	l4457
  8687  002D86                     l4455:
  8688  002D86  060A               	decf	___xxtofl@exp^0,f,c
  8689  002D88  90D8               	bcf	status,0,c
  8690  002D8A  360B               	rlcf	___xxtofl@arg^0,f,c
  8691  002D8C  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  8692  002D8E  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  8693  002D90  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  8694  002D92                     l4457:
  8695  002D92  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  8696  002D94  EFCE  F016         	goto	u5181
  8697  002D98  EFD0  F016         	goto	u5180
  8698  002D9C                     u5181:
  8699  002D9C  EFD8  F016         	goto	l1044
  8700  002DA0                     u5180:
  8701  002DA0  0E02               	movlw	2
  8702  002DA2  600A               	cpfslt	___xxtofl@exp^0,c
  8703  002DA4  EFD6  F016         	goto	u5191
  8704  002DA8  EFD8  F016         	goto	u5190
  8705  002DAC                     u5191:
  8706  002DAC  EFC3  F016         	goto	l4455
  8707  002DB0                     u5190:
  8708  002DB0                     l1044:
  8709  002DB0  B00A               	btfsc	___xxtofl@exp^0,0,c
  8710  002DB2  EFDD  F016         	goto	u5201
  8711  002DB6  EFDF  F016         	goto	u5200
  8712  002DBA                     u5201:
  8713  002DBA  EFE0  F016         	goto	l4463
  8714  002DBE                     u5200:
  8715  002DBE  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  8716  002DC0                     l4463:
  8717  002DC0  90D8               	bcf	status,0,c
  8718  002DC2  320A               	rrcf	___xxtofl@exp^0,f,c
  8719  002DC4  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8720  002DC8  6A06               	clrf	(??___xxtofl+1)^0,c
  8721  002DCA  6A07               	clrf	(??___xxtofl+2)^0,c
  8722  002DCC  6A08               	clrf	(??___xxtofl+3)^0,c
  8723  002DCE  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8724  002DD2  6A07               	clrf	(??___xxtofl+2)^0,c
  8725  002DD4  6A06               	clrf	(??___xxtofl+1)^0,c
  8726  002DD6  6A05               	clrf	??___xxtofl^0,c
  8727  002DD8  5005               	movf	??___xxtofl^0,w,c
  8728  002DDA  120B               	iorwf	___xxtofl@arg^0,f,c
  8729  002DDC  5006               	movf	(??___xxtofl+1)^0,w,c
  8730  002DDE  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  8731  002DE0  5007               	movf	(??___xxtofl+2)^0,w,c
  8732  002DE2  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  8733  002DE4  5008               	movf	(??___xxtofl+3)^0,w,c
  8734  002DE6  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  8735  002DE8  5009               	movf	___xxtofl@sign^0,w,c
  8736  002DEA  B4D8               	btfsc	status,2,c
  8737  002DEC  EFFA  F016         	goto	u5211
  8738  002DF0  EFFC  F016         	goto	u5210
  8739  002DF4                     u5211:
  8740  002DF4  EF04  F017         	goto	l4473
  8741  002DF8                     u5210:
  8742  002DF8  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8743  002DFA  EF03  F017         	goto	u5220
  8744  002DFE  EF01  F017         	goto	u5221
  8745  002E02                     u5221:
  8746  002E02  EF04  F017         	goto	l4473
  8747  002E06                     u5220:
  8748  002E06  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  8749  002E08                     l4473:
  8750  002E08  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8751  002E0C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8752  002E10  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8753  002E14  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8754  002E18                     l1033:
  8755  002E18  0012               	return		;funcret
  8756  002E1A                     __end_of___xxtofl:
  8757                           	opt callstack 0
  8758                           
  8759 ;; *************** function _Port_Init *****************
  8760 ;; Defined at:
  8761 ;;		line 25 in file "Main_Program.c"
  8762 ;; Parameters:    Size  Location     Type
  8763 ;;		None
  8764 ;; Auto vars:     Size  Location     Type
  8765 ;;		None
  8766 ;; Return value:  Size  Location     Type
  8767 ;;                  1    wreg      void 
  8768 ;; Registers used:
  8769 ;;		wreg, status,2
  8770 ;; Tracked objects:
  8771 ;;		On entry : 0/0
  8772 ;;		On exit  : 0/0
  8773 ;;		Unchanged: 0/0
  8774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8775 ;;      Params:         0       0       0       0       0       0       0       0       0
  8776 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8777 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8778 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8779 ;;Total ram usage:        0 bytes
  8780 ;; Hardware stack levels used:    1
  8781 ;; This function calls:
  8782 ;;		Nothing
  8783 ;; This function is called by:
  8784 ;;		_main
  8785 ;; This function uses a non-reentrant model
  8786 ;;
  8787                           
  8788                           	psect	text33
  8789  003E22                     __ptext33:
  8790                           	opt callstack 0
  8791  003E22                     _Port_Init:
  8792                           	opt callstack 30
  8793  003E22                     
  8794                           ;Main_Program.c: 26:     TRISBbits.RB0 = 1;
  8795  003E22  8093               	bsf	147,0,c	;volatile
  8796                           
  8797                           ;Main_Program.c: 27:     TRISBbits.RB1 = 1;
  8798  003E24  8293               	bsf	147,1,c	;volatile
  8799                           
  8800                           ;Main_Program.c: 28:     TRISBbits.RB2 = 1;
  8801  003E26  8493               	bsf	147,2,c	;volatile
  8802                           
  8803                           ;Main_Program.c: 29:     INTCON2bits.RBPU = 0;
  8804  003E28  9EF1               	bcf	241,7,c	;volatile
  8805  003E2A                     
  8806                           ;Main_Program.c: 30:     TRISA = 1;
  8807  003E2A  0E01               	movlw	1
  8808  003E2C  6E92               	movwf	146,c	;volatile
  8809  003E2E  0012               	return		;funcret
  8810  003E30                     __end_of_Port_Init:
  8811                           	opt callstack 0
  8812                           
  8813 ;; *************** function _LCD_gotoXY *****************
  8814 ;; Defined at:
  8815 ;;		line 55 in file "LCD_libreria.c"
  8816 ;; Parameters:    Size  Location     Type
  8817 ;;  x               2    1[COMRAM] int 
  8818 ;;  y               2    3[COMRAM] int 
  8819 ;; Auto vars:     Size  Location     Type
  8820 ;;		None
  8821 ;; Return value:  Size  Location     Type
  8822 ;;                  1    wreg      void 
  8823 ;; Registers used:
  8824 ;;		wreg, status,2, status,0, cstack
  8825 ;; Tracked objects:
  8826 ;;		On entry : 0/0
  8827 ;;		On exit  : 0/0
  8828 ;;		Unchanged: 0/0
  8829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8830 ;;      Params:         4       0       0       0       0       0       0       0       0
  8831 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8832 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8833 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8834 ;;Total ram usage:        4 bytes
  8835 ;; Hardware stack levels used:    1
  8836 ;; Hardware stack levels required when called:    2
  8837 ;; This function calls:
  8838 ;;		_WriteCmdXLCD
  8839 ;; This function is called by:
  8840 ;;		_main
  8841 ;; This function uses a non-reentrant model
  8842 ;;
  8843                           
  8844                           	psect	text34
  8845  003D34                     __ptext34:
  8846                           	opt callstack 0
  8847  003D34                     _LCD_gotoXY:
  8848                           	opt callstack 28
  8849  003D34                     
  8850                           ;LCD_libreria.c: 55: void LCD_gotoXY(int x,int y);LCD_libreria.c: 56: {;LCD_libreria.c: 
      +                          57:     if ( x>0 ){WriteCmdXLCD(0b11000000 +y);}
  8851  003D34  BE03               	btfsc	(LCD_gotoXY@x+1)^0,7,c
  8852  003D36  EFA5  F01E         	goto	u5071
  8853  003D3A  5003               	movf	(LCD_gotoXY@x+1)^0,w,c
  8854  003D3C  E108               	bnz	u5070
  8855  003D3E  0402               	decf	LCD_gotoXY@x^0,w,c
  8856  003D40  A0D8               	btfss	status,0,c
  8857  003D42  EFA5  F01E         	goto	u5071
  8858  003D46  EFA7  F01E         	goto	u5070
  8859  003D4A                     u5071:
  8860  003D4A  EFAD  F01E         	goto	l4395
  8861  003D4E                     u5070:
  8862  003D4E  5004               	movf	LCD_gotoXY@y^0,w,c
  8863  003D50  0FC0               	addlw	192
  8864  003D52  EC0C  F01E         	call	_WriteCmdXLCD
  8865  003D56  EFB1  F01E         	goto	l56
  8866  003D5A                     l4395:
  8867  003D5A  5004               	movf	LCD_gotoXY@y^0,w,c
  8868  003D5C  0F80               	addlw	128
  8869  003D5E  EC0C  F01E         	call	_WriteCmdXLCD
  8870  003D62                     l56:
  8871  003D62  0012               	return		;funcret
  8872  003D64                     __end_of_LCD_gotoXY:
  8873                           	opt callstack 0
  8874                           
  8875 ;; *************** function _LCD_Init *****************
  8876 ;; Defined at:
  8877 ;;		line 18 in file "Main_Program.c"
  8878 ;; Parameters:    Size  Location     Type
  8879 ;;		None
  8880 ;; Auto vars:     Size  Location     Type
  8881 ;;		None
  8882 ;; Return value:  Size  Location     Type
  8883 ;;                  1    wreg      void 
  8884 ;; Registers used:
  8885 ;;		wreg, status,2, status,0, cstack
  8886 ;; Tracked objects:
  8887 ;;		On entry : 0/0
  8888 ;;		On exit  : 0/0
  8889 ;;		Unchanged: 0/0
  8890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8891 ;;      Params:         0       0       0       0       0       0       0       0       0
  8892 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8893 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8894 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8895 ;;Total ram usage:        0 bytes
  8896 ;; Hardware stack levels used:    1
  8897 ;; Hardware stack levels required when called:    3
  8898 ;; This function calls:
  8899 ;;		_BusyXLCD
  8900 ;;		_OpenXLCD
  8901 ;;		_WriteCmdXLCD
  8902 ;; This function is called by:
  8903 ;;		_main
  8904 ;; This function uses a non-reentrant model
  8905 ;;
  8906                           
  8907                           	psect	text35
  8908  003D64                     __ptext35:
  8909                           	opt callstack 0
  8910  003D64                     _LCD_Init:
  8911                           	opt callstack 27
  8912  003D64                     
  8913                           ;Main_Program.c: 19:     OpenXLCD(0b00101100 & 0b00111000);
  8914  003D64  0E28               	movlw	40
  8915  003D66  EC59  F019         	call	_OpenXLCD
  8916  003D6A                     l4411:
  8917  003D6A  ECC7  F01D         	call	_BusyXLCD	;wreg free
  8918  003D6E  0900               	iorlw	0
  8919  003D70  A4D8               	btfss	status,2,c
  8920  003D72  EFBD  F01E         	goto	u5121
  8921  003D76  EFBF  F01E         	goto	u5120
  8922  003D7A                     u5121:
  8923  003D7A  EFB5  F01E         	goto	l4411
  8924  003D7E                     u5120:
  8925  003D7E                     
  8926                           ;Main_Program.c: 21:     WriteCmdXLCD(0x06);
  8927  003D7E  0E06               	movlw	6
  8928  003D80  EC0C  F01E         	call	_WriteCmdXLCD
  8929                           
  8930                           ;Main_Program.c: 22:     WriteCmdXLCD(0x0C);
  8931  003D84  0E0C               	movlw	12
  8932  003D86  EC0C  F01E         	call	_WriteCmdXLCD
  8933  003D8A  0012               	return		;funcret
  8934  003D8C                     __end_of_LCD_Init:
  8935                           	opt callstack 0
  8936                           
  8937 ;; *************** function _OpenXLCD *****************
  8938 ;; Defined at:
  8939 ;;		line 74 in file "LCD_libreria.c"
  8940 ;; Parameters:    Size  Location     Type
  8941 ;;  lcdtype         1    wreg     unsigned char 
  8942 ;; Auto vars:     Size  Location     Type
  8943 ;;  lcdtype         1    4[COMRAM] unsigned char 
  8944 ;; Return value:  Size  Location     Type
  8945 ;;                  1    wreg      void 
  8946 ;; Registers used:
  8947 ;;		wreg, status,2, status,0, cstack
  8948 ;; Tracked objects:
  8949 ;;		On entry : 0/0
  8950 ;;		On exit  : 0/0
  8951 ;;		Unchanged: 0/0
  8952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8953 ;;      Params:         0       0       0       0       0       0       0       0       0
  8954 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8955 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8956 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8957 ;;Total ram usage:        1 bytes
  8958 ;; Hardware stack levels used:    1
  8959 ;; Hardware stack levels required when called:    2
  8960 ;; This function calls:
  8961 ;;		_BusyXLCD
  8962 ;;		_DelayPORXLCD
  8963 ;;		_SetDDRamAddr
  8964 ;;		_WriteCmdXLCD
  8965 ;; This function is called by:
  8966 ;;		_LCD_Init
  8967 ;; This function uses a non-reentrant model
  8968 ;;
  8969                           
  8970                           	psect	text36
  8971  0032B2                     __ptext36:
  8972                           	opt callstack 0
  8973  0032B2                     _OpenXLCD:
  8974                           	opt callstack 27
  8975                           
  8976                           ;incstack = 0
  8977                           ;OpenXLCD@lcdtype stored from wreg
  8978  0032B2  6E05               	movwf	OpenXLCD@lcdtype^0,c
  8979  0032B4                     
  8980                           ;LCD_libreria.c: 74: void OpenXLCD(unsigned char lcdtype);LCD_libreria.c: 75: {;LCD_libr
      +                          eria.c: 86:         PORTD &= 0xf0;
  8981  0032B4  0EF0               	movlw	240
  8982  0032B6  1683               	andwf	131,f,c	;volatile
  8983                           
  8984                           ;LCD_libreria.c: 87:         TRISD &= 0xF0;
  8985  0032B8  0EF0               	movlw	240
  8986  0032BA  1695               	andwf	149,f,c	;volatile
  8987  0032BC                     
  8988                           ;LCD_libreria.c: 90:         TRISDbits.TRISD6 = 0;
  8989  0032BC  9C95               	bcf	149,6,c	;volatile
  8990  0032BE                     
  8991                           ;LCD_libreria.c: 91:         TRISDbits.TRISD5 = 0;
  8992  0032BE  9A95               	bcf	149,5,c	;volatile
  8993  0032C0                     
  8994                           ;LCD_libreria.c: 92:         TRISDbits.TRISD4 = 0;
  8995  0032C0  9895               	bcf	149,4,c	;volatile
  8996  0032C2                     
  8997                           ;LCD_libreria.c: 93:         LATDbits.LATD6 = 0;
  8998  0032C2  9C8C               	bcf	140,6,c	;volatile
  8999  0032C4                     
  9000                           ;LCD_libreria.c: 94:         LATDbits.LATD5 = 0;
  9001  0032C4  9A8C               	bcf	140,5,c	;volatile
  9002  0032C6                     
  9003                           ;LCD_libreria.c: 95:         LATDbits.LATD4 = 0;
  9004  0032C6  988C               	bcf	140,4,c	;volatile
  9005  0032C8                     
  9006                           ;LCD_libreria.c: 98:         DelayPORXLCD();
  9007  0032C8  EC09  F01F         	call	_DelayPORXLCD	;wreg free
  9008  0032CC                     
  9009                           ;LCD_libreria.c: 100:    WriteCmdXLCD(0x30);
  9010  0032CC  0E30               	movlw	48
  9011  0032CE  EC0C  F01E         	call	_WriteCmdXLCD
  9012  0032D2                     
  9013                           ;LCD_libreria.c: 101:          _delay((unsigned long)((1)*(20000000L/4000000.0)));
  9014  0032D2  D000               	nop2		;2 cycle nop
  9015  0032D4  D000               	nop2		;2 cycle nop
  9016  0032D6  F000               	nop	
  9017  0032D8                     
  9018                           ;LCD_libreria.c: 103:    WriteCmdXLCD(0x30);
  9019  0032D8  0E30               	movlw	48
  9020  0032DA  EC0C  F01E         	call	_WriteCmdXLCD
  9021  0032DE                     
  9022                           ;LCD_libreria.c: 104:    _delay((unsigned long)((1)*(20000000L/4000000.0)));
  9023  0032DE  D000               	nop2		;2 cycle nop
  9024  0032E0  D000               	nop2		;2 cycle nop
  9025  0032E2  F000               	nop	
  9026  0032E4                     
  9027                           ;LCD_libreria.c: 107:    WriteCmdXLCD(0x32);
  9028  0032E4  0E32               	movlw	50
  9029  0032E6  EC0C  F01E         	call	_WriteCmdXLCD
  9030  0032EA                     l4337:
  9031  0032EA  ECC7  F01D         	call	_BusyXLCD	;wreg free
  9032  0032EE  0900               	iorlw	0
  9033  0032F0  A4D8               	btfss	status,2,c
  9034  0032F2  EF7D  F019         	goto	u4971
  9035  0032F6  EF7F  F019         	goto	u4970
  9036  0032FA                     u4971:
  9037  0032FA  EF75  F019         	goto	l4337
  9038  0032FE                     u4970:
  9039  0032FE                     l4339:
  9040  0032FE  ECC7  F01D         	call	_BusyXLCD	;wreg free
  9041  003302  0900               	iorlw	0
  9042  003304  A4D8               	btfss	status,2,c
  9043  003306  EF87  F019         	goto	u4981
  9044  00330A  EF89  F019         	goto	u4980
  9045  00330E                     u4981:
  9046  00330E  EF7F  F019         	goto	l4339
  9047  003312                     u4980:
  9048  003312                     
  9049                           ;LCD_libreria.c: 114:         WriteCmdXLCD(lcdtype);
  9050  003312  5005               	movf	OpenXLCD@lcdtype^0,w,c
  9051  003314  EC0C  F01E         	call	_WriteCmdXLCD
  9052  003318                     l4343:
  9053  003318  ECC7  F01D         	call	_BusyXLCD	;wreg free
  9054  00331C  0900               	iorlw	0
  9055  00331E  A4D8               	btfss	status,2,c
  9056  003320  EF94  F019         	goto	u4991
  9057  003324  EF96  F019         	goto	u4990
  9058  003328                     u4991:
  9059  003328  EF8C  F019         	goto	l4343
  9060  00332C                     u4990:
  9061  00332C                     
  9062                           ;LCD_libreria.c: 118:         WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  9063  00332C  0E08               	movlw	8
  9064  00332E  EC0C  F01E         	call	_WriteCmdXLCD
  9065  003332                     l4347:
  9066  003332  ECC7  F01D         	call	_BusyXLCD	;wreg free
  9067  003336  0900               	iorlw	0
  9068  003338  A4D8               	btfss	status,2,c
  9069  00333A  EFA1  F019         	goto	u5001
  9070  00333E  EFA3  F019         	goto	u5000
  9071  003342                     u5001:
  9072  003342  EF99  F019         	goto	l4347
  9073  003346                     u5000:
  9074  003346                     
  9075                           ;LCD_libreria.c: 120:         WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  9076  003346  0E0F               	movlw	15
  9077  003348  EC0C  F01E         	call	_WriteCmdXLCD
  9078  00334C                     l4351:
  9079  00334C  ECC7  F01D         	call	_BusyXLCD	;wreg free
  9080  003350  0900               	iorlw	0
  9081  003352  A4D8               	btfss	status,2,c
  9082  003354  EFAE  F019         	goto	u5011
  9083  003358  EFB0  F019         	goto	u5010
  9084  00335C                     u5011:
  9085  00335C  EFA6  F019         	goto	l4351
  9086  003360                     u5010:
  9087  003360                     
  9088                           ;LCD_libreria.c: 124:         WriteCmdXLCD(0x01);
  9089  003360  0E01               	movlw	1
  9090  003362  EC0C  F01E         	call	_WriteCmdXLCD
  9091  003366                     l4355:
  9092  003366  ECC7  F01D         	call	_BusyXLCD	;wreg free
  9093  00336A  0900               	iorlw	0
  9094  00336C  A4D8               	btfss	status,2,c
  9095  00336E  EFBB  F019         	goto	u5021
  9096  003372  EFBD  F019         	goto	u5020
  9097  003376                     u5021:
  9098  003376  EFB3  F019         	goto	l4355
  9099  00337A                     u5020:
  9100  00337A                     
  9101                           ;LCD_libreria.c: 128:         WriteCmdXLCD(0b00000100);
  9102  00337A  0E04               	movlw	4
  9103  00337C  EC0C  F01E         	call	_WriteCmdXLCD
  9104  003380                     l4359:
  9105  003380  ECC7  F01D         	call	_BusyXLCD	;wreg free
  9106  003384  0900               	iorlw	0
  9107  003386  A4D8               	btfss	status,2,c
  9108  003388  EFC8  F019         	goto	u5031
  9109  00338C  EFCA  F019         	goto	u5030
  9110  003390                     u5031:
  9111  003390  EFC0  F019         	goto	l4359
  9112  003394                     u5030:
  9113  003394                     
  9114                           ;LCD_libreria.c: 132:         SetDDRamAddr(0x80);
  9115  003394  0E80               	movlw	128
  9116  003396  ECD8  F01C         	call	_SetDDRamAddr
  9117  00339A  0012               	return		;funcret
  9118  00339C                     __end_of_OpenXLCD:
  9119                           	opt callstack 0
  9120                           
  9121 ;; *************** function _WriteCmdXLCD *****************
  9122 ;; Defined at:
  9123 ;;		line 162 in file "LCD_libreria.c"
  9124 ;; Parameters:    Size  Location     Type
  9125 ;;  cmd             1    wreg     unsigned char 
  9126 ;; Auto vars:     Size  Location     Type
  9127 ;;  cmd             1    0[COMRAM] unsigned char 
  9128 ;; Return value:  Size  Location     Type
  9129 ;;                  1    wreg      void 
  9130 ;; Registers used:
  9131 ;;		wreg, status,2, status,0, cstack
  9132 ;; Tracked objects:
  9133 ;;		On entry : 0/0
  9134 ;;		On exit  : 0/0
  9135 ;;		Unchanged: 0/0
  9136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9137 ;;      Params:         0       0       0       0       0       0       0       0       0
  9138 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9139 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9140 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9141 ;;Total ram usage:        1 bytes
  9142 ;; Hardware stack levels used:    1
  9143 ;; Hardware stack levels required when called:    1
  9144 ;; This function calls:
  9145 ;;		_DelayFor18TCY
  9146 ;; This function is called by:
  9147 ;;		_LCD_gotoXY
  9148 ;;		_OpenXLCD
  9149 ;;		_LCD_Init
  9150 ;;		_main
  9151 ;; This function uses a non-reentrant model
  9152 ;;
  9153                           
  9154                           	psect	text37
  9155  003C18                     __ptext37:
  9156                           	opt callstack 0
  9157  003C18                     _WriteCmdXLCD:
  9158                           	opt callstack 29
  9159                           
  9160                           ;incstack = 0
  9161                           ;WriteCmdXLCD@cmd stored from wreg
  9162  003C18  6E01               	movwf	WriteCmdXLCD@cmd^0,c
  9163  003C1A                     
  9164                           ;LCD_libreria.c: 162: void WriteCmdXLCD(unsigned char cmd);LCD_libreria.c: 163: {;LCD_li
      +                          breria.c: 181:         TRISD &= 0xf0;
  9165  003C1A  0EF0               	movlw	240
  9166  003C1C  1695               	andwf	149,f,c	;volatile
  9167                           
  9168                           ;LCD_libreria.c: 182:         PORTD &= 0xf0;
  9169  003C1E  0EF0               	movlw	240
  9170  003C20  1683               	andwf	131,f,c	;volatile
  9171                           
  9172                           ;LCD_libreria.c: 183:         PORTD |= (cmd>>4)&0x0f;
  9173  003C22  3801               	swapf	WriteCmdXLCD@cmd^0,w,c
  9174  003C24  0B0F               	andlw	15
  9175  003C26  0B0F               	andlw	15
  9176  003C28  1283               	iorwf	131,f,c	;volatile
  9177  003C2A                     
  9178                           ;LCD_libreria.c: 185:         LATDbits.LATD6 = 0;
  9179  003C2A  9C8C               	bcf	140,6,c	;volatile
  9180  003C2C                     
  9181                           ;LCD_libreria.c: 186:         LATDbits.LATD5 = 0;
  9182  003C2C  9A8C               	bcf	140,5,c	;volatile
  9183  003C2E                     
  9184                           ;LCD_libreria.c: 187:         DelayFor18TCY();
  9185  003C2E  ECFC  F01E         	call	_DelayFor18TCY	;wreg free
  9186  003C32                     
  9187                           ;LCD_libreria.c: 188:         LATDbits.LATD4 = 1;
  9188  003C32  888C               	bsf	140,4,c	;volatile
  9189  003C34                     
  9190                           ;LCD_libreria.c: 189:         DelayFor18TCY();
  9191  003C34  ECFC  F01E         	call	_DelayFor18TCY	;wreg free
  9192  003C38                     
  9193                           ;LCD_libreria.c: 190:         LATDbits.LATD4 = 0;
  9194  003C38  988C               	bcf	140,4,c	;volatile
  9195                           
  9196                           ;LCD_libreria.c: 195:         PORTD &= 0xf0;
  9197  003C3A  0EF0               	movlw	240
  9198  003C3C  1683               	andwf	131,f,c	;volatile
  9199                           
  9200                           ;LCD_libreria.c: 196:         PORTD |= cmd&0x0f;
  9201  003C3E  5001               	movf	WriteCmdXLCD@cmd^0,w,c
  9202  003C40  0B0F               	andlw	15
  9203  003C42  1283               	iorwf	131,f,c	;volatile
  9204  003C44                     
  9205                           ;LCD_libreria.c: 198:         DelayFor18TCY();
  9206  003C44  ECFC  F01E         	call	_DelayFor18TCY	;wreg free
  9207  003C48                     
  9208                           ;LCD_libreria.c: 199:         LATDbits.LATD4 = 1;
  9209  003C48  888C               	bsf	140,4,c	;volatile
  9210  003C4A                     
  9211                           ;LCD_libreria.c: 200:         DelayFor18TCY();
  9212  003C4A  ECFC  F01E         	call	_DelayFor18TCY	;wreg free
  9213  003C4E                     
  9214                           ;LCD_libreria.c: 201:         LATDbits.LATD4 = 0;
  9215  003C4E  988C               	bcf	140,4,c	;volatile
  9216                           
  9217                           ;LCD_libreria.c: 205:         TRISD |= 0x0f;
  9218  003C50  0E0F               	movlw	15
  9219  003C52  1295               	iorwf	149,f,c	;volatile
  9220  003C54  0012               	return		;funcret
  9221  003C56                     __end_of_WriteCmdXLCD:
  9222                           	opt callstack 0
  9223                           
  9224 ;; *************** function _SetDDRamAddr *****************
  9225 ;; Defined at:
  9226 ;;		line 303 in file "LCD_libreria.c"
  9227 ;; Parameters:    Size  Location     Type
  9228 ;;  DDaddr          1    wreg     unsigned char 
  9229 ;; Auto vars:     Size  Location     Type
  9230 ;;  DDaddr          1    3[COMRAM] unsigned char 
  9231 ;; Return value:  Size  Location     Type
  9232 ;;                  1    wreg      void 
  9233 ;; Registers used:
  9234 ;;		wreg, status,2, status,0, cstack
  9235 ;; Tracked objects:
  9236 ;;		On entry : 0/0
  9237 ;;		On exit  : 0/0
  9238 ;;		Unchanged: 0/0
  9239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9240 ;;      Params:         0       0       0       0       0       0       0       0       0
  9241 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9242 ;;      Temps:          3       0       0       0       0       0       0       0       0
  9243 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9244 ;;Total ram usage:        4 bytes
  9245 ;; Hardware stack levels used:    1
  9246 ;; Hardware stack levels required when called:    1
  9247 ;; This function calls:
  9248 ;;		_DelayFor18TCY
  9249 ;; This function is called by:
  9250 ;;		_OpenXLCD
  9251 ;; This function uses a non-reentrant model
  9252 ;;
  9253                           
  9254                           	psect	text38
  9255  0039B0                     __ptext38:
  9256                           	opt callstack 0
  9257  0039B0                     _SetDDRamAddr:
  9258                           	opt callstack 27
  9259                           
  9260                           ;incstack = 0
  9261                           ;SetDDRamAddr@DDaddr stored from wreg
  9262  0039B0  6E04               	movwf	SetDDRamAddr@DDaddr^0,c
  9263  0039B2                     
  9264                           ;LCD_libreria.c: 303: void SetDDRamAddr(unsigned char DDaddr);LCD_libreria.c: 304: {;LCD
      +                          _libreria.c: 322:         TRISD &= 0xf0;
  9265  0039B2  0EF0               	movlw	240
  9266  0039B4  1695               	andwf	149,f,c	;volatile
  9267                           
  9268                           ;LCD_libreria.c: 323:         PORTD &= 0xf0;
  9269  0039B6  0EF0               	movlw	240
  9270  0039B8  1683               	andwf	131,f,c	;volatile
  9271                           
  9272                           ;LCD_libreria.c: 324:         PORTD |= (((DDaddr | 0b10000000)>>4) & 0x0f);
  9273  0039BA  5004               	movf	SetDDRamAddr@DDaddr^0,w,c
  9274  0039BC  6E01               	movwf	??_SetDDRamAddr^0,c
  9275  0039BE  6A02               	clrf	(??_SetDDRamAddr+1)^0,c
  9276  0039C0  0E80               	movlw	128
  9277  0039C2  1201               	iorwf	??_SetDDRamAddr^0,f,c
  9278  0039C4  0E00               	movlw	0
  9279  0039C6  1202               	iorwf	(??_SetDDRamAddr+1)^0,f,c
  9280  0039C8  0E04               	movlw	4
  9281  0039CA  6E03               	movwf	(??_SetDDRamAddr+2)^0,c
  9282  0039CC                     u4815:
  9283  0039CC  3402               	rlcf	(??_SetDDRamAddr+1)^0,w,c
  9284  0039CE  3202               	rrcf	(??_SetDDRamAddr+1)^0,f,c
  9285  0039D0  3201               	rrcf	??_SetDDRamAddr^0,f,c
  9286  0039D2  2E03               	decfsz	(??_SetDDRamAddr+2)^0,f,c
  9287  0039D4  EFE6  F01C         	goto	u4815
  9288  0039D8  5001               	movf	??_SetDDRamAddr^0,w,c
  9289  0039DA  0B0F               	andlw	15
  9290  0039DC  1283               	iorwf	131,f,c	;volatile
  9291  0039DE                     
  9292                           ;LCD_libreria.c: 326:         LATDbits.LATD6 = 0;
  9293  0039DE  9C8C               	bcf	140,6,c	;volatile
  9294  0039E0                     
  9295                           ;LCD_libreria.c: 327:         LATDbits.LATD5 = 0;
  9296  0039E0  9A8C               	bcf	140,5,c	;volatile
  9297  0039E2                     
  9298                           ;LCD_libreria.c: 328:         DelayFor18TCY();
  9299  0039E2  ECFC  F01E         	call	_DelayFor18TCY	;wreg free
  9300  0039E6                     
  9301                           ;LCD_libreria.c: 329:         LATDbits.LATD4 = 1;
  9302  0039E6  888C               	bsf	140,4,c	;volatile
  9303  0039E8                     
  9304                           ;LCD_libreria.c: 330:         DelayFor18TCY();
  9305  0039E8  ECFC  F01E         	call	_DelayFor18TCY	;wreg free
  9306  0039EC                     
  9307                           ;LCD_libreria.c: 331:         LATDbits.LATD4 = 0;
  9308  0039EC  988C               	bcf	140,4,c	;volatile
  9309                           
  9310                           ;LCD_libreria.c: 336:         PORTD &= 0xf0;
  9311  0039EE  0EF0               	movlw	240
  9312  0039F0  1683               	andwf	131,f,c	;volatile
  9313                           
  9314                           ;LCD_libreria.c: 337:         PORTD |= (DDaddr&0x0f);
  9315  0039F2  5004               	movf	SetDDRamAddr@DDaddr^0,w,c
  9316  0039F4  0B0F               	andlw	15
  9317  0039F6  1283               	iorwf	131,f,c	;volatile
  9318  0039F8                     
  9319                           ;LCD_libreria.c: 339:         DelayFor18TCY();
  9320  0039F8  ECFC  F01E         	call	_DelayFor18TCY	;wreg free
  9321  0039FC                     
  9322                           ;LCD_libreria.c: 340:         LATDbits.LATD4 = 1;
  9323  0039FC  888C               	bsf	140,4,c	;volatile
  9324  0039FE                     
  9325                           ;LCD_libreria.c: 341:         DelayFor18TCY();
  9326  0039FE  ECFC  F01E         	call	_DelayFor18TCY	;wreg free
  9327  003A02                     
  9328                           ;LCD_libreria.c: 342:         LATDbits.LATD4 = 0;
  9329  003A02  988C               	bcf	140,4,c	;volatile
  9330                           
  9331                           ;LCD_libreria.c: 346:         TRISD |= 0x0f;
  9332  003A04  0E0F               	movlw	15
  9333  003A06  1295               	iorwf	149,f,c	;volatile
  9334  003A08  0012               	return		;funcret
  9335  003A0A                     __end_of_SetDDRamAddr:
  9336                           	opt callstack 0
  9337                           
  9338 ;; *************** function _DelayPORXLCD *****************
  9339 ;; Defined at:
  9340 ;;		line 44 in file "LCD_libreria.c"
  9341 ;; Parameters:    Size  Location     Type
  9342 ;;		None
  9343 ;; Auto vars:     Size  Location     Type
  9344 ;;		None
  9345 ;; Return value:  Size  Location     Type
  9346 ;;                  1    wreg      void 
  9347 ;; Registers used:
  9348 ;;		wreg
  9349 ;; Tracked objects:
  9350 ;;		On entry : 0/0
  9351 ;;		On exit  : 0/0
  9352 ;;		Unchanged: 0/0
  9353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9354 ;;      Params:         0       0       0       0       0       0       0       0       0
  9355 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9356 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9357 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9358 ;;Total ram usage:        1 bytes
  9359 ;; Hardware stack levels used:    1
  9360 ;; This function calls:
  9361 ;;		Nothing
  9362 ;; This function is called by:
  9363 ;;		_OpenXLCD
  9364 ;; This function uses a non-reentrant model
  9365 ;;
  9366                           
  9367                           	psect	text39
  9368  003E12                     __ptext39:
  9369                           	opt callstack 0
  9370  003E12                     _DelayPORXLCD:
  9371                           	opt callstack 28
  9372  003E12                     
  9373                           ;LCD_libreria.c: 45:     _delay((unsigned long)((15)*(20000000L/4000.0)));
  9374  003E12  0E62               	movlw	98
  9375  003E14  6E01               	movwf	??_DelayPORXLCD^0,c
  9376  003E16  0E66               	movlw	102
  9377  003E18                     u5487:
  9378  003E18  2EE8               	decfsz	wreg,f,c
  9379  003E1A  D7FE               	bra	u5487
  9380  003E1C  2E01               	decfsz	??_DelayPORXLCD^0,f,c
  9381  003E1E  D7FC               	bra	u5487
  9382  003E20  0012               	return		;funcret
  9383  003E22                     __end_of_DelayPORXLCD:
  9384                           	opt callstack 0
  9385                           
  9386 ;; *************** function _BusyXLCD *****************
  9387 ;; Defined at:
  9388 ;;		line 446 in file "LCD_libreria.c"
  9389 ;; Parameters:    Size  Location     Type
  9390 ;;		None
  9391 ;; Auto vars:     Size  Location     Type
  9392 ;;		None
  9393 ;; Return value:  Size  Location     Type
  9394 ;;                  1    wreg      unsigned char 
  9395 ;; Registers used:
  9396 ;;		wreg, cstack
  9397 ;; Tracked objects:
  9398 ;;		On entry : 0/0
  9399 ;;		On exit  : 0/0
  9400 ;;		Unchanged: 0/0
  9401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9402 ;;      Params:         0       0       0       0       0       0       0       0       0
  9403 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9404 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9405 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9406 ;;Total ram usage:        0 bytes
  9407 ;; Hardware stack levels used:    1
  9408 ;; Hardware stack levels required when called:    1
  9409 ;; This function calls:
  9410 ;;		_DelayFor18TCY
  9411 ;; This function is called by:
  9412 ;;		_OpenXLCD
  9413 ;;		_putrsXLCD
  9414 ;;		_WriteDataXLCD
  9415 ;;		_LCD_Init
  9416 ;;		_putsXLCD
  9417 ;;		_SetCGRamAddr
  9418 ;; This function uses a non-reentrant model
  9419 ;;
  9420                           
  9421                           	psect	text40
  9422  003B8E                     __ptext40:
  9423                           	opt callstack 0
  9424  003B8E                     _BusyXLCD:
  9425                           	opt callstack 27
  9426  003B8E                     
  9427                           ;LCD_libreria.c: 448:         LATDbits.LATD6 = 1;
  9428  003B8E  8C8C               	bsf	140,6,c	;volatile
  9429                           
  9430                           ;LCD_libreria.c: 449:         LATDbits.LATD5 = 0;
  9431  003B90  9A8C               	bcf	140,5,c	;volatile
  9432  003B92                     
  9433                           ;LCD_libreria.c: 450:         DelayFor18TCY();
  9434  003B92  ECFC  F01E         	call	_DelayFor18TCY	;wreg free
  9435  003B96                     
  9436                           ;LCD_libreria.c: 451:         LATDbits.LATD4 = 1;
  9437  003B96  888C               	bsf	140,4,c	;volatile
  9438                           
  9439                           ;LCD_libreria.c: 452:         DelayFor18TCY();
  9440  003B98  ECFC  F01E         	call	_DelayFor18TCY	;wreg free
  9441  003B9C                     
  9442                           ;LCD_libreria.c: 470:         if(PORTD&0x08)
  9443  003B9C  A683               	btfss	131,3,c	;volatile
  9444  003B9E  EFD3  F01D         	goto	u4801
  9445  003BA2  EFD5  F01D         	goto	u4800
  9446  003BA6                     u4801:
  9447  003BA6  EFE0  F01D         	goto	l130
  9448  003BAA                     u4800:
  9449  003BAA                     
  9450                           ;LCD_libreria.c: 472:         {;LCD_libreria.c: 473:                 LATDbits.LATD4 = 0;
  9451  003BAA  988C               	bcf	140,4,c	;volatile
  9452  003BAC                     
  9453                           ;LCD_libreria.c: 474:                 DelayFor18TCY();
  9454  003BAC  ECFC  F01E         	call	_DelayFor18TCY	;wreg free
  9455  003BB0                     
  9456                           ;LCD_libreria.c: 475:                 LATDbits.LATD4 = 1;
  9457  003BB0  888C               	bsf	140,4,c	;volatile
  9458                           
  9459                           ;LCD_libreria.c: 476:                 DelayFor18TCY();
  9460  003BB2  ECFC  F01E         	call	_DelayFor18TCY	;wreg free
  9461  003BB6                     
  9462                           ;LCD_libreria.c: 477:                 LATDbits.LATD4 = 0;
  9463  003BB6  988C               	bcf	140,4,c	;volatile
  9464  003BB8                     
  9465                           ;LCD_libreria.c: 478:                 LATDbits.LATD6 = 0;
  9466  003BB8  9C8C               	bcf	140,6,c	;volatile
  9467  003BBA                     
  9468                           ;LCD_libreria.c: 479:                 return 1;
  9469  003BBA  0E01               	movlw	1
  9470  003BBC  EFE9  F01D         	goto	l131
  9471  003BC0                     l130:
  9472                           
  9473                           ;LCD_libreria.c: 482:         {;LCD_libreria.c: 483:                 LATDbits.LATD4 = 0;
  9474  003BC0  988C               	bcf	140,4,c	;volatile
  9475  003BC2                     
  9476                           ;LCD_libreria.c: 484:                 DelayFor18TCY();
  9477  003BC2  ECFC  F01E         	call	_DelayFor18TCY	;wreg free
  9478  003BC6                     
  9479                           ;LCD_libreria.c: 485:                 LATDbits.LATD4 = 1;
  9480  003BC6  888C               	bsf	140,4,c	;volatile
  9481                           
  9482                           ;LCD_libreria.c: 486:                 DelayFor18TCY();
  9483  003BC8  ECFC  F01E         	call	_DelayFor18TCY	;wreg free
  9484  003BCC                     
  9485                           ;LCD_libreria.c: 487:                 LATDbits.LATD4 = 0;
  9486  003BCC  988C               	bcf	140,4,c	;volatile
  9487  003BCE                     
  9488                           ;LCD_libreria.c: 488:                 LATDbits.LATD6 = 0;
  9489  003BCE  9C8C               	bcf	140,6,c	;volatile
  9490  003BD0                     
  9491                           ;LCD_libreria.c: 489:                 return 0;
  9492  003BD0  0E00               	movlw	0
  9493  003BD2                     l131:
  9494  003BD2  0012               	return		;funcret
  9495  003BD4                     __end_of_BusyXLCD:
  9496                           	opt callstack 0
  9497                           
  9498 ;; *************** function _DelayFor18TCY *****************
  9499 ;; Defined at:
  9500 ;;		line 27 in file "LCD_libreria.c"
  9501 ;; Parameters:    Size  Location     Type
  9502 ;;		None
  9503 ;; Auto vars:     Size  Location     Type
  9504 ;;		None
  9505 ;; Return value:  Size  Location     Type
  9506 ;;                  1    wreg      void 
  9507 ;; Registers used:
  9508 ;;		None
  9509 ;; Tracked objects:
  9510 ;;		On entry : 0/0
  9511 ;;		On exit  : 0/0
  9512 ;;		Unchanged: 0/0
  9513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9514 ;;      Params:         0       0       0       0       0       0       0       0       0
  9515 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9516 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9517 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9518 ;;Total ram usage:        0 bytes
  9519 ;; Hardware stack levels used:    1
  9520 ;; This function calls:
  9521 ;;		Nothing
  9522 ;; This function is called by:
  9523 ;;		_WriteCmdXLCD
  9524 ;;		_SetDDRamAddr
  9525 ;;		_WriteDataXLCD
  9526 ;;		_BusyXLCD
  9527 ;;		_ReadAddrXLCD
  9528 ;;		_ReadDataXLCD
  9529 ;; This function uses a non-reentrant model
  9530 ;;
  9531                           
  9532                           	psect	text41
  9533  003DF8                     __ptext41:
  9534                           	opt callstack 0
  9535  003DF8                     _DelayFor18TCY:
  9536                           	opt callstack 28
  9537  003DF8                     
  9538                           ;LCD_libreria.c: 28:     __nop();
  9539  003DF8  F000               	nop	
  9540                           
  9541                           ;LCD_libreria.c: 29:     __nop();
  9542  003DFA  F000               	nop	
  9543                           
  9544                           ;LCD_libreria.c: 30:     __nop();
  9545  003DFC  F000               	nop	
  9546                           
  9547                           ;LCD_libreria.c: 31:     __nop();
  9548  003DFE  F000               	nop	
  9549                           
  9550                           ;LCD_libreria.c: 32:     __nop();
  9551  003E00  F000               	nop	
  9552                           
  9553                           ;LCD_libreria.c: 33:     __nop();
  9554  003E02  F000               	nop	
  9555                           
  9556                           ;LCD_libreria.c: 34:     __nop();
  9557  003E04  F000               	nop	
  9558                           
  9559                           ;LCD_libreria.c: 35:     __nop();
  9560  003E06  F000               	nop	
  9561                           
  9562                           ;LCD_libreria.c: 36:     __nop();
  9563  003E08  F000               	nop	
  9564                           
  9565                           ;LCD_libreria.c: 37:     __nop();
  9566  003E0A  F000               	nop	
  9567                           
  9568                           ;LCD_libreria.c: 38:     __nop();
  9569  003E0C  F000               	nop	
  9570                           
  9571                           ;LCD_libreria.c: 39:     __nop();
  9572  003E0E  F000               	nop	
  9573  003E10  0012               	return		;funcret
  9574  003E12                     __end_of_DelayFor18TCY:
  9575                           	opt callstack 0
  9576                           
  9577 ;; *************** function _ADC_Read *****************
  9578 ;; Defined at:
  9579 ;;		line 34 in file "ADC_Libreria.c"
  9580 ;; Parameters:    Size  Location     Type
  9581 ;;  ch              1    wreg     unsigned char 
  9582 ;; Auto vars:     Size  Location     Type
  9583 ;;  ch              1    2[COMRAM] unsigned char 
  9584 ;; Return value:  Size  Location     Type
  9585 ;;                  2    0[COMRAM] unsigned int 
  9586 ;; Registers used:
  9587 ;;		wreg, status,2, status,0
  9588 ;; Tracked objects:
  9589 ;;		On entry : 0/0
  9590 ;;		On exit  : 0/0
  9591 ;;		Unchanged: 0/0
  9592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9593 ;;      Params:         2       0       0       0       0       0       0       0       0
  9594 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9595 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9596 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9597 ;;Total ram usage:        3 bytes
  9598 ;; Hardware stack levels used:    1
  9599 ;; This function calls:
  9600 ;;		Nothing
  9601 ;; This function is called by:
  9602 ;;		_main
  9603 ;; This function uses a non-reentrant model
  9604 ;;
  9605                           
  9606                           	psect	text42
  9607  003B00                     __ptext42:
  9608                           	opt callstack 0
  9609  003B00                     _ADC_Read:
  9610                           	opt callstack 30
  9611                           
  9612                           ;incstack = 0
  9613                           ;ADC_Read@ch stored from wreg
  9614  003B00  6E03               	movwf	ADC_Read@ch^0,c
  9615  003B02                     
  9616                           ;ADC_Libreria.c: 35:     if(ch > 13)return 0;
  9617  003B02  0E0D               	movlw	13
  9618  003B04  6403               	cpfsgt	ADC_Read@ch^0,c
  9619  003B06  EF87  F01D         	goto	u5051
  9620  003B0A  EF89  F01D         	goto	u5050
  9621  003B0E                     u5051:
  9622  003B0E  EF8F  F01D         	goto	l4383
  9623  003B12                     u5050:
  9624  003B12  0E00               	movlw	0
  9625  003B14  6E02               	movwf	(?_ADC_Read+1)^0,c
  9626  003B16  0E00               	movlw	0
  9627  003B18  6E01               	movwf	?_ADC_Read^0,c
  9628  003B1A  EFA3  F01D         	goto	l17
  9629  003B1E                     l4383:
  9630                           
  9631                           ;ADC_Libreria.c: 36:     ADCON0 = 0x00;
  9632  003B1E  0E00               	movlw	0
  9633  003B20  6EC2               	movwf	194,c	;volatile
  9634  003B22                     
  9635                           ;ADC_Libreria.c: 37:     ADCON0 = (ch<<2);
  9636  003B22  4403               	rlncf	ADC_Read@ch^0,w,c
  9637  003B24  46E8               	rlncf	wreg,f,c
  9638  003B26  0BFC               	andlw	252
  9639  003B28  6EC2               	movwf	194,c	;volatile
  9640  003B2A                     
  9641                           ;ADC_Libreria.c: 41:     ADCON0bits.ADON = 1;
  9642  003B2A  80C2               	bsf	194,0,c	;volatile
  9643  003B2C                     
  9644                           ;ADC_Libreria.c: 42:     ADCON0bits.GO_DONE = 1;
  9645  003B2C  82C2               	bsf	194,1,c	;volatile
  9646  003B2E                     l18:
  9647  003B2E  B2C2               	btfsc	194,1,c	;volatile
  9648  003B30  EF9C  F01D         	goto	u5061
  9649  003B34  EF9E  F01D         	goto	u5060
  9650  003B38                     u5061:
  9651  003B38  EF97  F01D         	goto	l18
  9652  003B3C                     u5060:
  9653  003B3C                     
  9654                           ;ADC_Libreria.c: 44:     ADCON0bits.ADON = 0;
  9655  003B3C  90C2               	bcf	194,0,c	;volatile
  9656                           
  9657                           ;ADC_Libreria.c: 45:     return ADRES;
  9658  003B3E  CFC3 F001          	movff	4035,?_ADC_Read	;volatile
  9659  003B42  CFC4 F002          	movff	4036,?_ADC_Read+1	;volatile
  9660  003B46                     l17:
  9661  003B46  0012               	return		;funcret
  9662  003B48                     __end_of_ADC_Read:
  9663                           	opt callstack 0
  9664                           
  9665 ;; *************** function _ADC_Init *****************
  9666 ;; Defined at:
  9667 ;;		line 19 in file "ADC_Libreria.c"
  9668 ;; Parameters:    Size  Location     Type
  9669 ;;		None
  9670 ;; Auto vars:     Size  Location     Type
  9671 ;;		None
  9672 ;; Return value:  Size  Location     Type
  9673 ;;                  1    wreg      void 
  9674 ;; Registers used:
  9675 ;;		wreg, status,2
  9676 ;; Tracked objects:
  9677 ;;		On entry : 0/0
  9678 ;;		On exit  : 0/0
  9679 ;;		Unchanged: 0/0
  9680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9681 ;;      Params:         0       0       0       0       0       0       0       0       0
  9682 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9683 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9684 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9685 ;;Total ram usage:        0 bytes
  9686 ;; Hardware stack levels used:    1
  9687 ;; This function calls:
  9688 ;;		Nothing
  9689 ;; This function is called by:
  9690 ;;		_main
  9691 ;; This function uses a non-reentrant model
  9692 ;;
  9693                           
  9694                           	psect	text43
  9695  003DB2                     __ptext43:
  9696                           	opt callstack 0
  9697  003DB2                     _ADC_Init:
  9698                           	opt callstack 30
  9699  003DB2                     
  9700                           ;ADC_Libreria.c: 20:     ADCON1bits.PCFG = 0b1100;
  9701  003DB2  50C1               	movf	193,w,c	;volatile
  9702  003DB4  0BF0               	andlw	-16
  9703  003DB6  090C               	iorlw	12
  9704  003DB8  6EC1               	movwf	193,c	;volatile
  9705                           
  9706                           ;ADC_Libreria.c: 21:     ADCON1bits.VCFG = 0;
  9707  003DBA  0ECF               	movlw	-49
  9708  003DBC  16C1               	andwf	193,f,c	;volatile
  9709                           
  9710                           ;ADC_Libreria.c: 22:     ADCON0 = 0;
  9711  003DBE  0E00               	movlw	0
  9712  003DC0  6EC2               	movwf	194,c	;volatile
  9713                           
  9714                           ;ADC_Libreria.c: 29:     ADCON2bits.ACQT = 3;
  9715  003DC2  50C0               	movf	192,w,c	;volatile
  9716  003DC4  0BC7               	andlw	-57
  9717  003DC6  0918               	iorlw	24
  9718  003DC8  6EC0               	movwf	192,c	;volatile
  9719                           
  9720                           ;ADC_Libreria.c: 30:     ADCON2bits.ADCS = 5;
  9721  003DCA  50C0               	movf	192,w,c	;volatile
  9722  003DCC  0BF8               	andlw	-8
  9723  003DCE  0905               	iorlw	5
  9724  003DD0  6EC0               	movwf	192,c	;volatile
  9725  003DD2                     
  9726                           ;ADC_Libreria.c: 31:     ADCON2bits.ADFM = 1;
  9727  003DD2  8EC0               	bsf	192,7,c	;volatile
  9728  003DD4  0012               	return		;funcret
  9729  003DD6                     __end_of_ADC_Init:
  9730                           	opt callstack 0
  9731                           
  9732                           	psect	rparam
  9733  0000                     tosu	equ	0xFFF
  9734                           tosh	equ	0xFFE
  9735                           tosl	equ	0xFFD
  9736                           stkptr	equ	0xFFC
  9737                           pclatu	equ	0xFFB
  9738                           pclath	equ	0xFFA
  9739                           pcl	equ	0xFF9
  9740                           tblptru	equ	0xFF8
  9741                           tblptrh	equ	0xFF7
  9742                           tblptrl	equ	0xFF6
  9743                           tablat	equ	0xFF5
  9744                           prodh	equ	0xFF4
  9745                           prodl	equ	0xFF3
  9746                           indf0	equ	0xFEF
  9747                           postinc0	equ	0xFEE
  9748                           postdec0	equ	0xFED
  9749                           preinc0	equ	0xFEC
  9750                           plusw0	equ	0xFEB
  9751                           fsr0h	equ	0xFEA
  9752                           fsr0l	equ	0xFE9
  9753                           wreg	equ	0xFE8
  9754                           indf1	equ	0xFE7
  9755                           postinc1	equ	0xFE6
  9756                           postdec1	equ	0xFE5
  9757                           preinc1	equ	0xFE4
  9758                           plusw1	equ	0xFE3
  9759                           fsr1h	equ	0xFE2
  9760                           fsr1l	equ	0xFE1
  9761                           bsr	equ	0xFE0
  9762                           indf2	equ	0xFDF
  9763                           postinc2	equ	0xFDE
  9764                           postdec2	equ	0xFDD
  9765                           preinc2	equ	0xFDC
  9766                           plusw2	equ	0xFDB
  9767                           fsr2h	equ	0xFDA
  9768                           fsr2l	equ	0xFD9
  9769                           status	equ	0xFD8


Data Sizes:
    Strings     150
    Constant    0
    Data        0
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    107     149
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_22(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_22(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_11(CODE[5]), STR_9(CODE[5]), STR_7(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> datos(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> datos(BANK0[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1170_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> datos(BANK0[20]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> datos(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_11(CODE[5]), STR_9(CODE[5]), STR_7(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_11(CODE[5]), STR_9(CODE[5]), STR_7(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_11(CODE[5]), STR_9(CODE[5]), STR_7(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_10(CODE[16]), STR_8(CODE[16]), datos(BANK0[20]), STR_6(CODE[16]), 
		 -> STR_5(CODE[15]), STR_4(CODE[15]), STR_3(CODE[15]), STR_2(CODE[15]), 
		 -> STR_1(CODE[18]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _atoi->_isspace
    _putrsXLCD->_WriteDataXLCD
    _LCD_gotoXY->_WriteCmdXLCD
    _LCD_Init->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   37555
                                            105 BANK0      2     2      0
                           _ADC_Init
                           _ADC_Read
                           _LCD_Init
                         _LCD_gotoXY
                          _Port_Init
                       _WriteCmdXLCD
                            ___fldiv
                            ___flmul
                           ___xxtofl
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   28785
                                             87 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   28124
                                             79 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   27752
                                             91 COMRAM     4     4      0
                                             61 BANK0     18    12      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   22453
                                             84 COMRAM     7     0      7
                                              0 BANK0     61    61      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2808
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     638
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2463
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1152
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _putrsXLCD                                            2     0      2     925
                                              1 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      44
                                              0 COMRAM     1     1      0
                           _BusyXLCD
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _Port_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_gotoXY                                           4     0      4    1782
                                              1 COMRAM     4     0      4
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     154
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0     110
                                              4 COMRAM     1     1      0
                           _BusyXLCD
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (1) _WriteCmdXLCD                                         1     1      0      44
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         4     4      0      44
                                              0 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             3     1      2      44
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _LCD_Init
     _BusyXLCD
       _DelayFor18TCY
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
       _DelayPORXLCD
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
   _LCD_gotoXY
     _WriteCmdXLCD
       _DelayFor18TCY
   _Port_Init
   _WriteCmdXLCD
     _DelayFor18TCY
   ___fldiv
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _putrsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _BusyXLCD
         _DelayFor18TCY
       _DelayFor18TCY
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6B      95       5       93.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     144      20        0.0%
DATA                 0      0     144       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Mar 29 19:49:34 2020

           ___fldiv@aexp 0040             ___fldiv@bexp 003F             ___fldiv@sign 0038  
                     l20 3B3C                       l13 3DD4                       l17 3B46  
                     l18 3B2E                       l45 3E10                       l48 3E20  
                     l56 3D62                       l85 339A                       l94 3890  
           ___awdiv@sign 0006      ___wmul@multiplicand 0003              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l130 3BC0                      l106 3C54  
                    l131 3BD2                      l118 3A08                      l127 3AFE  
                    l312 101C                      l170 3D8A                      l250 3600  
                    l173 3E2E                      l245 3582                      l248 35C4  
                    l186 195A                      l371 38EA                      l187 1814  
                    l179 16CE                      l268 1446                      l372 38F2  
                    l365 21D4                      l606 36C4                      l286 0C84  
                    l358 228E                      l375 3DB0                      l640 316C  
                    l634 381E                      l619 3774                      l645 31B2  
                    l903 1B50                      l920 1C6A                      l912 1E20  
                    l904 1B3E                      l672 30AE                      l649 3CC4  
                    l905 1B04                      l930 1D28                      l929 1D3A  
                    l945 3B8C                      l970 2970                      l962 2876  
                    l971 295E                      l957 2A52                      l959 28B2  
                    l968 28F8                      l993 26B8                      l996 254A  
                    l989 2354                      l998 25C2                      l999 25B0  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000              ?_LCD_gotoXY 0002  
           __CFG_BOR$OFF 000000                      _pad 353C    __size_of_WriteCmdXLCD 003E  
           ___awmod@sign 0006                      wreg 000FE8             __CFG_FOSC$HS 000000  
           ___flmul@aexp 0020             ___flmul@bexp 0021             ___flmul@sign 001B  
           ___flmul@temp 0026             ___flmul@prod 0022             __CFG_LVP$OFF 000000  
           ___fltol@exp1 000A             __CFG_WDT$OFF 000000                     l1030 2CBC  
                   l1006 267A                     l1104 3CFC                     l1112 3AAC  
                   l1033 2E18                     l1044 2DB0                     l1037 2D54  
                   l1133 353A                     l1141 3C16                     l1118 3C8C  
                   l1151 3E30                     l1056 32B0                     l3001 19AE  
                   l3011 19E0                     l3003 19B0                     l1163 3D32  
                   l1148 3A5A                     l1085 2FA0                     l3101 1BAE  
                   l3021 1A08                     l3013 19E2                     l3005 19B8  
                   l1157 39AE                     l1094 2C64                     l1182 3952  
                   l3111 1BD8                     l3103 1BBA                     l3031 1A42  
                   l3023 1A18                     l3015 19E8                     l3007 19C8  
                   l1167 3470                     l1088 2FA8                     l3121 1C4A  
                   l3105 1BBE                     l3113 1BDE                     l3041 1A6E  
                   l3033 1A54                     l3025 1A28                     l3017 19F6  
                   l3009 19CE                     l1097 2BA8                     l3201 358E  
                   l1177 394A                     l4001 1334                     l3131 1CA4  
                   l3115 1C04                     l3123 1C5A                     l3107 1BCC  
                   l3051 1A82                     l3043 1A72                     l3035 1A62  
                   l3027 1A2A                     l3019 19F8                     l3203 35A2  
                   l4011 1374                     l4003 133C                     l3301 2708  
                   l3141 1CD4                     l3133 1CAE                     l3125 1C80  
                   l3117 1C38                     l3109 1BCE                     l3061 1A96  
                   l3053 1A86                     l3045 1A76                     l3037 1A66  
                   l3029 1A32                     l3221 3246                     l3213 31B4  
                   l3205 35A6                     l4021 13B0                     l4013 1386  
                   l4005 1342                     l4101 344E                     l4111 3C2A  
                   l3311 273A                     l3303 2710                     l3151 1CFC  
                   l3143 1CD8                     l3135 1CBC                     l3127 1C90  
                   l3119 1C3A                     l3071 1AD0                     l3063 1A9A  
                   l3055 1A8A                     l3047 1A7A                     l3039 1A6A  
                   l3231 32A8                     l3215 31D4                     l3207 35D4  
                   l4031 1408                     l4023 13B6                     l4015 1392  
                   l4007 1354                     l4105 3E12                     l4121 3C38  
                   l4113 3C2C                     l3401 29C8                     l3321 276E  
                   l3313 273C                     l3305 2720                     l3161 1D56  
                   l3153 1D0A                     l3145 1CE8                     l3137 1CBE  
                   l3081 1B22                     l3073 1AEC                     l3065 1A9E  
                   l3057 1A8E                     l3049 1A7E                     l3217 3212  
                   l3225 3252                     l3209 35E8                     l4033 1410  
                   l4017 139A                     l4009 136E                     l4201 1E6A  
                   l4123 3C44                     l4115 3C2E                     l4051 2E52  
                   l4043 2E1A                     l3411 2A32                     l3403 29E2  
                   l3331 27B4                     l3315 274C                     l3323 2776  
                   l3307 2726                     l3171 1DC0                     l3163 1D64  
                   l3155 1D20                     l3139 1CCC                     l3147 1CEA  
                   l3091 1B6E                     l3083 1B30                     l3075 1AFC  
                   l3059 1A92                     l3067 1AA2                     l3227 3264  
                   l3219 323A                     l3251 2A74                     l3235 3954  
                   l3243 392A                     l4035 1420                     l4027 13EA  
                   l4019 13AA                     l4211 1F02                     l4203 1E8E  
                   l4141 3BAA                     l4133 3B8E                     l4125 3C48  
                   l4117 3C32                     l4109 3C1A                     l4301 3AEE  
                   l4061 2EA8                     l4053 2E88                     l4045 2E2E  
                   l3413 2A40                     l3405 29F8                     l3341 27DC  
                   l3333 27B8                     l3325 2786                     l3317 275C  
                   l3309 272C                     l3501 24CE                     l3181 1DFA  
                   l3173 1DE0                     l3165 1D9E                     l3149 1CF8  
                   l3085 1B32                     l3077 1B12                     l3069 1AA6  
                   l3261 2B5C                     l3253 2ACA                     l3237 3964  
                   l3245 393C                     l4037 1426                     l4029 13FC  
                   l4213 1F22                     l4205 1E96                     l4221 1F8A  
                   l4151 3BBA                     l4143 3BAC                     l4135 3B92  
                   l4127 3C4A                     l4119 3C34                     l4311 32B4  
                   l4303 3AF2                     l4071 2F22                     l4063 2EB0  
                   l4055 2E8C                     l4047 2E32                     l3415 2A46  
                   l3407 2A12                     l3351 282A                     l3327 279C  
                   l3319 276C                     l3511 2548                     l3503 2504  
                   l3431 22AC                     l3183 1E00                     l3175 1DE4  
                   l3159 1D4A                     l3167 1DA0                     l3095 1B82  
                   l3087 1B3C                     l3079 1B1E                     l3271 2C44  
                   l3263 2B98                     l3255 2ADE                     l3191 353C  
                   l3239 38F4                     l4231 2030                     l4223 1FAC  
                   l4215 1F30                     l4207 1EA4                     l4161 3BCC  
                   l4145 3BB0                     l4137 3B96                     l4129 3C4E  
                   l4321 32C4                     l4313 32BC                     l4305 3AF4  
                   l4401 3824                     l3281 3D8C                     l4065 2EB8  
                   l4049 2E36                     l3601 36BC                     l3417 2A48  
                   l3409 2A2E                     l3361 2874                     l3353 283A  
                   l3345 27F0                     l3329 27AC                     l3337 27CC  
                   l3521 25A8                     l3513 255A                     l3505 2512  
                   l3441 22F2                     l3433 22BC                     l3425 2290  
                   l3185 1E0E                     l3177 1DF2                     l3169 1DB0  
                   l3097 1B92                     l3089 1B5E                     l3273 2C54  
                   l3257 2AEC                     l3265 2BCC                     l3249 2A54  
                   l3193 354C                     l4233 2042                     l4225 1FBC  
                   l4209 1EC8                     l4163 3BCE                     l4147 3BB6  
                   l4139 3B9C                     l4171 39DE                     l4331 32D8  
                   l4323 32C6                     l4315 32BE                     l4411 3D6A  
                   l4307 3AF8                     l4403 3838                     l3283 3DA8  
                   l4075 2F60                     l4067 2EEC                     l4059 2E92  
                   l3611 36E0                     l3371 28C2                     l3363 2880  
                   l3355 2842                     l3347 280A                     l3339 27DC  
                   l3291 26D4                     l3531 2616                     l3515 2568  
                   l3507 2530                     l3451 231E                     l3443 22F8  
                   l3435 22CC                     l3427 229C                     l3187 1E10  
                   l3179 1DF8                     l3099 1BA0                     l3267 2C08  
                   l3195 3560                     l4091 33D2                     l4251 2170  
                   l4235 2058                     l4243 20C2                     l4227 1FEE  
                   l4219 1F78                     l4165 3BD0                     l4157 3BC2  
                   l4149 3BB8                     l4181 39EC                     l4173 39E0  
                   l4341 3312                     l4333 32DE                     l4325 32C8  
                   l4317 32C0                     l4413 3D7E                     l4405 385C  
                   l3277 3CC6                     l4077 2F72                     l3621 3714  
                   l3613 36E4                     l3605 36C6                     l3373 28D8  
                   l3381 2908                     l3365 289E                     l3357 2852  
                   l3349 281A                     l3293 26D6                     l3541 267E  
                   l3525 25D2                     l3533 261A                     l3517 256C  
                   l3509 253A                     l3461 2374                     l3453 232E  
                   l3445 22FE                     l3437 22DC                     l3429 22AA  
                   l3701 3014                     l3269 2C1C                     l3197 356E  
                   l4093 33E0                     l4085 339C                     l4261 220C  
                   l4253 21A4                     l4245 20F0                     l4237 2066  
                   l4229 1FFE                     l4421 3A1C                     l4159 3BC6  
                   l4183 39F8                     l4175 39E2                     l4351 334C  
                   l4343 3318                     l4335 32E4                     l4327 32CC  
                   l4319 32C2                     l4415 3E22                     l4431 2C68  
                   l4407 3860                     l4079 2F84                     l3631 374E  
                   l3623 371C                     l3615 36F2                     l3607 36CA  
                   l3383 2916                     l3375 28DE                     l3367 28A0  
                   l3359 2866                     l3295 26E6                     l3287 26BA  
                   l3551 26A8                     l3543 268E                     l3535 2634  
                   l3527 25DE                     l3519 257A                     l3471 23B4  
                   l3455 233E                     l3447 230C                     l3439 22E2  
                   l3711 3044                     l3703 3022                     l3199 357A  
                   l4095 33F8                     l4087 33C6                     l4271 224A  
                   l4263 221A                     l4239 2096                     l4423 3A24  
                   l4185 39FC                     l4177 39E6                     l4169 39B2  
                   l4361 3394                     l4353 3360                     l4345 332C  
                   l4337 32EA                     l4329 32D2                     l4409 3D64  
                   l4417 3E2A                     l4433 2C78                     l3561 3602  
                   l3625 372A                     l3633 3754                     l3617 36FA  
                   l3609 36D8                     l3393 2980                     l3385 291A  
                   l3377 28E8                     l3369 28B0                     l3297 26F6  
                   l3289 26C6                     l3641 3776                     l3545 269C  
                   l3537 2648                     l3529 25EC                     l3481 23FE  
                   l3473 23C0                     l3465 2388                     l3457 2344  
                   l3449 230E                     l3721 306E                     l3713 304E  
                   l3801 0A94                     l4097 3414                     l4265 222E  
                   l4249 215E                     l4193 1E22                     l4425 3A2C  
                   l4601 14E2                     l4187 39FE                     l4179 39E8  
                   l4355 3366                     l4347 3332                     l4339 32FE  
                   l4451 2D3E                     l4443 2CF6                     l4435 2C86  
                   l4291 3AD6                     l4283 3AB0                     l3731 3A5C  
                   l3571 362E                     l3563 3606                     l3635 3764  
                   l3627 3740                     l3619 370C                     l3395 298C  
                   l3387 2928                     l3379 28F6                     l3299 2706  
                   l3651 3816                     l3643 37A4                     l3547 269E  
                   l3539 2662                     l3491 2450                     l3483 240A  
                   l3475 23D8                     l3467 2394                     l3459 2364  
                   l3555 3B48                     l3723 307E                     l3803 0AB0  
                   l3811 0ACC                     l4099 3426                     l4259 21E8  
                   l4195 1E46                     l4275 2258                     l4371 38CE  
                   l4427 3A48                     l4419 3A0A                     l4611 1542  
                   l4603 14EE                     l4373 3DB2                     l4189 3A02  
                   l4357 337A                     l4349 3346                     l4461 2DBE  
                   l4453 2D4A                     l4445 2CFE                     l4437 2CCC  
                   l4293 3AD8                     l4285 3AB0                     l3733 3A60  
                   l3581 365C                     l3573 3636                     l3565 3614  
                   l3637 376C                     l3629 3748                     l3397 299A  
                   l3389 2956                     l3653 381C                     l3645 37B4  
                   l3661 30EE                     l3549 26A4                     l3493 2460  
                   l3485 241A                     l3477 23E4                     l3469 239E  
                   l3557 3B58                     l3725 308E                     l3709 303A  
                   l3901 0F5E                     l3821 0B56                     l3813 0AE6  
                   l4277 227C                     l4269 223C                     l4197 1E54  
                   l4365 3892                     l4621 1588                     l4613 1548  
                   l4605 1508                     ?_pad 0011                     l4375 3DD2  
                   l4383 3B1E                     l3743 3DF8                     l4359 3380  
                   l4391 3D34                     l4471 2E06                     l4463 2DC0  
                   l4455 2D86                     l4447 2D0A                     l4439 2CE2  
                   l4295 3ADC                     l4287 3AC4                     l3735 3A74  
                   l3591 3696                     l3583 3664                     l3575 363A  
                   l3567 361C                     l3399 29C4                     l3647 37E2  
                   l3671 315A                     l3663 311C                     l3495 247C  
                   l3487 2426                     l3479 23F0                     l3727 309E  
                   l3719 3062                     l3911 0FF4                     l3903 0F90  
                   l3831 0C2E                     l3823 0BB0                     l3751 08C0  
                   l4199 1E66                     l4367 389A                     l4631 15DE  
                   l4623 1596                     l4615 155C                     l4607 151C  
                   l4385 3B22                     l4377 3B02                     l4393 3D4E  
                   l4473 2E08                     l4465 2DC4                     l4457 2D92  
                   l4449 2D3C                     l4297 3ADE                     l4289 3AD4  
                   l3737 3AA2                     l3593 3698                     l3585 3672  
                   l3577 3642                     l3569 3620                     l3649 37F2  
                   l3673 31AA                     l3665 312C                     l3657 30B0  
                   l3497 2488                     l3489 2436                     l3681 3CA4  
                   l2961 34BE                     l2953 3472                     l3921 10AC  
                   l3913 1008                     l3905 0FA0                     l3841 0C78  
                   l3833 0C32                     l3825 0BE4                     l3817 0B1C  
                   l3761 0910                     l3753 08C8                     l3745 0898  
                   l4369 38A8                     l4641 16A8                     l4633 1648  
                   l4625 15AA                     l4617 1568                     l4609 1528  
                   l4387 3B2A                     l4379 3B12                     l4395 3D5A  
                   l4467 2DE8                     l4459 2DA0                     l4299 3AE2  
                   l3739 3AA6                     l4715 2ED6                     l3595 369E  
                   l3587 3678                     l3579 3654                     l3675 31B0  
                   l3667 313A                     l3659 30DE                     l3499 24A4  
                   l3683 3CB4                     l2963 34F4                     l2955 3484  
                   l2971 3BF2                     l3931 10F8                     l3923 10BE  
                   l3915 1014                     l3907 0FB0                     l3851 0CB4  
                   l3835 0C44                     l3843 0C90                     l3827 0BEC  
                   l3819 0B50                     l3771 0948                     l3763 091E  
                   l3755 08EC                     l3747 08A2                     l4651 16FC  
                   l4643 16B6                     l4635 165C                     l4627 15B6  
                   l4619 1582                     l4389 3B2C                     l4469 2DF8  
                   l3589 368E                     l3597 36A4                     l3669 314C  
                   l3693 2FD4                     l2957 3496                     l2973 3BF6  
                   l2981 3D26                     l3941 112C                     l3933 1106  
                   l3925 10D0                     l3917 1038                     l3909 0FE4  
                   l3861 0D1A                     l3853 0CD0                     l3837 0C56  
                   l3829 0C1E                     l3781 09AE                     l3773 094C  
                   l3765 0930                     l3757 08F6                     l3749 08B2  
                   l4661 17C8                     l4653 1716                     l4645 16C4  
                   l4637 1682                     l4629 15D0                     l4399 3820  
                   l3599 36B4                     l3679 3C8E                     l2991 196E  
                   l3695 2FFE                     l3687 2FAA                     l2959 34A0  
                   l2967 3BD4                     l2975 3CFE                     l3951 115E  
                   l3943 113C                     l3935 1116                     l3927 10DE  
                   l3919 109C                     l3871 0D62                     l3863 0D2C  
                   l3855 0D06                     l3839 0C5E                     l3783 09C0  
                   l3767 093C                     l3775 0952                     l3759 08FE  
                   l4671 1822                     l4663 17D4                     l4655 1724  
                   l4647 16DC                     l4639 168E                     l4591 1474  
                   l4583 1448                     l2993 197C                     l3697 3000  
                   l3689 2FC0                     l2969 3BE0                     l2977 3D0A  
                   l2985 3C56                     l3961 1206                     l3953 1170  
                   l3945 1140                     l3937 111A                     l3929 10E6  
                   l3881 0DAA                     l3873 0D70                     l3865 0D3E  
                   l3857 0D0E                     l3849 0CA2                     l3785 09DC  
                   l3777 0978                     l3793 0A26                     l3769 0944  
                   l4681 18D4                     l4673 1836                     l4665 17EE  
                   l4657 178E                     l4649 16F0                     l4593 148E  
                   l4585 144C                     l2995 197E                     l3699 3010  
                   l2979 3D0E                     l3971 125E                     l3963 120E  
                   l3955 1174                     l3947 1146                     l3939 1120  
                   l3891 0EBE                     l3883 0DBA                     l3875 0D88  
                   l3867 0D4C                     l3859 0D12                     l3795 0A4C  
                   l3787 09F4                     l4691 1942                     l4683 18E8  
                   l4675 1842                     l4667 17FC                     l4659 17A2  
                   l4595 14A2                     l4587 1450                     l2997 198E  
                   l2989 1962                     l3981 12A2                     l3973 126C  
                   l3949 114C                     l3957 117A                     l3965 1212  
                   l3885 0DCE                     l3893 0EC4                     l3877 0D9A  
                   l3869 0D50                     l3789 09FE                     l4693 1950  
                   l4685 190E                     l4677 185C                     l4669 180A  
                   l4597 14C8                     l4589 1468                     l2999 199E  
                   l3991 12D8                     l3983 12AA                     l3975 127C  
                   l3967 1230                     l3959 11D2                     l3895 0EE2  
                   l3887 0E32                     l3879 0DA2                     l3799 0A82  
                   l4687 191A                     l4679 186A                     l4599 14CE  
                   l3993 12E0                     l3985 12BA                     l3977 1280  
                   l3969 124C                     l3897 0F16                     l3889 0E8A  
                   l4689 1934                     l3995 12EC                     l3987 12C2  
                   l3979 1290                     l3899 0F48                     l3997 12F2  
                   l3989 12D0                     l3999 1318                     STR_1 0801  
                   STR_2 0843                     STR_3 0852                     STR_4 0861  
                   STR_5 0870                     STR_6 0813                     STR_7 087F  
                   STR_8 0823                     STR_9 087F                     u3000 1C90  
                   u3001 1C8C                     u3010 1CBC                     u3011 1CB8  
                   u3100 1D9E                     u3020 1CCC                     u3101 1D9A  
                   u3021 1CC8                     u3110 1DB0                     u3030 1CE8  
                   u3111 1DAC                     u3031 1CE4                     u4000 3816  
                   u3120 1DC0                     u3040 1CF8                     u3200 31F4  
                   u4001 3812                     u3121 1DBC                     u3041 1CF4  
                   u4010 30DE                     u3130 1DE0                     u3050 1D0A  
                   u3210 3212                     u4011 30DA                     u3131 1DDC  
                   u3051 1D06                     u3211 320E                     u4020 311C  
                   u3140 1DF2                     u3060 1D20                     u4100 3036  
                   u3220 323A                     u3300 3926                     u4021 3118  
                   u3141 1DEE                     u3061 1D1C                     u4101 3032  
                   u3221 3236                     u3205 31EA                     u4030 313A  
                   u3150 1E0E                     u3070 1D36                     u4110 305E  
                   u3230 3264                     u3310 393C                     u4031 3136  
                   u3151 1E0A                     u3071 1D32                     u4111 305A  
                   u3231 3260                     u3311 3938                     u5000 3346  
                   u4040 315A                     u3080 1D4A                     u4120 307E  
                   u3400 2C08                     u3320 2A9C                     u3160 354C  
                   u4200 0978                     u5001 3342                     u4041 3156  
                   u3081 1D46                     u4121 307A                     u3401 2C04  
                   u3161 3548                     u4201 0974                     u5010 3360  
                   u4050 31AA                     u3090 1D64                     u4130 308E  
                   u3250 329E                     u3410 2C44                     u3330 2ACA  
                   u3170 356E                     u4210 09A8                     u5011 335C  
                   u4051 31A6                     u3091 1D60                     u4131 308A  
                   u3251 3298                     u3411 2C40                     u3331 2AC6  
                   u3171 356A                     u4211 09A2                     u5020 337A  
                   u5100 3880                     u3420 3CF6                     u4140 3A74  
                   u3500 279C                     u4060 3CA4                     u3260 32A0  
                   u3340 2AEC                     u2700 3496                     u3180 35C4  
                   u4300 0C1E                     u4220 09AA                     u5021 3376  
                   u3421 3CF0                     u4141 3A70                     u3501 2798  
                   u4061 3CA0                     u3245 3276                     u3341 2AE8  
                   u3325 2A92                     u2701 3492                     u3181 35C0  
                   u4301 0C1A                     u5030 3394                     u5110 3890  
                   u3430 3CF8                     u4150 3AA2                     u3510 27DC  
                   u4070 2FC0                     u2710 34BE                     u3190 35D4  
                   u3270 399C                     u4310 0C44                     u4230 09C0  
                   u5031 3390                     u5111 388C                     u4151 3A9E  
                   u3511 27D8                     u4071 2FBC                     u2711 34BA  
                   u3191 35D0                     u4311 0C40                     u4231 09BC  
                   u5120 3D7E                     u5200 2DBE                     u3600 2956  
                   u3520 2852                     u3440 26D4                     u2800 19E0  
                   u4080 2FF4                     u3360 2B58                     u2720 34F4  
                   u3280 39AE                     u4400 0D4C                     u4320 0C56  
                   u4240 0A4C                     u4160 08C0                     u5040 38EA  
                   u5121 3D7A                     u5201 2DBA                     u3601 2952  
                   u3521 284E                     u3441 26D0                     u2801 19DC  
                   u3361 2B54                     u2721 34F0                     u3281 39AA  
                   u4401 0D48                     u4321 0C52                     u4241 0A48  
                   u4161 08BC                     u5041 38E6                     u5050 3B12  
                   u5210 2DF8                     u5130 2C78                     u3610 296C  
                   u3530 2874                     u3450 26E6                     u2810 19F6  
                   u4090 3022                     u3370 2B7C                     u2730 3C16  
                   u3290 3924                     u4410 0D62                     u4330 0C78  
                   u4250 0A7C                     u4170 0910                     u5051 3B0E  
                   u5211 2DF4                     u5131 2C74                     u5107 3876  
                   u3611 2968                     u3531 2870                     u3451 26E2  
                   u2811 19F2                     u4091 301E                     u3355 2B00  
                   u2731 3C12                     u3291 391E                     u4411 0D5E  
                   u4331 0C74                     u4251 0A76                     u4171 090C  
                   u5060 3B3C                     u5220 2E06                     u5140 2C86  
                   u3620 2980                     u3540 289E                     u3460 26F6  
                   u3700 230C                     u2900 1B30                     u2820 1A08  
                   u3380 2B98                     u3356 2B0A                     u2740 3D26  
                   u4500 10BE                     u4420 0D70                     u4340 0C9E  
                   u4260 0A7E                     u4180 091E                     u5300 16C4  
                   u5061 3B38                     u5221 2E02                     u5141 2C82  
                   u3621 297C                     u3541 289A                     u3461 26F2  
                   u3701 2308                     u2901 1B2C                     u2821 1A04  
                   u4085 2FEA                     u3381 2B94                     u3357 2B1A  
                   u2741 3D22                     u3277 3992                     u4501 10BA  
                   u4421 0D6C                     u4341 0C9A                     u4181 091A  
                   u5301 16C0                     u5070 3D4E                     u5150 2CE2  
                   u3630 299A                     u3550 28C2                     u3470 273A  
                   u3710 231E                     u2910 1B50                     u2830 1A18  
                   u3390 2BEC                     u2750 3C86                     u4510 10D0  
                   u4430 0D9A                     u4350 0CB4                     u4270 0A94  
                   u4190 0930                     u5310 16DC                     u5071 3D4A  
                   u5151 2CDE                     u3631 2996                     u3551 28BE  
                   u3471 2736                     u3711 231A                     u2911 1B4C  
                   u2831 1A14                     u3375 2B72                     u2751 3C80  
                   u4511 10CC                     u4431 0D96                     u4351 0CB0  
                   u4271 0A90                     u4191 092C                     u5311 16D8  
                   u5160 2D38                     u5080 3838                     u3640 29E2  
                   u3560 28D8                     u3480 274C                     u3800 25BE  
                   u3720 232E                     u2920 1B5E                     u2840 1A54  
                   u2760 3C88                     u4600 12A2                     u4520 10DE  
                   u4440 0EE2                     u4360 0CD0                     u4280 0B18  
                   u5320 17FC                     u5161 2D34                     u5081 3834  
                   u3641 29DE                     u3561 28D4                     u3481 2748  
                   u3801 25BA                     u3721 232A                     u2921 1B5A  
                   u2841 1A50                     u4601 129E                     u4521 10DA  
                   u4441 0EDE                     u4361 0CCC                     u4281 0B14  
                   u5321 17F8                     u5170 2D82                     u5090 3858  
                   u3650 2A12                     u3570 28F6                     u3490 275C  
                   u3810 25D2                     u3730 2364                     u2930 1B6E  
                   u2850 1A62                     u2770 197C                     u2690 3484  
                   u4610 12D0                     u4530 10F8                     u4450 0F48  
                   u4370 0D06                     u4290 0BAC                     u5330 180A  
                   u5171 2D7E                     u3651 2A0E                     u3571 28F2  
                   u3491 2758                     u3811 25CE                     u3731 2360  
                   u2931 1B6A                     u2851 1A5E                     u2771 1978  
                   u3395 2BE2                     u2691 3480                     u4611 12CC  
                   u4531 10F4                     u4451 0F44                     u4371 0D02  
                   u4291 0BA8                     u5331 1806                     u5180 2DA0  
                   u4700 2EA4                     u3900 368E                     u3660 2A40  
                   u3580 2916                     u3820 25EC                     u3740 2374  
                   u2940 1BA0                     u2860 1AD0                     u2780 198E  
                   u4620 1354                     u4540 1106                     u4460 0F90  
                   u4380 0D2C                     u5340 1822                     u5181 2D9C  
                   u4701 2EA0                     u3901 368A                     u3661 2A3C  
                   u3581 2912                     u3821 25E8                     u3741 2370  
                   u2941 1B9C                     u2861 1ACC                     u2781 198A  
                   u4621 1350                     u4541 1102                     u4461 0F8C  
                   u4381 0D28                     u5341 181E                     u5190 2DB0  
                   u4710 2F5A                     u3910 36B4                     u3590 2928  
                   u3830 2634                     u3750 24EE                     u3670 22AA  
                   u2950 1BAE                     u2870 1AE8                     u2790 199E  
                   u4630 136E                     u4550 115E                     u4470 0FA0  
                   u4390 0D3E                     u5350 1942                     u5191 2DAC  
                   u4711 2F54                     u3911 36B0                     u3591 2924  
                   u3831 2630                     u3671 22A6                     u2951 1BAA  
                   u2871 1AE2                     u2791 199A                     u4631 136A  
                   u4551 115A                     u4471 0F9C                     u4391 0D3A  
                   u5351 193E                     u5407 1534                     u4800 3BAA  
                   u4720 2F5C                     u3920 36D8                     u3840 2662  
                   u3760 2548                     u3680 22BC                     u2960 1BCC  
                   u2880 1AEA                     u4640 1386                     u4560 1230  
                   u4480 1008                     u5360 1950                     u5280 1596  
                   u4801 3BA6                     u5097 384E                     u3921 36D4  
                   u3841 265E                     u3761 2544                     u3681 22B8  
                   u2961 1BC8                     u4641 1382                     u4561 122C  
                   u4481 1004                     u5361 194C                     u5281 1592  
                   u5417 1574                     u4730 2F72                     u3930 36F2  
                   u3850 269C                     u3770 2568                     u3690 22CC  
                   u2970 1C04                     u2890 1B12                     u4650 13E4  
                   u4570 124C                     u4490 10AC                     u5290 16B6  
                   u4731 2F6E                     u3931 36EE                     u3851 2698  
                   u3771 2564                     u3755 24E4                     u3691 22C8  
                   u2971 1C00                     u2891 1B0E                     u4651 13DE  
                   u4571 1248                     u4491 10A8                     u5291 16B2  
                   u5427 15C2                     u4740 2F84                     u3860 3614  
                   u3940 370C                     u3780 257A                     u2980 1C4A  
                   u4660 13E6                     u4580 125E                     u4900 2042  
                   u4820 1E46                     u4741 2F80                     u3861 3610  
                   u3941 3708                     u3781 2576                     u2981 1C46  
                   u4581 125A                     u4901 203E                     u4821 1E42  
                   u5437 169A                     u3870 362E                     u3950 372A  
                   u3790 25A8                     u2990 1C80                     u4670 13FC  
                   u4590 126C                     u4750 33C6                     u4910 20F0  
                   u4830 1E8E                     u4815 39CC                     u3871 362A  
                   u3951 3726                     u3791 25A4                     u2991 1C7C  
                   u4671 13F8                     u4591 1268                     u4751 33C2  
                   u4911 20EC                     u4831 1E8A                     u5447 1708  
                   u4680 2E52                     u3880 3654                     u3960 3740  
                   u4760 33F8                     u4920 2156                     u4840 1EC8  
                   u4681 2E4E                     u3881 3650                     u3961 373C  
                   u4761 33F4                     u4921 2150                     u4841 1EC4  
                   u5457 17E0                     u5377 1480                     u4690 2E88  
                   u3890 3672                     u3970 3764                     u4770 3414  
                   u4930 2158                     u4850 1F70                     u4691 2E84  
                   u3891 366E                     u3971 3760                     u4771 3410  
                   u4851 1F6A                     u5467 184E                     u5387 14BA  
                   u3980 37A4                     u4780 3426                     u4940 2170  
                   u4860 1F72                     u3981 37A0                     u4781 3422  
                   u4941 216C                     u5477 1926                     u5397 14FA  
                   u3990 37E2                     u4790 344E                     u4950 220C  
                   u4870 1F8A                     u5487 3E18                     u3991 37DE  
                   u4791 344A                     u4951 2208                     u4871 1F86  
                   u4960 3AC4                     u4880 1FBC                     u4961 3AC0  
                   u4881 1FB8                     u4970 32FE                     u4890 1FFE  
                   u4971 32FA                     u4891 1FFA                     u4980 3312  
                   u4981 330E                     u4990 332C                     u4991 3328  
           __CFG_PWRT$ON 000000                     _dbuf 0100                     _atoi 2E1A  
                   _main 1448                     _prec 00DB                     _nout 00D7  
                   pad@i 0018                     pad@p 0015                     fsr0h 000FEA  
                   fsr1h 000FE2                     indf0 000FEF                     fsr2h 000FDA  
                   fsr0l 000FE9                     indf2 000FDF                     fsr1l 000FE1  
                   pad@w 001A                     fsr2l 000FD9         __end_of_ADC_Init 3DD6  
       __end_of_ADC_Read 3B48            ___fpclassifyf 31B4   __size_of_WriteDataXLCD 0052  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
          __CFG_IESO$OFF 000000          ___fldiv@new_exp 0039             _tolower$1242 000D  
          __CFG_MCLRE$ON 000000             ___param_bank 000000                    ??_pad 0017  
           _WriteCmdXLCD 3C18         __end_of_LCD_Init 3D8C            __CFG_PLLDIV$1 000000  
         __CFG_CCP2MX$ON 000000            ___fltol@sign1 0009                    ?_atoi 0008  
          ?_SetDDRamAddr 0001          __end_of___fladd 1E22                    ?_main 0001  
        __end_of___fldiv 2A54          __end_of___awdiv 36C6          __end_of___flneg 3CC6  
                  _ADRES 000FC3                    STR_10 0833                    STR_11 087F  
                  STR_20 0894                    STR_12 0884                    STR_13 088C  
                  STR_22 0894                    STR_16 0888                    STR_17 0890  
        __end_of___awmod 3776          __end_of___flmul 26BA          __end_of___flsub 3B8E  
        __end_of___fltol 30B0          ___awdiv@divisor 0003          ___awdiv@counter 0005  
           vfpfcnvrt@fmt 009F                    _PORTD 000F83            __CFG_USBDIV$1 000000  
                  _TRISA 000F92                    _TRISD 000F95            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  _datos 00E1                    _flags 00DD                    _fputc 3472  
                  _fputs 3BD4          __end_of_isdigit 3CFE                    atoi@n 0015  
                  pad@fp 0011                    atoi@s 0008                    _width 00D9  
                  _putch 3E30          __end_of_isspace 3AAE          __end_of_isupper 3C8E  
                  tablat 000FF5                    status 000FD8          __end_of_sprintf 3A5C  
         ?___fpclassifyf 0001          __end_of_tolower 3954          __end_of_strncmp 3472  
         __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000      __size_of_LCD_gotoXY 0030  
        __initialization 3DD6              LCD_gotoXY@x 0002              LCD_gotoXY@y 0004  
           __end_of_atoi 2FAA             __end_of_main 1962         __end_of_BusyXLCD 3BD4  
  __size_of_DelayPORXLCD 0010           ??_SetDDRamAddr 0001         __end_of_OpenXLCD 339C  
                 ??_atoi 000A                   ??_main 00C9            __activetblptr 000002  
          _WriteDataXLCD 3AAE                   _ADCON0 000FC2                   ?_fputc 0001  
                 ?_fputs 000A         ___awdiv@dividend 0001                   ?_putch 0001  
       __end_of___xxtofl 2E1A             _DelayPORXLCD 3E12           __CFG_XINST$OFF 000000  
           vfprintf@cfmt 00B5                   ___flge 30B0                   ___fleq 3776  
              ??___fladd 0009                   ___wmul 3D8C                ??___fldiv 0030  
              ??___awdiv 0005                ??___flneg 0005           __CFG_STVREN$ON 000000  
              ??___awmod 0005                ??___flmul 0017                ??___flsub 0030  
              ??___fltol 0005                   _efgtoa 0898                   _floorf 2A54  
                 clear_0 3DDC                   clear_1 3DE8         ___awdiv@quotient 0007  
        ___awmod@divisor 0003          ___awmod@counter 0005                   pad@buf 0013  
         ?_WriteDataXLCD 0001                   _strcpy 3954                   _strlen 3CFE  
                 fputc@c 0001                   fputs@c 000E                   fputs@i 000F  
                 fputs@s 000A                ??_isdigit 0003       __size_of_Port_Init 000E  
        ___fpclassifyf@e 0009                ?_ADC_Init 0001          ___fpclassifyf@u 000B  
              ?_ADC_Read 0001          ___fpclassifyf@x 0001             __mediumconst 0000  
              ??_isspace 0003                   tblptrh 000FF7                ??_isupper 0003  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0001  
       __end_of_vfprintf 38F4                ??_sprintf 0060                ??_tolower 0009  
              ??_strncmp 0007               ___flge@ff1 0028               ___flge@ff2 002C  
        ??___fpclassifyf 0005             ___xxtofl@arg 000B             ___xxtofl@exp 000A  
           ___xxtofl@val 0001               ___fleq@ff1 0001               ___fleq@ff2 0005  
             __accesstop 0060  __end_of__initialization 3DEE                ?_LCD_Init 0001  
             ___flneg@f1 0001            ___rparam_used 000001               ___fltol@f1 0001  
         __pcstackCOMRAM 0001            __end_of_fputc 353C            __end_of_fputs 3C18  
          __end_of_putch 3E32             ??_LCD_gotoXY 0006               ??_ADC_Init 0001  
             ??_ADC_Read 0003                  ??_fputc 0005                  ??_fputs 000E  
 __size_of_DelayFor18TCY 001A                  ??_putch 0001               __pbssBANK0 00CB  
             __pbssBANK1 0100                ?_BusyXLCD 0001          WriteCmdXLCD@cmd 0001  
             ??_LCD_Init 0006     __end_of_SetDDRamAddr 3A0A                ?_OpenXLCD 0001  
      __end_of_Port_Init 3E30               _efgtoa$631 006D               _efgtoa$625 0069  
             _efgtoa$626 006B               _efgtoa$635 006F               _efgtoa$636 0071  
             _efgtoa$637 0073       __end_of_LCD_gotoXY 3D64                  ?___flge 0028  
                ?___fleq 0001        WriteDataXLCD@data 0001                  ?___wmul 0001  
                ?_efgtoa 0055                  ?_floorf 0041          ??_WriteDataXLCD 0001  
             ADC_Read@ch 0003                  ?_strcpy 0001                  ?_strlen 0001  
              ?___xxtofl 0001       __size_of_vfpfcnvrt 046E       __size_of_putrsXLCD 0072  
             ??_BusyXLCD 0001          __CFG_VREGEN$OFF 000000               ??_OpenXLCD 0005  
                __Hparam 0000                  __Lparam 0000          __size_of___flge 0104  
        __size_of___fleq 00AA                  ___fladd 1962                  ___fldiv 26BA  
                ___awdiv 3602            _DelayFor18TCY 3DF8                  ___flneg 3C8E  
                ___awmod 36C6                  ___flmul 2290                  ___flsub 3B48  
                ___fltol 2FAA          __size_of___wmul 0026                ?_vfprintf 00AF  
           __psmallconst 0800          __size_of_efgtoa 0BB0          __size_of_floorf 0212  
                __pcinit 3DD6          putrsXLCD@buffer 0002                  __ramtop 0800  
                __ptext0 1448                  __ptext1 3A0A                  __ptext2 3892  
                __ptext3 1E22                  __ptext4 339C                  __ptext5 0898  
                __ptext6 38F4                  __ptext7 3C56                  __ptext8 3954  
                __ptext9 353C          __size_of_strcpy 005C          __size_of_strlen 0036  
           __size_of_pad 00C6                  _isdigit 3CC6               ??___xxtofl 0005  
       ___awmod@dividend 0001                  _isspace 3A5C                  _isupper 3C56  
                efgtoa@c 005B                  efgtoa@d 007D                  efgtoa@e 0095  
                efgtoa@f 0057                  efgtoa@g 0091                  efgtoa@h 0087  
                efgtoa@i 008F                  efgtoa@l 008B                  efgtoa@m 0079  
                efgtoa@n 0097                  efgtoa@p 0081                  efgtoa@t 0075  
                efgtoa@u 0099                  efgtoa@w 0084                  _tension 00D3  
                atoi@neg 000E                  _sprintf 3A0A                  _tolower 38F4  
                _strncmp 339C     end_of_initialization 3DEE                  floorf@e 004F  
                floorf@m 004B                  floorf@u 0051                  floorf@x 0041  
                fputc@fp 0003            __Lmediumconst 0000                  fputs@fp 000C  
      __end_of_vfpfcnvrt 2290               efgtoa@mode 0086               efgtoa@sign 007F  
         ?_DelayFor18TCY 0001                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               ??_vfprintf 0060  
                strcpy@d 0009                  strlen@a 0003                  strcpy@s 0007  
                strlen@s 0001        __end_of_putrsXLCD 3892                _PORTBbits 000F81  
            ___fladd@grs 0010            ___xxtofl@sign 0009                _TRISBbits 000F93  
              _TRISDbits 000F95              ___fldiv@grs 003B              ___fldiv@rem 0034  
  __size_of_SetDDRamAddr 005A        __size_of_ADC_Init 0024        __size_of_ADC_Read 0048  
            ___flmul@grs 001C        __size_of_LCD_Init 0028           __end_of___flge 31B4  
         __end_of___fleq 3820              vfpfcnvrt@ap 00A1              vfpfcnvrt@ct 00AB  
            vfpfcnvrt@fp 009D           __end_of___wmul 3DB2           __end_of_efgtoa 1448  
         __end_of_floorf 2C66               floorf@F524 00CB             _SetDDRamAddr 39B0  
     SetDDRamAddr@DDaddr 0004           __end_of_strcpy 39B0           __end_of_strlen 3D34  
    start_initialization 3DD6              __end_of_pad 3602    __end_of___fpclassifyf 32B2  
      __size_of_BusyXLCD 0046          ??_DelayFor18TCY 0001              vfprintf@fmt 00B1  
      __size_of_OpenXLCD 00EA                 ??___flge 0030                 ??___fleq 0009  
               ??___wmul 0005                _Port_Init 3E22                 ??_efgtoa 0060  
          ?_WriteCmdXLCD 0001                 ??_floorf 0045         __CFG_LPT1OSC$OFF 000000  
               ??_strcpy 0005                 ??_strlen 0003                ___fladd@a 0005  
              ___fladd@b 0001                ___fldiv@a 002C                ___fldiv@b 0028  
              ___flmul@a 0013                ___flmul@b 000F                ___flsub@a 002C  
              ___flsub@b 0028            __pcstackBANK0 0060        __size_of___xxtofl 01B4  
              _atoi$1126 0010                _atoi$1127 0014                _atoi$1128 0012  
         ??_WriteCmdXLCD 0001                 ?___fladd 0001                 ?___fldiv 0028  
               ?___awdiv 0001                 ?___flneg 0001                 ?___awmod 0001  
               ?___flmul 000F                 ?___flsub 0028                 ?___fltol 0001  
             ?_Port_Init 0001    __end_of_WriteDataXLCD 3B00        __size_of_vfprintf 0062  
            __smallconst 0800                 ?_isdigit 0001                 _ADC_Init 3DB2  
               _ADC_Read 3B00                 ?_isspace 0001                 ?_isupper 0001  
               ?_sprintf 00B7                 ?_tolower 0007           __size_of_fputc 00CA  
         __size_of_fputs 0044                 ?_strncmp 0001           __size_of_putch 0002  
               _LCD_Init 3D64           ___wmul@product 0005                 _LATDbits 000F8C  
          ?_DelayPORXLCD 0001          OpenXLCD@lcdtype 0005         __CFG_WDTPS$32768 000000  
              _vfpfcnvrt 1E22               _ADCON0bits 000FC2               _ADCON1bits 000FC1  
             _ADCON2bits 000FC0        ___wmul@multiplier 0001                _putrsXLCD 3820  
           _isspace$1157 0007               vfpfcnvrt@c 00AE               vfpfcnvrt@f 00A7  
            _INTCON2bits 000FF1                 _BusyXLCD 3B8E           ??_DelayPORXLCD 0001  
               _OpenXLCD 32B2                 __Hrparam 0000               vfprintf@ap 00B3  
               __Lrparam 0000               vfprintf@fp 00AF              ??_Port_Init 0001  
       __size_of___fladd 04C0         __size_of___fldiv 039A         __size_of___awdiv 00C4  
       __size_of___flneg 0038         __size_of___awmod 00B0         __size_of___flmul 042A  
       __size_of___flsub 0046         __size_of___fltol 0106               ?_vfpfcnvrt 009D  
     ___fpclassifyf@F463 00CF               sprintf@fmt 00B9               ?_putrsXLCD 0002  
               ___xxtofl 2C66         __size_of_isdigit 0038         __size_of_isspace 0052  
               __ptext10 3CFE                 __ptext11 3BD4                 __ptext20 2290  
               __ptext12 3472                 __ptext21 30B0                 __ptext13 3E30  
               __ptext30 3820                 __ptext22 3776                 __ptext14 2A54  
               __ptext31 3AAE                 __ptext23 26BA                 __ptext15 31B4  
               __ptext40 3B8E                 __ptext32 2C66                 __ptext24 36C6  
               __ptext16 2FAA                 __ptext41 3DF8                 __ptext33 3E22  
               __ptext25 3602                 __ptext17 3B48                 __ptext42 3B00  
               __ptext34 3D34                 __ptext26 2E1A                 __ptext18 1962  
               __ptext43 3DB2                 __ptext35 3D64                 __ptext27 3A5C  
               __ptext19 3C8E                 __ptext36 32B2                 __ptext28 3CC6  
               __ptext37 3C18                 __ptext29 3D8C                 __ptext38 39B0  
               __ptext39 3E12         __size_of_isupper 0038     __end_of_WriteCmdXLCD 3C56  
       __size_of_sprintf 0052         __size_of_tolower 0060               strcpy@dest 0001  
       __size_of_strncmp 00D6            __size_of_atoi 0190            __size_of_main 051A  
               efgtoa@fp 0055                 efgtoa@ne 007B                 efgtoa@pp 0077  
               efgtoa@ou 0065                 _vfprintf 3892             _valorLectura 00DF  
  __CFG_CPUDIV$OSC1_PLL2 000000               _LCD_gotoXY 3D34                 isdigit@c 0001  
              sprintf@ap 00C1                 isspace@c 0001                strcpy@src 0003  
               isupper@c 0001                strncmp@_l 0001                strncmp@_r 0003  
  __end_of_DelayFor18TCY 3E12              efgtoa@nmode 0083              ??_vfpfcnvrt 005C  
          _vfpfcnvrt$651 00A3            _vfpfcnvrt$655 00A5                 sprintf@f 00C3  
               tolower@c 0007                 sprintf@s 00B7   __size_of___fpclassifyf 00FE  
   __end_of_DelayPORXLCD 3E22              ??_putrsXLCD 0004                 strncmp@l 0008  
               strncmp@n 0005                 strncmp@r 000A            ___fladd@signs 000D  
           ___fladd@aexp 000E             ___fladd@bexp 000F  
