

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Mar 29 19:42:25 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56  0000                     
    57                           ; Version 2.10
    58                           ; Generated 31/07/2019 GMT
    59                           ; 
    60                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F4550 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     _ADRES	set	4035
    92  0000                     _ADCON0bits	set	4034
    93  0000                     _ADCON2bits	set	4032
    94  0000                     _ADCON0	set	4034
    95  0000                     _ADCON1bits	set	4033
    96  0000                     _TRISA	set	3986
    97  0000                     _LATDbits	set	3980
    98  0000                     _TRISDbits	set	3989
    99  0000                     _TRISD	set	3989
   100  0000                     _PORTD	set	3971
   101                           
   102                           	psect	smallconst
   103  000800                     __psmallconst:
   104                           	opt callstack 0
   105  000800  00                 	db	0
   106  000801                     STR_1:
   107  000801  2A                 	db	42
   108  000802  2A                 	db	42
   109  000803  20                 	db	32
   110  000804  43                 	db	67	;'C'
   111  000805  61                 	db	97	;'a'
   112  000806  6E                 	db	110	;'n'
   113  000807  61                 	db	97	;'a'
   114  000808  6C                 	db	108	;'l'
   115  000809  65                 	db	101	;'e'
   116  00080A  73                 	db	115	;'s'
   117  00080B  20                 	db	32
   118  00080C  41                 	db	65	;'A'
   119  00080D  44                 	db	68	;'D'
   120  00080E  43                 	db	67	;'C'
   121  00080F  20                 	db	32
   122  000810  2A                 	db	42
   123  000811  2A                 	db	42
   124  000812  00                 	db	0
   125  000813                     STR_2:
   126  000813  20                 	db	32
   127  000814  20                 	db	32
   128  000815  42                 	db	66	;'B'
   129  000816  79                 	db	121	;'y'
   130  000817  3A                 	db	58	;':'
   131  000818  20                 	db	32
   132  000819  46                 	db	70	;'F'
   133  00081A  65                 	db	101	;'e'
   134  00081B  72                 	db	114	;'r'
   135  00081C  6E                 	db	110	;'n'
   136  00081D  61                 	db	97	;'a'
   137  00081E  6E                 	db	110	;'n'
   138  00081F  64                 	db	100	;'d'
   139  000820  6F                 	db	111	;'o'
   140  000821  20                 	db	32
   141  000822  20                 	db	32
   142  000823  00                 	db	0
   143  000824                     STR_3:
   144  000824  54                 	db	84	;'T'
   145  000825  65                 	db	101	;'e'
   146  000826  6E                 	db	110	;'n'
   147  000827  73                 	db	115	;'s'
   148  000828  69                 	db	105	;'i'
   149  000829  6F                 	db	111	;'o'
   150  00082A  6E                 	db	110	;'n'
   151  00082B  20                 	db	32
   152  00082C  6D                 	db	109	;'m'
   153  00082D  65                 	db	101	;'e'
   154  00082E  64                 	db	100	;'d'
   155  00082F  69                 	db	105	;'i'
   156  000830  64                 	db	100	;'d'
   157  000831  61                 	db	97	;'a'
   158  000832  3A                 	db	58	;':'
   159  000833  20                 	db	32
   160  000834  00                 	db	0
   161  000835                     STR_4:
   162  000835  25                 	db	37
   163  000836  2E                 	db	46
   164  000837  32                 	db	50	;'2'
   165  000838  66                 	db	102	;'f'
   166  000839  00                 	db	0
   167  00083A                     STR_5:
   168  00083A  49                 	db	73	;'I'
   169  00083B  4E                 	db	78	;'N'
   170  00083C  46                 	db	70	;'F'
   171  00083D  00                 	db	0
   172  00083E                     STR_9:
   173  00083E  4E                 	db	78	;'N'
   174  00083F  41                 	db	65	;'A'
   175  000840  4E                 	db	78	;'N'
   176  000841  00                 	db	0
   177  000842                     STR_6:
   178  000842  69                 	db	105	;'i'
   179  000843  6E                 	db	110	;'n'
   180  000844  66                 	db	102	;'f'
   181  000845  00                 	db	0
   182  000846                     STR_10:
   183  000846  6E                 	db	110	;'n'
   184  000847  61                 	db	97	;'a'
   185  000848  6E                 	db	110	;'n'
   186  000849  00                 	db	0
   187  00084A                     STR_13:
   188  00084A  6C                 	db	108	;'l'
   189  00084B  66                 	db	102	;'f'
   190  00084C  00                 	db	0
   191  0000                     
   192                           ; #config settings
   193  00084D  00                 	db	0	; dummy byte at the end
   194  0000                     
   195                           	psect	cinit
   196  0039EE                     __pcinit:
   197                           	opt callstack 0
   198  0039EE                     start_initialization:
   199                           	opt callstack 0
   200  0039EE                     __initialization:
   201                           	opt callstack 0
   202                           
   203                           ; Clear objects allocated to BANK1 (80 bytes)
   204  0039EE  EE01  F000         	lfsr	0,__pbssBANK1
   205  0039F2  0E50               	movlw	80
   206  0039F4                     clear_0:
   207  0039F4  6AEE               	clrf	postinc0,c
   208  0039F6  06E8               	decf	wreg,f,c
   209  0039F8  E1FD               	bnz	clear_0
   210                           
   211                           ; Clear objects allocated to BANK0 (42 bytes)
   212  0039FA  EE00  F0CB         	lfsr	0,__pbssBANK0
   213  0039FE  0E2A               	movlw	42
   214  003A00                     clear_1:
   215  003A00  6AEE               	clrf	postinc0,c
   216  003A02  06E8               	decf	wreg,f,c
   217  003A04  E1FD               	bnz	clear_1
   218  003A06                     end_of_initialization:
   219                           	opt callstack 0
   220  003A06                     __end_of__initialization:
   221                           	opt callstack 0
   222  003A06  0E00               	movlw	low (__Lmediumconst shr (0+16))
   223  003A08  6EF8               	movwf	tblptru,c
   224  003A0A  0100               	movlb	0
   225  003A0C  EF5B  F014         	goto	_main	;jump to C main() function
   226                           
   227                           	psect	bssBANK0
   228  0000CB                     __pbssBANK0:
   229                           	opt callstack 0
   230  0000CB                     floorf@F524:
   231                           	opt callstack 0
   232  0000CB                     	ds	4
   233  0000CF                     ___fpclassifyf@F463:
   234                           	opt callstack 0
   235  0000CF                     	ds	4
   236  0000D3                     _tension:
   237                           	opt callstack 0
   238  0000D3                     	ds	4
   239  0000D7                     _nout:
   240                           	opt callstack 0
   241  0000D7                     	ds	2
   242  0000D9                     _width:
   243                           	opt callstack 0
   244  0000D9                     	ds	2
   245  0000DB                     _prec:
   246                           	opt callstack 0
   247  0000DB                     	ds	2
   248  0000DD                     _flags:
   249                           	opt callstack 0
   250  0000DD                     	ds	2
   251  0000DF                     _valorLectura:
   252                           	opt callstack 0
   253  0000DF                     	ds	2
   254  0000E1                     _datos:
   255                           	opt callstack 0
   256  0000E1                     	ds	20
   257                           
   258                           	psect	bssBANK1
   259  000100                     __pbssBANK1:
   260                           	opt callstack 0
   261  000100                     _dbuf:
   262                           	opt callstack 0
   263  000100                     	ds	80
   264                           
   265                           	psect	cstackBANK0
   266  000060                     __pcstackBANK0:
   267                           	opt callstack 0
   268  000060                     ??_efgtoa:
   269                           
   270                           ; 1 bytes @ 0x0
   271  000060                     	ds	5
   272  000065                     efgtoa@ou:
   273                           	opt callstack 0
   274                           
   275                           ; 4 bytes @ 0x5
   276  000065                     	ds	4
   277  000069                     _efgtoa$477:
   278                           	opt callstack 0
   279                           
   280                           ; 2 bytes @ 0x9
   281  000069                     	ds	2
   282  00006B                     _efgtoa$478:
   283                           	opt callstack 0
   284                           
   285                           ; 2 bytes @ 0xB
   286  00006B                     	ds	2
   287  00006D                     _efgtoa$483:
   288                           	opt callstack 0
   289                           
   290                           ; 2 bytes @ 0xD
   291  00006D                     	ds	2
   292  00006F                     _efgtoa$487:
   293                           	opt callstack 0
   294                           
   295                           ; 2 bytes @ 0xF
   296  00006F                     	ds	2
   297  000071                     _efgtoa$488:
   298                           	opt callstack 0
   299                           
   300                           ; 2 bytes @ 0x11
   301  000071                     	ds	2
   302  000073                     _efgtoa$489:
   303                           	opt callstack 0
   304                           
   305                           ; 2 bytes @ 0x13
   306  000073                     	ds	2
   307  000075                     efgtoa@t:
   308                           	opt callstack 0
   309                           
   310                           ; 2 bytes @ 0x15
   311  000075                     	ds	2
   312  000077                     efgtoa@pp:
   313                           	opt callstack 0
   314                           
   315                           ; 2 bytes @ 0x17
   316  000077                     	ds	2
   317  000079                     efgtoa@m:
   318                           	opt callstack 0
   319                           
   320                           ; 2 bytes @ 0x19
   321  000079                     	ds	2
   322  00007B                     efgtoa@ne:
   323                           	opt callstack 0
   324                           
   325                           ; 2 bytes @ 0x1B
   326  00007B                     	ds	2
   327  00007D                     efgtoa@d:
   328                           	opt callstack 0
   329                           
   330                           ; 2 bytes @ 0x1D
   331  00007D                     	ds	2
   332  00007F                     efgtoa@sign:
   333                           	opt callstack 0
   334                           
   335                           ; 2 bytes @ 0x1F
   336  00007F                     	ds	2
   337  000081                     efgtoa@p:
   338                           	opt callstack 0
   339                           
   340                           ; 2 bytes @ 0x21
   341  000081                     	ds	2
   342  000083                     efgtoa@nmode:
   343                           	opt callstack 0
   344                           
   345                           ; 1 bytes @ 0x23
   346  000083                     	ds	1
   347  000084                     efgtoa@w:
   348                           	opt callstack 0
   349                           
   350                           ; 2 bytes @ 0x24
   351  000084                     	ds	2
   352  000086                     efgtoa@mode:
   353                           	opt callstack 0
   354                           
   355                           ; 1 bytes @ 0x26
   356  000086                     	ds	1
   357  000087                     efgtoa@h:
   358                           	opt callstack 0
   359                           
   360                           ; 4 bytes @ 0x27
   361  000087                     	ds	4
   362  00008B                     efgtoa@l:
   363                           	opt callstack 0
   364                           
   365                           ; 4 bytes @ 0x2B
   366  00008B                     	ds	4
   367  00008F                     efgtoa@i:
   368                           	opt callstack 0
   369                           
   370                           ; 2 bytes @ 0x2F
   371  00008F                     	ds	2
   372  000091                     efgtoa@g:
   373                           	opt callstack 0
   374                           
   375                           ; 4 bytes @ 0x31
   376  000091                     	ds	4
   377  000095                     efgtoa@e:
   378                           	opt callstack 0
   379                           
   380                           ; 2 bytes @ 0x35
   381  000095                     	ds	2
   382  000097                     efgtoa@n:
   383                           	opt callstack 0
   384                           
   385                           ; 2 bytes @ 0x37
   386  000097                     	ds	2
   387  000099                     efgtoa@u:
   388                           	opt callstack 0
   389                           
   390                           ; 4 bytes @ 0x39
   391  000099                     	ds	4
   392  00009D                     ?_vfpfcnvrt:
   393                           	opt callstack 0
   394  00009D                     vfpfcnvrt@fp:
   395                           	opt callstack 0
   396                           
   397                           ; 2 bytes @ 0x3D
   398  00009D                     	ds	2
   399  00009F                     vfpfcnvrt@fmt:
   400                           	opt callstack 0
   401                           
   402                           ; 2 bytes @ 0x3F
   403  00009F                     	ds	2
   404  0000A1                     vfpfcnvrt@ap:
   405                           	opt callstack 0
   406                           
   407                           ; 2 bytes @ 0x41
   408  0000A1                     	ds	2
   409  0000A3                     _vfpfcnvrt$503:
   410                           	opt callstack 0
   411                           
   412                           ; 2 bytes @ 0x43
   413  0000A3                     	ds	2
   414  0000A5                     _vfpfcnvrt$507:
   415                           	opt callstack 0
   416                           
   417                           ; 2 bytes @ 0x45
   418  0000A5                     	ds	2
   419  0000A7                     vfpfcnvrt@f:
   420                           	opt callstack 0
   421                           
   422                           ; 4 bytes @ 0x47
   423  0000A7                     	ds	4
   424  0000AB                     vfpfcnvrt@ct:
   425                           	opt callstack 0
   426                           
   427                           ; 3 bytes @ 0x4B
   428  0000AB                     	ds	3
   429  0000AE                     vfpfcnvrt@c:
   430                           	opt callstack 0
   431                           
   432                           ; 1 bytes @ 0x4E
   433  0000AE                     	ds	1
   434  0000AF                     ?_vfprintf:
   435                           	opt callstack 0
   436  0000AF                     vfprintf@fp:
   437                           	opt callstack 0
   438                           
   439                           ; 2 bytes @ 0x4F
   440  0000AF                     	ds	2
   441  0000B1                     vfprintf@fmt:
   442                           	opt callstack 0
   443                           
   444                           ; 2 bytes @ 0x51
   445  0000B1                     	ds	2
   446  0000B3                     vfprintf@ap:
   447                           	opt callstack 0
   448                           
   449                           ; 2 bytes @ 0x53
   450  0000B3                     	ds	2
   451  0000B5                     vfprintf@cfmt:
   452                           	opt callstack 0
   453                           
   454                           ; 2 bytes @ 0x55
   455  0000B5                     	ds	2
   456  0000B7                     ?_sprintf:
   457                           	opt callstack 0
   458  0000B7                     sprintf@s:
   459                           	opt callstack 0
   460                           
   461                           ; 2 bytes @ 0x57
   462  0000B7                     	ds	2
   463  0000B9                     sprintf@fmt:
   464                           	opt callstack 0
   465                           
   466                           ; 2 bytes @ 0x59
   467  0000B9                     	ds	8
   468  0000C1                     sprintf@ap:
   469                           	opt callstack 0
   470                           
   471                           ; 2 bytes @ 0x61
   472  0000C1                     	ds	2
   473  0000C3                     sprintf@f:
   474                           	opt callstack 0
   475                           
   476                           ; 6 bytes @ 0x63
   477  0000C3                     	ds	6
   478  0000C9                     ??_main:
   479                           
   480                           ; 1 bytes @ 0x69
   481  0000C9                     	ds	2
   482                           
   483                           	psect	cstackCOMRAM
   484  000001                     __pcstackCOMRAM:
   485                           	opt callstack 0
   486  000001                     ??_SetDDRamAddr:
   487  000001                     ??_DelayPORXLCD:
   488  000001                     ?_ADC_Read:
   489                           	opt callstack 0
   490  000001                     ?_strlen:
   491                           	opt callstack 0
   492  000001                     ?___fpclassifyf:
   493                           	opt callstack 0
   494  000001                     ?_isupper:
   495                           	opt callstack 0
   496  000001                     ?_isdigit:
   497                           	opt callstack 0
   498  000001                     ?_strncmp:
   499                           	opt callstack 0
   500  000001                     ?_isspace:
   501                           	opt callstack 0
   502  000001                     ?___wmul:
   503                           	opt callstack 0
   504  000001                     ?___awdiv:
   505                           	opt callstack 0
   506  000001                     ?___awmod:
   507                           	opt callstack 0
   508  000001                     ?___fladd:
   509                           	opt callstack 0
   510  000001                     ?___flneg:
   511                           	opt callstack 0
   512  000001                     ?___fltol:
   513                           	opt callstack 0
   514  000001                     ?___xxtofl:
   515                           	opt callstack 0
   516  000001                     WriteCmdXLCD@cmd:
   517                           	opt callstack 0
   518  000001                     WriteDataXLCD@data:
   519                           	opt callstack 0
   520  000001                     ___wmul@multiplier:
   521                           	opt callstack 0
   522  000001                     ___awdiv@dividend:
   523                           	opt callstack 0
   524  000001                     ___awmod@dividend:
   525                           	opt callstack 0
   526  000001                     isdigit@c:
   527                           	opt callstack 0
   528  000001                     isspace@c:
   529                           	opt callstack 0
   530  000001                     isupper@c:
   531                           	opt callstack 0
   532  000001                     fputc@c:
   533                           	opt callstack 0
   534  000001                     strcpy@dest:
   535                           	opt callstack 0
   536  000001                     strlen@s:
   537                           	opt callstack 0
   538  000001                     strncmp@_l:
   539                           	opt callstack 0
   540  000001                     ___fleq@ff1:
   541                           	opt callstack 0
   542  000001                     ___flneg@f1:
   543                           	opt callstack 0
   544  000001                     ___fltol@f1:
   545                           	opt callstack 0
   546  000001                     ___fladd@b:
   547                           	opt callstack 0
   548  000001                     ___xxtofl@val:
   549                           	opt callstack 0
   550  000001                     ___fpclassifyf@x:
   551                           	opt callstack 0
   552                           
   553                           ; 4 bytes @ 0x0
   554  000001                     	ds	1
   555  000002                     LCD_gotoXY@x:
   556                           	opt callstack 0
   557  000002                     putrsXLCD@buffer:
   558                           	opt callstack 0
   559                           
   560                           ; 2 bytes @ 0x1
   561  000002                     	ds	1
   562  000003                     ??_isupper:
   563  000003                     ??_isdigit:
   564  000003                     ??_isspace:
   565  000003                     ADC_Read@ch:
   566                           	opt callstack 0
   567  000003                     ___wmul@multiplicand:
   568                           	opt callstack 0
   569  000003                     ___awdiv@divisor:
   570                           	opt callstack 0
   571  000003                     ___awmod@divisor:
   572                           	opt callstack 0
   573  000003                     fputc@fp:
   574                           	opt callstack 0
   575  000003                     strcpy@src:
   576                           	opt callstack 0
   577  000003                     strlen@a:
   578                           	opt callstack 0
   579  000003                     strncmp@_r:
   580                           	opt callstack 0
   581                           
   582                           ; 2 bytes @ 0x2
   583  000003                     	ds	1
   584  000004                     SetDDRamAddr@DDaddr:
   585                           	opt callstack 0
   586  000004                     LCD_gotoXY@y:
   587                           	opt callstack 0
   588                           
   589                           ; 2 bytes @ 0x3
   590  000004                     	ds	1
   591  000005                     ??_fputc:
   592  000005                     ??___fpclassifyf:
   593  000005                     ??_strcpy:
   594  000005                     ??___fltol:
   595  000005                     ??___xxtofl:
   596  000005                     OpenXLCD@lcdtype:
   597                           	opt callstack 0
   598  000005                     ___awdiv@counter:
   599                           	opt callstack 0
   600  000005                     ___awmod@counter:
   601                           	opt callstack 0
   602  000005                     ___wmul@product:
   603                           	opt callstack 0
   604  000005                     strncmp@n:
   605                           	opt callstack 0
   606  000005                     ___fleq@ff2:
   607                           	opt callstack 0
   608  000005                     ___fladd@a:
   609                           	opt callstack 0
   610                           
   611                           ; 4 bytes @ 0x4
   612  000005                     	ds	1
   613  000006                     ___awdiv@sign:
   614                           	opt callstack 0
   615  000006                     ___awmod@sign:
   616                           	opt callstack 0
   617                           
   618                           ; 1 bytes @ 0x5
   619  000006                     	ds	1
   620  000007                     ??_strncmp:
   621  000007                     ?_tolower:
   622                           	opt callstack 0
   623  000007                     _isspace$1009:
   624                           	opt callstack 0
   625  000007                     ___awdiv@quotient:
   626                           	opt callstack 0
   627  000007                     strcpy@s:
   628                           	opt callstack 0
   629  000007                     tolower@c:
   630                           	opt callstack 0
   631                           
   632                           ; 2 bytes @ 0x6
   633  000007                     	ds	1
   634  000008                     ?_atoi:
   635                           	opt callstack 0
   636  000008                     atoi@s:
   637                           	opt callstack 0
   638  000008                     strncmp@l:
   639                           	opt callstack 0
   640                           
   641                           ; 2 bytes @ 0x7
   642  000008                     	ds	1
   643  000009                     ??_tolower:
   644  000009                     ??___fladd:
   645  000009                     ??___fleq:
   646  000009                     ___fltol@sign1:
   647                           	opt callstack 0
   648  000009                     ___xxtofl@sign:
   649                           	opt callstack 0
   650  000009                     ___fpclassifyf@e:
   651                           	opt callstack 0
   652  000009                     strcpy@d:
   653                           	opt callstack 0
   654                           
   655                           ; 2 bytes @ 0x8
   656  000009                     	ds	1
   657  00000A                     ??_atoi:
   658  00000A                     ___fltol@exp1:
   659                           	opt callstack 0
   660  00000A                     ___xxtofl@exp:
   661                           	opt callstack 0
   662  00000A                     fputs@s:
   663                           	opt callstack 0
   664  00000A                     strncmp@r:
   665                           	opt callstack 0
   666                           
   667                           ; 2 bytes @ 0x9
   668  00000A                     	ds	1
   669  00000B                     ___xxtofl@arg:
   670                           	opt callstack 0
   671  00000B                     ___fpclassifyf@u:
   672                           	opt callstack 0
   673                           
   674                           ; 4 bytes @ 0xA
   675  00000B                     	ds	1
   676  00000C                     fputs@fp:
   677                           	opt callstack 0
   678                           
   679                           ; 2 bytes @ 0xB
   680  00000C                     	ds	1
   681  00000D                     ___fladd@signs:
   682                           	opt callstack 0
   683  00000D                     _tolower$1094:
   684                           	opt callstack 0
   685                           
   686                           ; 2 bytes @ 0xC
   687  00000D                     	ds	1
   688  00000E                     ___fladd@aexp:
   689                           	opt callstack 0
   690  00000E                     fputs@c:
   691                           	opt callstack 0
   692  00000E                     atoi@neg:
   693                           	opt callstack 0
   694                           
   695                           ; 2 bytes @ 0xD
   696  00000E                     	ds	1
   697  00000F                     ?___flmul:
   698                           	opt callstack 0
   699  00000F                     ___fladd@bexp:
   700                           	opt callstack 0
   701  00000F                     fputs@i:
   702                           	opt callstack 0
   703  00000F                     ___flmul@b:
   704                           	opt callstack 0
   705                           
   706                           ; 4 bytes @ 0xE
   707  00000F                     	ds	1
   708  000010                     ___fladd@grs:
   709                           	opt callstack 0
   710  000010                     _atoi$978:
   711                           	opt callstack 0
   712                           
   713                           ; 2 bytes @ 0xF
   714  000010                     	ds	1
   715  000011                     ?_pad:
   716                           	opt callstack 0
   717  000011                     pad@fp:
   718                           	opt callstack 0
   719                           
   720                           ; 2 bytes @ 0x10
   721  000011                     	ds	1
   722  000012                     _atoi$980:
   723                           	opt callstack 0
   724                           
   725                           ; 2 bytes @ 0x11
   726  000012                     	ds	1
   727  000013                     pad@buf:
   728                           	opt callstack 0
   729  000013                     ___flmul@a:
   730                           	opt callstack 0
   731                           
   732                           ; 4 bytes @ 0x12
   733  000013                     	ds	1
   734  000014                     _atoi$979:
   735                           	opt callstack 0
   736                           
   737                           ; 1 bytes @ 0x13
   738  000014                     	ds	1
   739  000015                     pad@p:
   740                           	opt callstack 0
   741  000015                     atoi@n:
   742                           	opt callstack 0
   743                           
   744                           ; 2 bytes @ 0x14
   745  000015                     	ds	2
   746  000017                     ??___flmul:
   747  000017                     ??_pad:
   748                           
   749                           ; 1 bytes @ 0x16
   750  000017                     	ds	1
   751  000018                     pad@i:
   752                           	opt callstack 0
   753                           
   754                           ; 2 bytes @ 0x17
   755  000018                     	ds	2
   756  00001A                     pad@w:
   757                           	opt callstack 0
   758                           
   759                           ; 2 bytes @ 0x19
   760  00001A                     	ds	1
   761  00001B                     ___flmul@sign:
   762                           	opt callstack 0
   763                           
   764                           ; 1 bytes @ 0x1A
   765  00001B                     	ds	1
   766  00001C                     ___flmul@grs:
   767                           	opt callstack 0
   768                           
   769                           ; 4 bytes @ 0x1B
   770  00001C                     	ds	4
   771  000020                     ___flmul@aexp:
   772                           	opt callstack 0
   773                           
   774                           ; 1 bytes @ 0x1F
   775  000020                     	ds	1
   776  000021                     ___flmul@bexp:
   777                           	opt callstack 0
   778                           
   779                           ; 1 bytes @ 0x20
   780  000021                     	ds	1
   781  000022                     ___flmul@prod:
   782                           	opt callstack 0
   783                           
   784                           ; 4 bytes @ 0x21
   785  000022                     	ds	4
   786  000026                     ___flmul@temp:
   787                           	opt callstack 0
   788                           
   789                           ; 2 bytes @ 0x25
   790  000026                     	ds	2
   791  000028                     ?___fldiv:
   792                           	opt callstack 0
   793  000028                     ?___flsub:
   794                           	opt callstack 0
   795  000028                     ___flge@ff1:
   796                           	opt callstack 0
   797  000028                     ___flsub@b:
   798                           	opt callstack 0
   799  000028                     ___fldiv@b:
   800                           	opt callstack 0
   801                           
   802                           ; 4 bytes @ 0x27
   803  000028                     	ds	4
   804  00002C                     ___flge@ff2:
   805                           	opt callstack 0
   806  00002C                     ___flsub@a:
   807                           	opt callstack 0
   808  00002C                     ___fldiv@a:
   809                           	opt callstack 0
   810                           
   811                           ; 4 bytes @ 0x2B
   812  00002C                     	ds	4
   813  000030                     ??___fldiv:
   814  000030                     ??___flge:
   815                           
   816                           ; 1 bytes @ 0x2F
   817  000030                     	ds	4
   818  000034                     ___fldiv@rem:
   819                           	opt callstack 0
   820                           
   821                           ; 4 bytes @ 0x33
   822  000034                     	ds	4
   823  000038                     ___fldiv@sign:
   824                           	opt callstack 0
   825                           
   826                           ; 1 bytes @ 0x37
   827  000038                     	ds	1
   828  000039                     ___fldiv@new_exp:
   829                           	opt callstack 0
   830                           
   831                           ; 2 bytes @ 0x38
   832  000039                     	ds	2
   833  00003B                     ___fldiv@grs:
   834                           	opt callstack 0
   835                           
   836                           ; 4 bytes @ 0x3A
   837  00003B                     	ds	4
   838  00003F                     ___fldiv@bexp:
   839                           	opt callstack 0
   840                           
   841                           ; 1 bytes @ 0x3E
   842  00003F                     	ds	1
   843  000040                     ___fldiv@aexp:
   844                           	opt callstack 0
   845                           
   846                           ; 1 bytes @ 0x3F
   847  000040                     	ds	1
   848  000041                     ?_floorf:
   849                           	opt callstack 0
   850  000041                     floorf@x:
   851                           	opt callstack 0
   852                           
   853                           ; 4 bytes @ 0x40
   854  000041                     	ds	4
   855  000045                     ??_floorf:
   856                           
   857                           ; 1 bytes @ 0x44
   858  000045                     	ds	6
   859  00004B                     floorf@m:
   860                           	opt callstack 0
   861                           
   862                           ; 4 bytes @ 0x4A
   863  00004B                     	ds	4
   864  00004F                     floorf@e:
   865                           	opt callstack 0
   866                           
   867                           ; 2 bytes @ 0x4E
   868  00004F                     	ds	2
   869  000051                     floorf@u:
   870                           	opt callstack 0
   871                           
   872                           ; 4 bytes @ 0x50
   873  000051                     	ds	4
   874  000055                     ?_efgtoa:
   875                           	opt callstack 0
   876  000055                     efgtoa@fp:
   877                           	opt callstack 0
   878                           
   879                           ; 2 bytes @ 0x54
   880  000055                     	ds	2
   881  000057                     efgtoa@f:
   882                           	opt callstack 0
   883                           
   884                           ; 4 bytes @ 0x56
   885  000057                     	ds	4
   886  00005B                     efgtoa@c:
   887                           	opt callstack 0
   888                           
   889                           ; 1 bytes @ 0x5A
   890  00005B                     	ds	1
   891  00005C                     ??_vfpfcnvrt:
   892                           
   893                           ; 1 bytes @ 0x5B
   894  00005C                     	ds	4
   895  000060                     
   896                           ; 1 bytes @ 0x5F
   897 ;;
   898 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   899 ;;
   900 ;; *************** function _main *****************
   901 ;; Defined at:
   902 ;;		line 26 in file "Main.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;		None
   905 ;; Auto vars:     Size  Location     Type
   906 ;;		None
   907 ;; Return value:  Size  Location     Type
   908 ;;                  1    wreg      void 
   909 ;; Registers used:
   910 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   916 ;;      Params:         0       0       0       0       0       0       0       0       0
   917 ;;      Locals:         0       0       0       0       0       0       0       0       0
   918 ;;      Temps:          0       2       0       0       0       0       0       0       0
   919 ;;      Totals:         0       2       0       0       0       0       0       0       0
   920 ;;Total ram usage:        2 bytes
   921 ;; Hardware stack levels required when called:    8
   922 ;; This function calls:
   923 ;;		_ADC_Init
   924 ;;		_ADC_Read
   925 ;;		_LCD_Init
   926 ;;		_LCD_gotoXY
   927 ;;		_WriteCmdXLCD
   928 ;;		___fldiv
   929 ;;		___flmul
   930 ;;		___xxtofl
   931 ;;		_putrsXLCD
   932 ;;		_sprintf
   933 ;; This function is called by:
   934 ;;		Startup code after reset
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           	psect	text0
   939  0028B6                     __ptext0:
   940                           	opt callstack 0
   941  0028B6                     _main:
   942                           	opt callstack 23
   943  0028B6                     
   944                           ;Main.c: 27:     LCD_Init();
   945  0028B6  ECD0  F01C         	call	_LCD_Init	;wreg free
   946  0028BA                     
   947                           ;Main.c: 28:     ADC_Init();
   948  0028BA  EC08  F01D         	call	_ADC_Init	;wreg free
   949  0028BE                     
   950                           ;Main.c: 29:     TRISA = 1;
   951  0028BE  0E01               	movlw	1
   952  0028C0  6E92               	movwf	146,c	;volatile
   953  0028C2                     
   954                           ;Main.c: 30:     LCD_gotoXY(0,0);
   955  0028C2  0E00               	movlw	0
   956  0028C4  6E03               	movwf	(LCD_gotoXY@x+1)^0,c
   957  0028C6  0E00               	movlw	0
   958  0028C8  6E02               	movwf	LCD_gotoXY@x^0,c
   959  0028CA  0E00               	movlw	0
   960  0028CC  6E05               	movwf	(LCD_gotoXY@y+1)^0,c
   961  0028CE  0E00               	movlw	0
   962  0028D0  6E04               	movwf	LCD_gotoXY@y^0,c
   963  0028D2  ECB8  F01C         	call	_LCD_gotoXY	;wreg free
   964  0028D6                     
   965                           ;Main.c: 31:     putrsXLCD("** Canales ADC **");
   966  0028D6  0E01               	movlw	low STR_1
   967  0028D8  6E02               	movwf	putrsXLCD@buffer^0,c
   968  0028DA  0E08               	movlw	high STR_1
   969  0028DC  6E03               	movwf	(putrsXLCD@buffer+1)^0,c
   970  0028DE  EC2E  F01A         	call	_putrsXLCD	;wreg free
   971  0028E2                     
   972                           ;Main.c: 32:     _delay((unsigned long)((100)*(20000000L/4000.0)));
   973  0028E2  0E03               	movlw	3
   974  0028E4  0100               	movlb	0	; () banked
   975  0028E6  6FCA               	movwf	(??_main+1)& (0+255),b
   976  0028E8  0E8A               	movlw	138
   977  0028EA  6FC9               	movwf	??_main& (0+255),b
   978  0028EC  0E55               	movlw	85
   979  0028EE                     u5197:
   980  0028EE  2EE8               	decfsz	wreg,f,c
   981  0028F0  D7FE               	bra	u5197
   982  0028F2  2FC9               	decfsz	??_main& (0+255),f,b
   983  0028F4  D7FC               	bra	u5197
   984  0028F6  2FCA               	decfsz	(??_main+1)& (0+255),f,b
   985  0028F8  D7FA               	bra	u5197
   986  0028FA  D000               	nop2	
   987  0028FC                     
   988                           ;Main.c: 33:     LCD_gotoXY(1,0);
   989  0028FC  0E00               	movlw	0
   990  0028FE  6E03               	movwf	(LCD_gotoXY@x+1)^0,c
   991  002900  0E01               	movlw	1
   992  002902  6E02               	movwf	LCD_gotoXY@x^0,c
   993  002904  0E00               	movlw	0
   994  002906  6E05               	movwf	(LCD_gotoXY@y+1)^0,c
   995  002908  0E00               	movlw	0
   996  00290A  6E04               	movwf	LCD_gotoXY@y^0,c
   997  00290C  ECB8  F01C         	call	_LCD_gotoXY	;wreg free
   998  002910                     
   999                           ;Main.c: 34:     putrsXLCD("  By: Fernando  ");
  1000  002910  0E13               	movlw	low STR_2
  1001  002912  6E02               	movwf	putrsXLCD@buffer^0,c
  1002  002914  0E08               	movlw	high STR_2
  1003  002916  6E03               	movwf	(putrsXLCD@buffer+1)^0,c
  1004  002918  EC2E  F01A         	call	_putrsXLCD	;wreg free
  1005  00291C                     
  1006                           ;Main.c: 35:     _delay((unsigned long)((1500)*(20000000L/4000.0)));
  1007  00291C  0E27               	movlw	39
  1008  00291E  0100               	movlb	0	; () banked
  1009  002920  6FCA               	movwf	(??_main+1)& (0+255),b
  1010  002922  0E0D               	movlw	13
  1011  002924  6FC9               	movwf	??_main& (0+255),b
  1012  002926  0E26               	movlw	38
  1013  002928                     u5207:
  1014  002928  2EE8               	decfsz	wreg,f,c
  1015  00292A  D7FE               	bra	u5207
  1016  00292C  2FC9               	decfsz	??_main& (0+255),f,b
  1017  00292E  D7FC               	bra	u5207
  1018  002930  2FCA               	decfsz	(??_main+1)& (0+255),f,b
  1019  002932  D7FA               	bra	u5207
  1020  002934  F000               	nop	
  1021  002936                     
  1022                           ;Main.c: 36:     WriteCmdXLCD(0x01);
  1023  002936  0E01               	movlw	1
  1024  002938  EC2A  F01C         	call	_WriteCmdXLCD
  1025  00293C                     l4489:
  1026                           
  1027                           ;Main.c: 38:         LCD_gotoXY(0,0);
  1028  00293C  0E00               	movlw	0
  1029  00293E  6E03               	movwf	(LCD_gotoXY@x+1)^0,c
  1030  002940  0E00               	movlw	0
  1031  002942  6E02               	movwf	LCD_gotoXY@x^0,c
  1032  002944  0E00               	movlw	0
  1033  002946  6E05               	movwf	(LCD_gotoXY@y+1)^0,c
  1034  002948  0E00               	movlw	0
  1035  00294A  6E04               	movwf	LCD_gotoXY@y^0,c
  1036  00294C  ECB8  F01C         	call	_LCD_gotoXY	;wreg free
  1037  002950                     
  1038                           ;Main.c: 39:         putrsXLCD("Tension medida: ");
  1039  002950  0E24               	movlw	low STR_3
  1040  002952  6E02               	movwf	putrsXLCD@buffer^0,c
  1041  002954  0E08               	movlw	high STR_3
  1042  002956  6E03               	movwf	(putrsXLCD@buffer+1)^0,c
  1043  002958  EC2E  F01A         	call	_putrsXLCD	;wreg free
  1044  00295C                     
  1045                           ;Main.c: 40:         _delay((unsigned long)((100)*(20000000L/4000.0)));
  1046  00295C  0E03               	movlw	3
  1047  00295E  0100               	movlb	0	; () banked
  1048  002960  6FCA               	movwf	(??_main+1)& (0+255),b
  1049  002962  0E8A               	movlw	138
  1050  002964  6FC9               	movwf	??_main& (0+255),b
  1051  002966  0E55               	movlw	85
  1052  002968                     u5217:
  1053  002968  2EE8               	decfsz	wreg,f,c
  1054  00296A  D7FE               	bra	u5217
  1055  00296C  2FC9               	decfsz	??_main& (0+255),f,b
  1056  00296E  D7FC               	bra	u5217
  1057  002970  2FCA               	decfsz	(??_main+1)& (0+255),f,b
  1058  002972  D7FA               	bra	u5217
  1059  002974  D000               	nop2	
  1060  002976                     
  1061                           ;Main.c: 41:         valorLectura = ADC_Read(0);
  1062  002976  0E00               	movlw	0
  1063  002978  EC9E  F01B         	call	_ADC_Read
  1064  00297C  C001  F0DF         	movff	?_ADC_Read,_valorLectura
  1065  002980  C002  F0E0         	movff	?_ADC_Read+1,_valorLectura+1
  1066  002984                     
  1067                           ;Main.c: 42:         tension = (valorLectura*5.0)/1023;
  1068  002984  0E00               	movlw	0
  1069  002986  6E13               	movwf	___flmul@a^0,c
  1070  002988  0E00               	movlw	0
  1071  00298A  6E14               	movwf	(___flmul@a+1)^0,c
  1072  00298C  0EA0               	movlw	160
  1073  00298E  6E15               	movwf	(___flmul@a+2)^0,c
  1074  002990  0E40               	movlw	64
  1075  002992  6E16               	movwf	(___flmul@a+3)^0,c
  1076  002994  C0DF  F001         	movff	_valorLectura,___xxtofl@val
  1077  002998  C0E0  F002         	movff	_valorLectura+1,___xxtofl@val+1
  1078  00299C  6A03               	clrf	(___xxtofl@val+2)^0,c
  1079  00299E  6A04               	clrf	(___xxtofl@val+3)^0,c
  1080  0029A0  0E00               	movlw	0
  1081  0029A2  EC81  F013         	call	___xxtofl
  1082  0029A6  C001  F00F         	movff	?___xxtofl,___flmul@b
  1083  0029AA  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1084  0029AE  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1085  0029B2  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1086  0029B6  EC96  F00E         	call	___flmul	;wreg free
  1087  0029BA  C00F  F028         	movff	?___flmul,___fldiv@b
  1088  0029BE  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  1089  0029C2  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  1090  0029C6  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  1091  0029CA  0E00               	movlw	0
  1092  0029CC  6E2C               	movwf	___fldiv@a^0,c
  1093  0029CE  0EC0               	movlw	192
  1094  0029D0  6E2D               	movwf	(___fldiv@a+1)^0,c
  1095  0029D2  0E7F               	movlw	127
  1096  0029D4  6E2E               	movwf	(___fldiv@a+2)^0,c
  1097  0029D6  0E44               	movlw	68
  1098  0029D8  6E2F               	movwf	(___fldiv@a+3)^0,c
  1099  0029DA  ECAB  F010         	call	___fldiv	;wreg free
  1100  0029DE  C028  F0D3         	movff	?___fldiv,_tension
  1101  0029E2  C029  F0D4         	movff	?___fldiv+1,_tension+1
  1102  0029E6  C02A  F0D5         	movff	?___fldiv+2,_tension+2
  1103  0029EA  C02B  F0D6         	movff	?___fldiv+3,_tension+3
  1104  0029EE                     
  1105                           ;Main.c: 43:         LCD_gotoXY(1,12);
  1106  0029EE  0E00               	movlw	0
  1107  0029F0  6E03               	movwf	(LCD_gotoXY@x+1)^0,c
  1108  0029F2  0E01               	movlw	1
  1109  0029F4  6E02               	movwf	LCD_gotoXY@x^0,c
  1110  0029F6  0E00               	movlw	0
  1111  0029F8  6E05               	movwf	(LCD_gotoXY@y+1)^0,c
  1112  0029FA  0E0C               	movlw	12
  1113  0029FC  6E04               	movwf	LCD_gotoXY@y^0,c
  1114  0029FE  ECB8  F01C         	call	_LCD_gotoXY	;wreg free
  1115  002A02                     
  1116                           ;Main.c: 44:         sprintf(datos,"%.2f",tension);
  1117  002A02  0EE1               	movlw	low _datos
  1118  002A04  0100               	movlb	0	; () banked
  1119  002A06  6FB7               	movwf	sprintf@s& (0+255),b
  1120  002A08  0E00               	movlw	high _datos
  1121  002A0A  6FB8               	movwf	(sprintf@s+1)& (0+255),b
  1122  002A0C  0E35               	movlw	low STR_4
  1123  002A0E  6FB9               	movwf	sprintf@fmt& (0+255),b
  1124  002A10  0E08               	movlw	high STR_4
  1125  002A12  6FBA               	movwf	(sprintf@fmt+1)& (0+255),b
  1126  002A14  C0D3  F0BB         	movff	_tension,?_sprintf+4
  1127  002A18  C0D4  F0BC         	movff	_tension+1,?_sprintf+5
  1128  002A1C  C0D5  F0BD         	movff	_tension+2,?_sprintf+6
  1129  002A20  C0D6  F0BE         	movff	_tension+3,?_sprintf+7
  1130  002A24  EC23  F01B         	call	_sprintf	;wreg free
  1131  002A28                     
  1132                           ;Main.c: 45:         putrsXLCD(datos);
  1133  002A28  0EE1               	movlw	low _datos
  1134  002A2A  6E02               	movwf	putrsXLCD@buffer^0,c
  1135  002A2C  0E00               	movlw	high _datos
  1136  002A2E  6E03               	movwf	(putrsXLCD@buffer+1)^0,c
  1137  002A30  EC2E  F01A         	call	_putrsXLCD	;wreg free
  1138  002A34                     
  1139                           ;Main.c: 46:         _delay((unsigned long)((500)*(20000000L/4000.0)));
  1140  002A34  0E0D               	movlw	13
  1141  002A36  0100               	movlb	0	; () banked
  1142  002A38  6FCA               	movwf	(??_main+1)& (0+255),b
  1143  002A3A  0EAF               	movlw	175
  1144  002A3C  6FC9               	movwf	??_main& (0+255),b
  1145  002A3E  0EB6               	movlw	182
  1146  002A40                     u5227:
  1147  002A40  2EE8               	decfsz	wreg,f,c
  1148  002A42  D7FE               	bra	u5227
  1149  002A44  2FC9               	decfsz	??_main& (0+255),f,b
  1150  002A46  D7FC               	bra	u5227
  1151  002A48  2FCA               	decfsz	(??_main+1)& (0+255),f,b
  1152  002A4A  D7FA               	bra	u5227
  1153  002A4C  F000               	nop	
  1154  002A4E  EF9E  F014         	goto	l4489
  1155  002A52  EF00  F000         	goto	start
  1156  002A56                     __end_of_main:
  1157                           	opt callstack 0
  1158                           
  1159 ;; *************** function _sprintf *****************
  1160 ;; Defined at:
  1161 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;  s               2   87[BANK0 ] PTR unsigned char 
  1164 ;;		 -> datos(20), 
  1165 ;;  fmt             2   89[BANK0 ] PTR const unsigned char 
  1166 ;;		 -> STR_4(5), 
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;  f               6   99[BANK0 ] struct _IO_FILE
  1169 ;;  ap              2   97[BANK0 ] PTR void [1]
  1170 ;;		 -> ?_sprintf(2), 
  1171 ;;  ret             2    0        int 
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  2   87[BANK0 ] int 
  1174 ;; Registers used:
  1175 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1181 ;;      Params:         0       8       0       0       0       0       0       0       0
  1182 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1183 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1184 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1185 ;;Total ram usage:       18 bytes
  1186 ;; Hardware stack levels used:    1
  1187 ;; Hardware stack levels required when called:    7
  1188 ;; This function calls:
  1189 ;;		_vfprintf
  1190 ;; This function is called by:
  1191 ;;		_main
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           	psect	text1
  1196  003646                     __ptext1:
  1197                           	opt callstack 0
  1198  003646                     _sprintf:
  1199                           	opt callstack 23
  1200  003646  0EBB               	movlw	low (?_sprintf+4)
  1201  003648  0100               	movlb	0	; () banked
  1202  00364A  6FC1               	movwf	sprintf@ap& (0+255),b
  1203  00364C  0E00               	movlw	high (?_sprintf+4)
  1204  00364E  6FC2               	movwf	(sprintf@ap+1)& (0+255),b
  1205  003650  C0B7  F0C3         	movff	sprintf@s,sprintf@f
  1206  003654  C0B8  F0C4         	movff	sprintf@s+1,sprintf@f+1
  1207  003658                     
  1208                           ; BSR set to: 0
  1209  003658  0E00               	movlw	0
  1210  00365A  6FC6               	movwf	(sprintf@f+3)& (0+255),b
  1211  00365C  0E00               	movlw	0
  1212  00365E  6FC5               	movwf	(sprintf@f+2)& (0+255),b
  1213  003660                     
  1214                           ; BSR set to: 0
  1215  003660  0E00               	movlw	0
  1216  003662  6FC8               	movwf	(sprintf@f+5)& (0+255),b
  1217  003664  0E00               	movlw	0
  1218  003666  6FC7               	movwf	(sprintf@f+4)& (0+255),b
  1219  003668                     
  1220                           ; BSR set to: 0
  1221  003668  0EC3               	movlw	low sprintf@f
  1222  00366A  6FAF               	movwf	vfprintf@fp& (0+255),b
  1223  00366C  0E00               	movlw	high sprintf@f
  1224  00366E  6FB0               	movwf	(vfprintf@fp+1)& (0+255),b
  1225  003670  C0B9  F0B1         	movff	sprintf@fmt,vfprintf@fmt
  1226  003674  C0BA  F0B2         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1227  003678  0EC1               	movlw	low sprintf@ap
  1228  00367A  6FB3               	movwf	vfprintf@ap& (0+255),b
  1229  00367C  0E00               	movlw	high sprintf@ap
  1230  00367E  6FB4               	movwf	(vfprintf@ap+1)& (0+255),b
  1231  003680  EC67  F01A         	call	_vfprintf	;wreg free
  1232  003684  0100               	movlb	0	; () banked
  1233  003686  51C5               	movf	(sprintf@f+2)& (0+255),w,b
  1234  003688  25B7               	addwf	sprintf@s& (0+255),w,b
  1235  00368A  6ED9               	movwf	fsr2l,c
  1236  00368C  51C6               	movf	(sprintf@f+3)& (0+255),w,b
  1237  00368E  21B8               	addwfc	(sprintf@s+1)& (0+255),w,b
  1238  003690  6EDA               	movwf	fsr2h,c
  1239  003692  0E00               	movlw	0
  1240  003694  6EDF               	movwf	indf2,c
  1241  003696                     
  1242                           ; BSR set to: 0
  1243  003696  0012               	return		;funcret
  1244  003698                     __end_of_sprintf:
  1245                           	opt callstack 0
  1246                           
  1247 ;; *************** function _vfprintf *****************
  1248 ;; Defined at:
  1249 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;  fp              2   79[BANK0 ] PTR struct _IO_FILE
  1252 ;;		 -> sprintf@f(6), 
  1253 ;;  fmt             2   81[BANK0 ] PTR const unsigned char 
  1254 ;;		 -> STR_4(5), 
  1255 ;;  ap              2   83[BANK0 ] PTR PTR void 
  1256 ;;		 -> sprintf@ap(2), 
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;  cfmt            2   85[BANK0 ] PTR unsigned char 
  1259 ;;		 -> STR_4(5), 
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  2   79[BANK0 ] int 
  1262 ;; Registers used:
  1263 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1269 ;;      Params:         0       6       0       0       0       0       0       0       0
  1270 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1271 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1272 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1273 ;;Total ram usage:        8 bytes
  1274 ;; Hardware stack levels used:    1
  1275 ;; Hardware stack levels required when called:    6
  1276 ;; This function calls:
  1277 ;;		_vfpfcnvrt
  1278 ;; This function is called by:
  1279 ;;		_sprintf
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           	psect	text2
  1284  0034CE                     __ptext2:
  1285                           	opt callstack 0
  1286  0034CE                     _vfprintf:
  1287                           	opt callstack 23
  1288  0034CE                     
  1289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1290  0034CE  C0B1  F0B5         	movff	vfprintf@fmt,vfprintf@cfmt
  1291  0034D2  C0B2  F0B6         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1292  0034D6                     
  1293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1294  0034D6  0E00               	movlw	0
  1295  0034D8  0100               	movlb	0	; () banked
  1296  0034DA  6FD8               	movwf	(_nout+1)& (0+255),b
  1297  0034DC  0E00               	movlw	0
  1298  0034DE  6FD7               	movwf	_nout& (0+255),b
  1299                           
  1300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1301  0034E0  EF85  F01A         	goto	l4261
  1302  0034E4                     l4259:
  1303                           
  1304                           ; BSR set to: 0
  1305                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1306  0034E4  C0AF  F09D         	movff	vfprintf@fp,vfpfcnvrt@fp
  1307  0034E8  C0B0  F09E         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1308  0034EC  0EB5               	movlw	low vfprintf@cfmt
  1309  0034EE  6F9F               	movwf	vfpfcnvrt@fmt& (0+255),b
  1310  0034F0  0E00               	movlw	high vfprintf@cfmt
  1311  0034F2  6FA0               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1312  0034F4  C0B3  F0A1         	movff	vfprintf@ap,vfpfcnvrt@ap
  1313  0034F8  C0B4  F0A2         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1314  0034FC  EC5F  F00C         	call	_vfpfcnvrt	;wreg free
  1315  003500  0100               	movlb	0	; () banked
  1316  003502  519D               	movf	?_vfpfcnvrt& (0+255),w,b
  1317  003504  27D7               	addwf	_nout& (0+255),f,b
  1318  003506  519E               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1319  003508  23D8               	addwfc	(_nout+1)& (0+255),f,b
  1320  00350A                     l4261:
  1321                           
  1322                           ; BSR set to: 0
  1323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1324  00350A  C0B5  FFF6         	movff	vfprintf@cfmt,tblptrl
  1325  00350E  C0B6  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1326  003512                     	if	0	;tblptru may be non-zero
  1327  003512                     	endif
  1328  003512                     	if	0	;tblptru may be non-zero
  1329  003512                     	endif
  1330  003512  0008               	tblrd		*
  1331  003514  50F5               	movf	tablat,w,c
  1332  003516  0900               	iorlw	0
  1333  003518  A4D8               	btfss	status,2,c
  1334  00351A  EF91  F01A         	goto	u4951
  1335  00351E  EF93  F01A         	goto	u4950
  1336  003522                     u4951:
  1337  003522  EF72  F01A         	goto	l4259
  1338  003526                     u4950:
  1339  003526                     
  1340                           ; BSR set to: 0
  1341                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1342  003526  C0D7  F0AF         	movff	_nout,?_vfprintf
  1343  00352A  C0D8  F0B0         	movff	_nout+1,?_vfprintf+1
  1344  00352E                     
  1345                           ; BSR set to: 0
  1346  00352E  0012               	return		;funcret
  1347  003530                     __end_of_vfprintf:
  1348                           	opt callstack 0
  1349                           
  1350 ;; *************** function _vfpfcnvrt *****************
  1351 ;; Defined at:
  1352 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;  fp              2   61[BANK0 ] PTR struct _IO_FILE
  1355 ;;		 -> sprintf@f(6), 
  1356 ;;  fmt             2   63[BANK0 ] PTR PTR unsigned char 
  1357 ;;		 -> vfprintf@cfmt(2), 
  1358 ;;  ap              2   65[BANK0 ] PTR PTR void 
  1359 ;;		 -> sprintf@ap(2), 
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;  llu             8    0        unsigned long long 
  1362 ;;  ll              8    0        long long 
  1363 ;;  f               4   71[BANK0 ] long long 
  1364 ;;  ct              3   75[BANK0 ] unsigned char [3]
  1365 ;;  vp              3    0        PTR void 
  1366 ;;  cp              3    0        PTR unsigned char 
  1367 ;;  i               2    0        int 
  1368 ;;  done            2    0        int 
  1369 ;;  c               1   78[BANK0 ] unsigned char 
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  2   61[BANK0 ] int 
  1372 ;; Registers used:
  1373 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1379 ;;      Params:         0       6       0       0       0       0       0       0       0
  1380 ;;      Locals:         0      12       0       0       0       0       0       0       0
  1381 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1382 ;;      Totals:         4      18       0       0       0       0       0       0       0
  1383 ;;Total ram usage:       22 bytes
  1384 ;; Hardware stack levels used:    1
  1385 ;; Hardware stack levels required when called:    5
  1386 ;; This function calls:
  1387 ;;		_atoi
  1388 ;;		_efgtoa
  1389 ;;		_fputc
  1390 ;;		_isdigit
  1391 ;;		_isupper
  1392 ;;		_strncmp
  1393 ;;		_tolower
  1394 ;; This function is called by:
  1395 ;;		_vfprintf
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text3
  1400  0018BE                     __ptext3:
  1401                           	opt callstack 0
  1402  0018BE                     _vfpfcnvrt:
  1403                           	opt callstack 23
  1404  0018BE                     
  1405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1406  0018BE  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1407  0018C2  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1408  0018C6  CFDE FFF6          	movff	postinc2,tblptrl
  1409  0018CA  CFDD FFF7          	movff	postdec2,tblptrh
  1410  0018CE                     	if	0	;tblptru may be non-zero
  1411  0018CE                     	endif
  1412  0018CE                     	if	0	;tblptru may be non-zero
  1413  0018CE                     	endif
  1414  0018CE  0008               	tblrd		*
  1415  0018D0  50F5               	movf	tablat,w,c
  1416  0018D2  0A25               	xorlw	37
  1417  0018D4  A4D8               	btfss	status,2,c
  1418  0018D6  EF6F  F00C         	goto	u4731
  1419  0018DA  EF71  F00C         	goto	u4730
  1420  0018DE                     u4731:
  1421  0018DE  EF7A  F00E         	goto	l4165
  1422  0018E2                     u4730:
  1423  0018E2                     
  1424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1425  0018E2  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1426  0018E6  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1427  0018EA  2ADE               	incf	postinc2,f,c
  1428  0018EC  0E00               	movlw	0
  1429  0018EE  22DD               	addwfc	postdec2,f,c
  1430  0018F0                     
  1431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1432  0018F0  0E00               	movlw	0
  1433  0018F2  0100               	movlb	0	; () banked
  1434  0018F4  6FDA               	movwf	(_width+1)& (0+255),b
  1435  0018F6  0E00               	movlw	0
  1436  0018F8  6FD9               	movwf	_width& (0+255),b
  1437  0018FA  C0D9  F0DD         	movff	_width,_flags
  1438  0018FE  C0DA  F0DE         	movff	_width+1,_flags+1
  1439  001902                     
  1440                           ; BSR set to: 0
  1441                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1442  001902  69DB               	setf	_prec& (0+255),b
  1443  001904  69DC               	setf	(_prec+1)& (0+255),b
  1444  001906                     
  1445                           ; BSR set to: 0
  1446                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  1447  001906  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1448  00190A  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1449  00190E  CFDE FFF6          	movff	postinc2,tblptrl
  1450  001912  CFDD FFF7          	movff	postdec2,tblptrh
  1451  001916                     	if	0	;tblptru may be non-zero
  1452  001916                     	endif
  1453  001916                     	if	0	;tblptru may be non-zero
  1454  001916                     	endif
  1455  001916  0008               	tblrd		*
  1456  001918  50F5               	movf	tablat,w,c
  1457  00191A  0A2E               	xorlw	46
  1458  00191C  A4D8               	btfss	status,2,c
  1459  00191E  EF93  F00C         	goto	u4741
  1460  001922  EF95  F00C         	goto	u4740
  1461  001926                     u4741:
  1462  001926  EF13  F00D         	goto	l4111
  1463  00192A                     u4740:
  1464  00192A                     
  1465                           ; BSR set to: 0
  1466                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  1467  00192A  0E00               	movlw	0
  1468  00192C  6FDC               	movwf	(_prec+1)& (0+255),b
  1469  00192E  0E00               	movlw	0
  1470  001930  6FDB               	movwf	_prec& (0+255),b
  1471  001932                     
  1472                           ; BSR set to: 0
  1473                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  1474  001932  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1475  001936  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1476  00193A  2ADE               	incf	postinc2,f,c
  1477  00193C  0E00               	movlw	0
  1478  00193E  22DD               	addwfc	postdec2,f,c
  1479  001940                     
  1480                           ; BSR set to: 0
  1481                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  1482  001940  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1483  001944  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1484  001948  CFDE FFF6          	movff	postinc2,tblptrl
  1485  00194C  CFDD FFF7          	movff	postdec2,tblptrh
  1486  001950                     	if	0	;tblptru may be non-zero
  1487  001950                     	endif
  1488  001950                     	if	0	;tblptru may be non-zero
  1489  001950                     	endif
  1490  001950  0008               	tblrd		*
  1491  001952  50F5               	movf	tablat,w,c
  1492  001954  0A2A               	xorlw	42
  1493  001956  A4D8               	btfss	status,2,c
  1494  001958  EFB0  F00C         	goto	u4751
  1495  00195C  EFB2  F00C         	goto	u4750
  1496  001960                     u4751:
  1497  001960  EFCF  F00C         	goto	l4101
  1498  001964                     u4750:
  1499  001964                     
  1500                           ; BSR set to: 0
  1501                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  1502  001964  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1503  001968  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1504  00196C  2ADE               	incf	postinc2,f,c
  1505  00196E  0E00               	movlw	0
  1506  001970  22DD               	addwfc	postdec2,f,c
  1507                           
  1508                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1509  001972  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1510  001976  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1511  00197A  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  1512  00197E  0E02               	movlw	2
  1513  001980  26DE               	addwf	postinc2,f,c
  1514  001982  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  1515  001986  0E00               	movlw	0
  1516  001988  22DD               	addwfc	postdec2,f,c
  1517  00198A  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1518  00198E  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1519  001992  CFDE F0DB          	movff	postinc2,_prec
  1520  001996  CFDD F0DC          	movff	postdec2,_prec+1
  1521                           
  1522                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  1523  00199A  EF13  F00D         	goto	l4111
  1524  00199E                     l4101:
  1525                           
  1526                           ; BSR set to: 0
  1527                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  1528  00199E  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1529  0019A2  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1530  0019A6  CFDE F008          	movff	postinc2,atoi@s
  1531  0019AA  CFDD F009          	movff	postdec2,atoi@s+1
  1532  0019AE  EC2B  F015         	call	_atoi	;wreg free
  1533  0019B2  C008  F0DB         	movff	?_atoi,_prec
  1534  0019B6  C009  F0DC         	movff	?_atoi+1,_prec+1
  1535                           
  1536                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1537  0019BA  EFE6  F00C         	goto	l4105
  1538  0019BE                     l4103:
  1539                           
  1540                           ; BSR set to: 0
  1541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  1542  0019BE  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1543  0019C2  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1544  0019C6  2ADE               	incf	postinc2,f,c
  1545  0019C8  0E00               	movlw	0
  1546  0019CA  22DD               	addwfc	postdec2,f,c
  1547  0019CC                     l4105:
  1548  0019CC  0ED0               	movlw	208
  1549  0019CE  6E5C               	movwf	??_vfpfcnvrt^0,c
  1550  0019D0  0EFF               	movlw	255
  1551  0019D2  6E5D               	movwf	(??_vfpfcnvrt+1)^0,c
  1552  0019D4  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1553  0019D8  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1554  0019DC  CFDE FFF6          	movff	postinc2,tblptrl
  1555  0019E0  CFDD FFF7          	movff	postdec2,tblptrh
  1556  0019E4                     	if	0	;tblptru may be non-zero
  1557  0019E4                     	endif
  1558  0019E4                     	if	0	;tblptru may be non-zero
  1559  0019E4                     	endif
  1560  0019E4  0008               	tblrd		*
  1561  0019E6  50F5               	movf	tablat,w,c
  1562  0019E8  6E5E               	movwf	(??_vfpfcnvrt+2)^0,c
  1563  0019EA  6A5F               	clrf	(??_vfpfcnvrt+3)^0,c
  1564  0019EC  505C               	movf	??_vfpfcnvrt^0,w,c
  1565  0019EE  265E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1566  0019F0  505D               	movf	(??_vfpfcnvrt+1)^0,w,c
  1567  0019F2  225F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1568  0019F4  505F               	movf	(??_vfpfcnvrt+3)^0,w,c
  1569  0019F6  E10A               	bnz	u4760
  1570  0019F8  0E0A               	movlw	10
  1571  0019FA  5C5E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1572  0019FC  A0D8               	btfss	status,0,c
  1573  0019FE  EF03  F00D         	goto	u4761
  1574  001A02  EF06  F00D         	goto	u4760
  1575  001A06                     u4761:
  1576  001A06  0E01               	movlw	1
  1577  001A08  EF07  F00D         	goto	u4770
  1578  001A0C                     u4760:
  1579  001A0C  0E00               	movlw	0
  1580  001A0E                     u4770:
  1581  001A0E  0100               	movlb	0	; () banked
  1582  001A10  6FA3               	movwf	_vfpfcnvrt$503& (0+255),b
  1583  001A12  6BA4               	clrf	(_vfpfcnvrt$503+1)& (0+255),b
  1584  001A14                     
  1585                           ; BSR set to: 0
  1586  001A14  51A3               	movf	_vfpfcnvrt$503& (0+255),w,b
  1587  001A16  11A4               	iorwf	(_vfpfcnvrt$503+1)& (0+255),w,b
  1588  001A18  A4D8               	btfss	status,2,c
  1589  001A1A  EF11  F00D         	goto	u4781
  1590  001A1E  EF13  F00D         	goto	u4780
  1591  001A22                     u4781:
  1592  001A22  EFDF  F00C         	goto	l4103
  1593  001A26                     u4780:
  1594  001A26                     l4111:
  1595                           
  1596                           ; BSR set to: 0
  1597                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  1598  001A26  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1599  001A2A  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1600  001A2E  CFDE FFF6          	movff	postinc2,tblptrl
  1601  001A32  CFDD FFF7          	movff	postdec2,tblptrh
  1602  001A36                     	if	0	;tblptru may be non-zero
  1603  001A36                     	endif
  1604  001A36                     	if	0	;tblptru may be non-zero
  1605  001A36                     	endif
  1606  001A36  0008               	tblrd		*
  1607  001A38  50F5               	movf	tablat,w,c
  1608  001A3A  6E07               	movwf	tolower@c^0,c
  1609  001A3C  6A08               	clrf	(tolower@c+1)^0,c
  1610  001A3E  EC98  F01A         	call	_tolower	;wreg free
  1611  001A42  5007               	movf	?_tolower^0,w,c
  1612  001A44  0100               	movlb	0	; () banked
  1613  001A46  6FAB               	movwf	vfpfcnvrt@ct& (0+255),b
  1614  001A48                     
  1615                           ; BSR set to: 0
  1616                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  1617  001A48  51AB               	movf	vfpfcnvrt@ct& (0+255),w,b
  1618  001A4A  B4D8               	btfsc	status,2,c
  1619  001A4C  EF2A  F00D         	goto	u4791
  1620  001A50  EF2C  F00D         	goto	u4790
  1621  001A54                     u4791:
  1622  001A54  EF66  F00D         	goto	l4121
  1623  001A58                     u4790:
  1624  001A58                     
  1625                           ; BSR set to: 0
  1626                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  1627  001A58  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1628  001A5C  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1629  001A60  CFDE F05C          	movff	postinc2,??_vfpfcnvrt
  1630  001A64  CFDD F05D          	movff	postdec2,??_vfpfcnvrt+1
  1631  001A68  0E01               	movlw	1
  1632  001A6A  265C               	addwf	??_vfpfcnvrt^0,f,c
  1633  001A6C  0E00               	movlw	0
  1634  001A6E  225D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1635  001A70  C05C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1636  001A74  C05D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1637  001A78                     	if	0	;tblptru may be non-zero
  1638  001A78                     	endif
  1639  001A78                     	if	0	;tblptru may be non-zero
  1640  001A78                     	endif
  1641  001A78  0008               	tblrd		*
  1642  001A7A  50F5               	movf	tablat,w,c
  1643  001A7C  6E07               	movwf	tolower@c^0,c
  1644  001A7E  6A08               	clrf	(tolower@c+1)^0,c
  1645  001A80  EC98  F01A         	call	_tolower	;wreg free
  1646  001A84  5007               	movf	?_tolower^0,w,c
  1647  001A86  0100               	movlb	0	; () banked
  1648  001A88  6FAC               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1649  001A8A                     
  1650                           ; BSR set to: 0
  1651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  1652  001A8A  51AC               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1653  001A8C  B4D8               	btfsc	status,2,c
  1654  001A8E  EF4B  F00D         	goto	u4801
  1655  001A92  EF4D  F00D         	goto	u4800
  1656  001A96                     u4801:
  1657  001A96  EF66  F00D         	goto	l4121
  1658  001A9A                     u4800:
  1659  001A9A                     
  1660                           ; BSR set to: 0
  1661                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  1662  001A9A  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1663  001A9E  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1664  001AA2  CFDE F05C          	movff	postinc2,??_vfpfcnvrt
  1665  001AA6  CFDD F05D          	movff	postdec2,??_vfpfcnvrt+1
  1666  001AAA  0E02               	movlw	2
  1667  001AAC  265C               	addwf	??_vfpfcnvrt^0,f,c
  1668  001AAE  0E00               	movlw	0
  1669  001AB0  225D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1670  001AB2  C05C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1671  001AB6  C05D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1672  001ABA                     	if	0	;tblptru may be non-zero
  1673  001ABA                     	endif
  1674  001ABA                     	if	0	;tblptru may be non-zero
  1675  001ABA                     	endif
  1676  001ABA  0008               	tblrd		*
  1677  001ABC  50F5               	movf	tablat,w,c
  1678  001ABE  6E07               	movwf	tolower@c^0,c
  1679  001AC0  6A08               	clrf	(tolower@c+1)^0,c
  1680  001AC2  EC98  F01A         	call	_tolower	;wreg free
  1681  001AC6  5007               	movf	?_tolower^0,w,c
  1682  001AC8  0100               	movlb	0	; () banked
  1683  001ACA  6FAD               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1684  001ACC                     l4121:
  1685                           
  1686                           ; BSR set to: 0
  1687                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  1688  001ACC  0E66               	movlw	102
  1689  001ACE  19AB               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1690  001AD0  A4D8               	btfss	status,2,c
  1691  001AD2  EF6D  F00D         	goto	u4811
  1692  001AD6  EF6F  F00D         	goto	u4810
  1693  001ADA                     u4811:
  1694  001ADA  EFAF  F00D         	goto	l4133
  1695  001ADE                     u4810:
  1696  001ADE                     
  1697                           ; BSR set to: 0
  1698                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  1699  001ADE  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1700  001AE2  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1701  001AE6  CFDE FFF6          	movff	postinc2,tblptrl
  1702  001AEA  CFDD FFF7          	movff	postdec2,tblptrh
  1703  001AEE                     	if	0	;tblptru may be non-zero
  1704  001AEE                     	endif
  1705  001AEE                     	if	0	;tblptru may be non-zero
  1706  001AEE                     	endif
  1707  001AEE  0008               	tblrd		*
  1708  001AF0  CFF5 F0AE          	movff	tablat,vfpfcnvrt@c
  1709  001AF4                     
  1710                           ; BSR set to: 0
  1711                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  1712  001AF4  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1713  001AF8  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1714  001AFC  2ADE               	incf	postinc2,f,c
  1715  001AFE  0E00               	movlw	0
  1716  001B00  22DD               	addwfc	postdec2,f,c
  1717  001B02                     
  1718                           ; BSR set to: 0
  1719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1720  001B02  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1721  001B06  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1722  001B0A  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  1723  001B0E  0E04               	movlw	4
  1724  001B10  26DE               	addwf	postinc2,f,c
  1725  001B12  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  1726  001B16  0E00               	movlw	0
  1727  001B18  22DD               	addwfc	postdec2,f,c
  1728  001B1A  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1729  001B1E  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1730  001B22  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f
  1731  001B26  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+1
  1732  001B2A  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+2
  1733  001B2E  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+3
  1734  001B32                     l4129:
  1735                           
  1736                           ; BSR set to: 0
  1737                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  1738  001B32  C09D  F055         	movff	vfpfcnvrt@fp,efgtoa@fp
  1739  001B36  C09E  F056         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1740  001B3A  C0A7  F057         	movff	vfpfcnvrt@f,efgtoa@f
  1741  001B3E  C0A8  F058         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1742  001B42  C0A9  F059         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1743  001B46  C0AA  F05A         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1744  001B4A  C0AE  F05B         	movff	vfpfcnvrt@c,efgtoa@c
  1745  001B4E  EC27  F004         	call	_efgtoa	;wreg free
  1746  001B52  C055  F09D         	movff	?_efgtoa,?_vfpfcnvrt
  1747  001B56  C056  F09E         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1748  001B5A  EF95  F00E         	goto	l326
  1749  001B5E                     l4133:
  1750                           
  1751                           ; BSR set to: 0
  1752                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1753  001B5E  0EAB               	movlw	low vfpfcnvrt@ct
  1754  001B60  6E01               	movwf	strncmp@_l^0,c
  1755  001B62  0E00               	movlw	high vfpfcnvrt@ct
  1756  001B64  6E02               	movwf	(strncmp@_l+1)^0,c
  1757  001B66  0E4A               	movlw	low STR_13
  1758  001B68  6E03               	movwf	strncmp@_r^0,c
  1759  001B6A  0E08               	movlw	high STR_13
  1760  001B6C  6E04               	movwf	(strncmp@_r+1)^0,c
  1761  001B6E  0E00               	movlw	0
  1762  001B70  6E06               	movwf	(strncmp@n+1)^0,c
  1763  001B72  0E02               	movlw	2
  1764  001B74  6E05               	movwf	strncmp@n^0,c
  1765  001B76  ECEC  F017         	call	_strncmp	;wreg free
  1766  001B7A  5001               	movf	?_strncmp^0,w,c
  1767  001B7C  1002               	iorwf	(?_strncmp+1)^0,w,c
  1768  001B7E  A4D8               	btfss	status,2,c
  1769  001B80  EFC4  F00D         	goto	u4821
  1770  001B84  EFC6  F00D         	goto	u4820
  1771  001B88                     u4821:
  1772  001B88  EF42  F00E         	goto	l4149
  1773  001B8C                     u4820:
  1774  001B8C                     
  1775                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  1776  001B8C  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1777  001B90  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1778  001B94  CFDE F05C          	movff	postinc2,??_vfpfcnvrt
  1779  001B98  CFDD F05D          	movff	postdec2,??_vfpfcnvrt+1
  1780  001B9C  0E01               	movlw	1
  1781  001B9E  265C               	addwf	??_vfpfcnvrt^0,f,c
  1782  001BA0  0E00               	movlw	0
  1783  001BA2  225D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1784  001BA4  C05C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1785  001BA8  C05D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1786  001BAC                     	if	0	;tblptru may be non-zero
  1787  001BAC                     	endif
  1788  001BAC                     	if	0	;tblptru may be non-zero
  1789  001BAC                     	endif
  1790  001BAC  0008               	tblrd		*
  1791  001BAE  CFF5 F0AE          	movff	tablat,vfpfcnvrt@c
  1792  001BB2  0EBF               	movlw	191
  1793  001BB4  6E5C               	movwf	??_vfpfcnvrt^0,c
  1794  001BB6  0EFF               	movlw	255
  1795  001BB8  6E5D               	movwf	(??_vfpfcnvrt+1)^0,c
  1796  001BBA  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1797  001BBE  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1798  001BC2  CFDE FFF6          	movff	postinc2,tblptrl
  1799  001BC6  CFDD FFF7          	movff	postdec2,tblptrh
  1800  001BCA                     	if	0	;tblptru may be non-zero
  1801  001BCA                     	endif
  1802  001BCA                     	if	0	;tblptru may be non-zero
  1803  001BCA                     	endif
  1804  001BCA  0008               	tblrd		*
  1805  001BCC  50F5               	movf	tablat,w,c
  1806  001BCE  6E5E               	movwf	(??_vfpfcnvrt+2)^0,c
  1807  001BD0  6A5F               	clrf	(??_vfpfcnvrt+3)^0,c
  1808  001BD2  505C               	movf	??_vfpfcnvrt^0,w,c
  1809  001BD4  265E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1810  001BD6  505D               	movf	(??_vfpfcnvrt+1)^0,w,c
  1811  001BD8  225F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1812  001BDA  505F               	movf	(??_vfpfcnvrt+3)^0,w,c
  1813  001BDC  E10A               	bnz	u4830
  1814  001BDE  0E1A               	movlw	26
  1815  001BE0  5C5E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1816  001BE2  A0D8               	btfss	status,0,c
  1817  001BE4  EFF6  F00D         	goto	u4831
  1818  001BE8  EFF9  F00D         	goto	u4830
  1819  001BEC                     u4831:
  1820  001BEC  0E01               	movlw	1
  1821  001BEE  EFFA  F00D         	goto	u4840
  1822  001BF2                     u4830:
  1823  001BF2  0E00               	movlw	0
  1824  001BF4                     u4840:
  1825  001BF4  0100               	movlb	0	; () banked
  1826  001BF6  6FA5               	movwf	_vfpfcnvrt$507& (0+255),b
  1827  001BF8  6BA6               	clrf	(_vfpfcnvrt$507+1)& (0+255),b
  1828  001BFA                     
  1829                           ; BSR set to: 0
  1830  001BFA  51A5               	movf	_vfpfcnvrt$507& (0+255),w,b
  1831  001BFC  11A6               	iorwf	(_vfpfcnvrt$507+1)& (0+255),w,b
  1832  001BFE  B4D8               	btfsc	status,2,c
  1833  001C00  EF04  F00E         	goto	u4851
  1834  001C04  EF06  F00E         	goto	u4850
  1835  001C08                     u4851:
  1836  001C08  EF20  F00E         	goto	l4143
  1837  001C0C                     u4850:
  1838  001C0C                     
  1839                           ; BSR set to: 0
  1840                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1841  001C0C  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1842  001C10  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1843  001C14  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  1844  001C18  0E04               	movlw	4
  1845  001C1A  26DE               	addwf	postinc2,f,c
  1846  001C1C  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  1847  001C20  0E00               	movlw	0
  1848  001C22  22DD               	addwfc	postdec2,f,c
  1849  001C24  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1850  001C28  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1851  001C2C  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f
  1852  001C30  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+1
  1853  001C34  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+2
  1854  001C38  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+3
  1855                           
  1856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  1857  001C3C  EF38  F00E         	goto	l333
  1858  001C40                     l4143:
  1859                           
  1860                           ; BSR set to: 0
  1861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1862  001C40  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1863  001C44  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1864  001C48  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  1865  001C4C  0E04               	movlw	4
  1866  001C4E  26DE               	addwf	postinc2,f,c
  1867  001C50  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  1868  001C54  0E00               	movlw	0
  1869  001C56  22DD               	addwfc	postdec2,f,c
  1870  001C58  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1871  001C5C  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1872  001C60  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f
  1873  001C64  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+1
  1874  001C68  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+2
  1875  001C6C  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+3
  1876  001C70                     l333:
  1877                           
  1878                           ; BSR set to: 0
  1879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  1880  001C70  0E02               	movlw	2
  1881  001C72  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1882  001C76  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1883  001C7A  26DE               	addwf	postinc2,f,c
  1884  001C7C  0E00               	movlw	0
  1885  001C7E  22DD               	addwfc	postdec2,f,c
  1886  001C80  EF99  F00D         	goto	l4129
  1887  001C84                     l4149:
  1888                           
  1889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1890  001C84  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1891  001C88  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1892  001C8C  CFDE FFF6          	movff	postinc2,tblptrl
  1893  001C90  CFDD FFF7          	movff	postdec2,tblptrh
  1894  001C94                     	if	0	;tblptru may be non-zero
  1895  001C94                     	endif
  1896  001C94                     	if	0	;tblptru may be non-zero
  1897  001C94                     	endif
  1898  001C94  0008               	tblrd		*
  1899  001C96  50F5               	movf	tablat,w,c
  1900  001C98  0A25               	xorlw	37
  1901  001C9A  A4D8               	btfss	status,2,c
  1902  001C9C  EF52  F00E         	goto	u4861
  1903  001CA0  EF54  F00E         	goto	u4860
  1904  001CA4                     u4861:
  1905  001CA4  EF6C  F00E         	goto	l4159
  1906  001CA8                     u4860:
  1907  001CA8                     
  1908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1909  001CA8  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1910  001CAC  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1911  001CB0  2ADE               	incf	postinc2,f,c
  1912  001CB2  0E00               	movlw	0
  1913  001CB4  22DD               	addwfc	postdec2,f,c
  1914  001CB6                     
  1915                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1916  001CB6  0E00               	movlw	0
  1917  001CB8  6E02               	movwf	(fputc@c+1)^0,c
  1918  001CBA  0E25               	movlw	37
  1919  001CBC  6E01               	movwf	fputc@c^0,c
  1920  001CBE  C09D  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1921  001CC2  C09E  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1922  001CC6  EC57  F018         	call	_fputc	;wreg free
  1923  001CCA                     l4155:
  1924                           
  1925                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1926  001CCA  0E00               	movlw	0
  1927  001CCC  0100               	movlb	0	; () banked
  1928  001CCE  6F9E               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1929  001CD0  0E01               	movlw	1
  1930  001CD2  6F9D               	movwf	?_vfpfcnvrt& (0+255),b
  1931  001CD4  EF95  F00E         	goto	l326
  1932  001CD8                     l4159:
  1933                           
  1934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1935  001CD8  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1936  001CDC  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1937  001CE0  2ADE               	incf	postinc2,f,c
  1938  001CE2  0E00               	movlw	0
  1939  001CE4  22DD               	addwfc	postdec2,f,c
  1940  001CE6                     
  1941                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1942  001CE6  0E00               	movlw	0
  1943  001CE8  0100               	movlb	0	; () banked
  1944  001CEA  6F9E               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1945  001CEC  0E00               	movlw	0
  1946  001CEE  6F9D               	movwf	?_vfpfcnvrt& (0+255),b
  1947  001CF0  EF95  F00E         	goto	l326
  1948  001CF4                     l4165:
  1949                           
  1950                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1951  001CF4  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1952  001CF8  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1953  001CFC  CFDE FFF6          	movff	postinc2,tblptrl
  1954  001D00  CFDD FFF7          	movff	postdec2,tblptrh
  1955  001D04                     	if	0	;tblptru may be non-zero
  1956  001D04                     	endif
  1957  001D04                     	if	0	;tblptru may be non-zero
  1958  001D04                     	endif
  1959  001D04  0008               	tblrd		*
  1960  001D06  50F5               	movf	tablat,w,c
  1961  001D08  6E01               	movwf	fputc@c^0,c
  1962  001D0A  6A02               	clrf	(fputc@c+1)^0,c
  1963  001D0C  C09D  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1964  001D10  C09E  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1965  001D14  EC57  F018         	call	_fputc	;wreg free
  1966  001D18                     
  1967                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1968  001D18  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1969  001D1C  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1970  001D20  2ADE               	incf	postinc2,f,c
  1971  001D22  0E00               	movlw	0
  1972  001D24  22DD               	addwfc	postdec2,f,c
  1973  001D26  EF65  F00E         	goto	l4155
  1974  001D2A                     l326:
  1975  001D2A  0012               	return		;funcret
  1976  001D2C                     __end_of_vfpfcnvrt:
  1977                           	opt callstack 0
  1978                           
  1979 ;; *************** function _strncmp *****************
  1980 ;; Defined at:
  1981 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  1984 ;;		 -> vfpfcnvrt@ct(3), 
  1985 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  1986 ;;		 -> STR_15(3), 
  1987 ;;  n               2    4[COMRAM] unsigned int 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;  r               2    9[COMRAM] PTR const unsigned char 
  1990 ;;		 -> STR_15(3), 
  1991 ;;  l               2    7[COMRAM] PTR const unsigned char 
  1992 ;;		 -> vfpfcnvrt@ct(3), 
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  2    0[COMRAM] int 
  1995 ;; Registers used:
  1996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2002 ;;      Params:         6       0       0       0       0       0       0       0       0
  2003 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2004 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2005 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2006 ;;Total ram usage:       11 bytes
  2007 ;; Hardware stack levels used:    1
  2008 ;; This function calls:
  2009 ;;		Nothing
  2010 ;; This function is called by:
  2011 ;;		_vfpfcnvrt
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           	psect	text4
  2016  002FD8                     __ptext4:
  2017                           	opt callstack 0
  2018  002FD8                     _strncmp:
  2019                           	opt callstack 27
  2020  002FD8  C001  F008         	movff	strncmp@_l,strncmp@l
  2021  002FDC  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2022  002FE0  C003  F00A         	movff	strncmp@_r,strncmp@r
  2023  002FE4  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2024  002FE8  0605               	decf	strncmp@n^0,f,c
  2025  002FEA  A0D8               	btfss	status,0,c
  2026  002FEC  0606               	decf	(strncmp@n+1)^0,f,c
  2027  002FEE  2805               	incf	strncmp@n^0,w,c
  2028  002FF0  E106               	bnz	u4661
  2029  002FF2  2806               	incf	(strncmp@n+1)^0,w,c
  2030  002FF4  A4D8               	btfss	status,2,c
  2031  002FF6  EFFF  F017         	goto	u4661
  2032  002FFA  EF01  F018         	goto	u4660
  2033  002FFE                     u4661:
  2034  002FFE  EF0E  F018         	goto	l3983
  2035  003002                     u4660:
  2036  003002  0E00               	movlw	0
  2037  003004  6E02               	movwf	(?_strncmp+1)^0,c
  2038  003006  0E00               	movlw	0
  2039  003008  6E01               	movwf	?_strncmp^0,c
  2040  00300A  EF56  F018         	goto	l1135
  2041  00300E                     l3981:
  2042  00300E  4A08               	infsnz	strncmp@l^0,f,c
  2043  003010  2A09               	incf	(strncmp@l+1)^0,f,c
  2044  003012  4A0A               	infsnz	strncmp@r^0,f,c
  2045  003014  2A0B               	incf	(strncmp@r+1)^0,f,c
  2046  003016  0605               	decf	strncmp@n^0,f,c
  2047  003018  A0D8               	btfss	status,0,c
  2048  00301A  0606               	decf	(strncmp@n+1)^0,f,c
  2049  00301C                     l3983:
  2050  00301C  C008  FFD9         	movff	strncmp@l,fsr2l
  2051  003020  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2052  003024  50DF               	movf	indf2,w,c
  2053  003026  B4D8               	btfsc	status,2,c
  2054  003028  EF18  F018         	goto	u4671
  2055  00302C  EF1A  F018         	goto	u4670
  2056  003030                     u4671:
  2057  003030  EF45  F018         	goto	l3991
  2058  003034                     u4670:
  2059  003034  C00A  FFF6         	movff	strncmp@r,tblptrl
  2060  003038  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2061  00303C                     	if	0	;tblptru may be non-zero
  2062  00303C                     	endif
  2063  00303C                     	if	0	;tblptru may be non-zero
  2064  00303C                     	endif
  2065  00303C  0008               	tblrd		*
  2066  00303E  50F5               	movf	tablat,w,c
  2067  003040  0900               	iorlw	0
  2068  003042  B4D8               	btfsc	status,2,c
  2069  003044  EF26  F018         	goto	u4681
  2070  003048  EF28  F018         	goto	u4680
  2071  00304C                     u4681:
  2072  00304C  EF45  F018         	goto	l3991
  2073  003050                     u4680:
  2074  003050  5005               	movf	strncmp@n^0,w,c
  2075  003052  1006               	iorwf	(strncmp@n+1)^0,w,c
  2076  003054  B4D8               	btfsc	status,2,c
  2077  003056  EF2F  F018         	goto	u4691
  2078  00305A  EF31  F018         	goto	u4690
  2079  00305E                     u4691:
  2080  00305E  EF45  F018         	goto	l3991
  2081  003062                     u4690:
  2082  003062  C008  FFD9         	movff	strncmp@l,fsr2l
  2083  003066  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2084  00306A  50DF               	movf	indf2,w,c
  2085  00306C  6E07               	movwf	??_strncmp^0,c
  2086  00306E  C00A  FFF6         	movff	strncmp@r,tblptrl
  2087  003072  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2088  003076                     	if	0	;tblptru may be non-zero
  2089  003076                     	endif
  2090  003076                     	if	0	;tblptru may be non-zero
  2091  003076                     	endif
  2092  003076  0008               	tblrd		*
  2093  003078  50F5               	movf	tablat,w,c
  2094  00307A  1807               	xorwf	??_strncmp^0,w,c
  2095  00307C  B4D8               	btfsc	status,2,c
  2096  00307E  EF43  F018         	goto	u4701
  2097  003082  EF45  F018         	goto	u4700
  2098  003086                     u4701:
  2099  003086  EF07  F018         	goto	l3981
  2100  00308A                     u4700:
  2101  00308A                     l3991:
  2102  00308A  C008  FFD9         	movff	strncmp@l,fsr2l
  2103  00308E  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2104  003092  50DF               	movf	indf2,w,c
  2105  003094  6E07               	movwf	??_strncmp^0,c
  2106  003096  C00A  FFF6         	movff	strncmp@r,tblptrl
  2107  00309A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2108  00309E                     	if	0	;tblptru may be non-zero
  2109  00309E                     	endif
  2110  00309E                     	if	0	;tblptru may be non-zero
  2111  00309E                     	endif
  2112  00309E  0008               	tblrd		*
  2113  0030A0  50F5               	movf	tablat,w,c
  2114  0030A2  5C07               	subwf	??_strncmp^0,w,c
  2115  0030A4  6E01               	movwf	?_strncmp^0,c
  2116  0030A6  6A02               	clrf	(?_strncmp+1)^0,c
  2117  0030A8  A0D8               	btfss	status,0,c
  2118  0030AA  0602               	decf	(?_strncmp+1)^0,f,c
  2119  0030AC                     l1135:
  2120  0030AC  0012               	return		;funcret
  2121  0030AE                     __end_of_strncmp:
  2122                           	opt callstack 0
  2123                           
  2124 ;; *************** function _efgtoa *****************
  2125 ;; Defined at:
  2126 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;  fp              2   84[COMRAM] PTR struct _IO_FILE
  2129 ;;		 -> sprintf@f(6), 
  2130 ;;  f               4   86[COMRAM] PTR struct _IO_FILE
  2131 ;;  c               1   90[COMRAM] unsigned char 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;  u               4   57[BANK0 ] unsigned char 
  2134 ;;  g               4   49[BANK0 ] unsigned char 
  2135 ;;  l               4   43[BANK0 ] unsigned char 
  2136 ;;  h               4   39[BANK0 ] unsigned char 
  2137 ;;  ou              4    5[BANK0 ] unsigned char 
  2138 ;;  n               2   55[BANK0 ] int 
  2139 ;;  e               2   53[BANK0 ] int 
  2140 ;;  i               2   47[BANK0 ] int 
  2141 ;;  w               2   36[BANK0 ] int 
  2142 ;;  p               2   33[BANK0 ] int 
  2143 ;;  sign            2   31[BANK0 ] int 
  2144 ;;  d               2   29[BANK0 ] int 
  2145 ;;  ne              2   27[BANK0 ] int 
  2146 ;;  m               2   25[BANK0 ] int 
  2147 ;;  pp              2   23[BANK0 ] int 
  2148 ;;  t               2   21[BANK0 ] int 
  2149 ;;  mode            1   38[BANK0 ] unsigned char 
  2150 ;;  nmode           1   35[BANK0 ] unsigned char 
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  2   84[COMRAM] int 
  2153 ;; Registers used:
  2154 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2160 ;;      Params:         7       0       0       0       0       0       0       0       0
  2161 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2162 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2163 ;;      Totals:         7      61       0       0       0       0       0       0       0
  2164 ;;Total ram usage:       68 bytes
  2165 ;; Hardware stack levels used:    1
  2166 ;; Hardware stack levels required when called:    4
  2167 ;; This function calls:
  2168 ;;		___awdiv
  2169 ;;		___awmod
  2170 ;;		___fladd
  2171 ;;		___fldiv
  2172 ;;		___fleq
  2173 ;;		___flge
  2174 ;;		___flmul
  2175 ;;		___flneg
  2176 ;;		___flsub
  2177 ;;		___fltol
  2178 ;;		___fpclassifyf
  2179 ;;		_floorf
  2180 ;;		_isupper
  2181 ;;		_pad
  2182 ;;		_strcpy
  2183 ;;		_tolower
  2184 ;; This function is called by:
  2185 ;;		_vfpfcnvrt
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189                           	psect	text5
  2190  00084E                     __ptext5:
  2191                           	opt callstack 0
  2192  00084E                     _efgtoa:
  2193                           	opt callstack 23
  2194  00084E                     
  2195                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  2196  00084E  0E00               	movlw	0
  2197  000850  0100               	movlb	0	; () banked
  2198  000852  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  2199  000854  0E00               	movlw	0
  2200  000856  6F7F               	movwf	efgtoa@sign& (0+255),b
  2201  000858                     
  2202                           ; BSR set to: 0
  2203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  2204  000858  C057  F091         	movff	efgtoa@f,efgtoa@g
  2205  00085C  C058  F092         	movff	efgtoa@f+1,efgtoa@g+1
  2206  000860  C059  F093         	movff	efgtoa@f+2,efgtoa@g+2
  2207  000864  C05A  F094         	movff	efgtoa@f+3,efgtoa@g+3
  2208  000868                     
  2209                           ; BSR set to: 0
  2210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  2211  000868  BF94               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2212  00086A  EF3B  F004         	goto	u4070
  2213  00086E  EF39  F004         	goto	u4071
  2214  000872                     u4071:
  2215  000872  EF51  F004         	goto	l3645
  2216  000876                     u4070:
  2217  000876                     
  2218                           ; BSR set to: 0
  2219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  2220  000876  0E00               	movlw	0
  2221  000878  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  2222  00087A  0E01               	movlw	1
  2223  00087C  6F7F               	movwf	efgtoa@sign& (0+255),b
  2224  00087E                     
  2225                           ; BSR set to: 0
  2226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  2227  00087E  C091  F001         	movff	efgtoa@g,___flneg@f1
  2228  000882  C092  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2229  000886  C093  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2230  00088A  C094  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2231  00088E  EC65  F01C         	call	___flneg	;wreg free
  2232  000892  C001  F091         	movff	?___flneg,efgtoa@g
  2233  000896  C002  F092         	movff	?___flneg+1,efgtoa@g+1
  2234  00089A  C003  F093         	movff	?___flneg+2,efgtoa@g+2
  2235  00089E  C004  F094         	movff	?___flneg+3,efgtoa@g+3
  2236  0008A2                     l3645:
  2237                           
  2238                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  2239  0008A2  0E00               	movlw	0
  2240  0008A4  0100               	movlb	0	; () banked
  2241  0008A6  6F98               	movwf	(efgtoa@n+1)& (0+255),b
  2242  0008A8  0E00               	movlw	0
  2243  0008AA  6F97               	movwf	efgtoa@n& (0+255),b
  2244  0008AC                     
  2245                           ; BSR set to: 0
  2246                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  2247  0008AC  C0D9  F084         	movff	_width,efgtoa@w
  2248  0008B0  C0DA  F085         	movff	_width+1,efgtoa@w+1
  2249  0008B4                     
  2250                           ; BSR set to: 0
  2251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  2252  0008B4  517F               	movf	efgtoa@sign& (0+255),w,b
  2253  0008B6  1180               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2254  0008B8  A4D8               	btfss	status,2,c
  2255  0008BA  EF61  F004         	goto	u4081
  2256  0008BE  EF63  F004         	goto	u4080
  2257  0008C2                     u4081:
  2258  0008C2  EF6A  F004         	goto	l3653
  2259  0008C6                     u4080:
  2260  0008C6                     
  2261                           ; BSR set to: 0
  2262  0008C6  A5DD               	btfss	_flags& (0+255),2,b
  2263  0008C8  EF68  F004         	goto	u4091
  2264  0008CC  EF6A  F004         	goto	u4090
  2265  0008D0                     u4091:
  2266  0008D0  EF84  F004         	goto	l3665
  2267  0008D4                     u4090:
  2268  0008D4                     l3653:
  2269                           
  2270                           ; BSR set to: 0
  2271                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  2272  0008D4  517F               	movf	efgtoa@sign& (0+255),w,b
  2273  0008D6  1180               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2274  0008D8  A4D8               	btfss	status,2,c
  2275  0008DA  EF71  F004         	goto	u4101
  2276  0008DE  EF73  F004         	goto	u4100
  2277  0008E2                     u4101:
  2278  0008E2  EF79  F004         	goto	l3657
  2279  0008E6                     u4100:
  2280  0008E6                     
  2281                           ; BSR set to: 0
  2282  0008E6  0E00               	movlw	0
  2283  0008E8  6F6A               	movwf	(_efgtoa$477+1)& (0+255),b
  2284  0008EA  0E2B               	movlw	43
  2285  0008EC  6F69               	movwf	_efgtoa$477& (0+255),b
  2286  0008EE  EF7D  F004         	goto	l3659
  2287  0008F2                     l3657:
  2288                           
  2289                           ; BSR set to: 0
  2290  0008F2  0E00               	movlw	0
  2291  0008F4  6F6A               	movwf	(_efgtoa$477+1)& (0+255),b
  2292  0008F6  0E2D               	movlw	45
  2293  0008F8  6F69               	movwf	_efgtoa$477& (0+255),b
  2294  0008FA                     l3659:
  2295                           
  2296                           ; BSR set to: 0
  2297  0008FA  C069  F100         	movff	_efgtoa$477,_dbuf
  2298  0008FE                     
  2299                           ; BSR set to: 0
  2300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  2301  0008FE  4B97               	infsnz	efgtoa@n& (0+255),f,b
  2302  000900  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  2303  000902                     
  2304                           ; BSR set to: 0
  2305                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  2306  000902  0784               	decf	efgtoa@w& (0+255),f,b
  2307  000904  A0D8               	btfss	status,0,c
  2308  000906  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  2309  000908                     l3665:
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2313  000908  C091  F001         	movff	efgtoa@g,___fpclassifyf@x
  2314  00090C  C092  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2315  000910  C093  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2316  000914  C094  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2317  000918  ECF8  F016         	call	___fpclassifyf	;wreg free
  2318  00091C  0401               	decf	?___fpclassifyf^0,w,c
  2319  00091E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2320  000920  A4D8               	btfss	status,2,c
  2321  000922  EF95  F004         	goto	u4111
  2322  000926  EF97  F004         	goto	u4110
  2323  00092A                     u4111:
  2324  00092A  EFEE  F004         	goto	l3683
  2325  00092E                     u4110:
  2326  00092E  0EBF               	movlw	191
  2327  000930  0100               	movlb	0	; () banked
  2328  000932  6F60               	movwf	??_efgtoa& (0+255),b
  2329  000934  0EFF               	movlw	255
  2330  000936  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  2331  000938  505B               	movf	efgtoa@c^0,w,c
  2332  00093A  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  2333  00093C  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  2334  00093E  5160               	movf	??_efgtoa& (0+255),w,b
  2335  000940  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  2336  000942  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  2337  000944  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2338  000946  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  2339  000948  E10A               	bnz	u4120
  2340  00094A  0E1A               	movlw	26
  2341  00094C  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  2342  00094E  A0D8               	btfss	status,0,c
  2343  000950  EFAC  F004         	goto	u4121
  2344  000954  EFAF  F004         	goto	u4120
  2345  000958                     u4121:
  2346  000958  0E01               	movlw	1
  2347  00095A  EFB0  F004         	goto	u4130
  2348  00095E                     u4120:
  2349  00095E  0E00               	movlw	0
  2350  000960                     u4130:
  2351  000960  6F6B               	movwf	_efgtoa$478& (0+255),b
  2352  000962  6B6C               	clrf	(_efgtoa$478+1)& (0+255),b
  2353  000964                     
  2354                           ; BSR set to: 0
  2355  000964  516B               	movf	_efgtoa$478& (0+255),w,b
  2356  000966  116C               	iorwf	(_efgtoa$478+1)& (0+255),w,b
  2357  000968  B4D8               	btfsc	status,2,c
  2358  00096A  EFB9  F004         	goto	u4141
  2359  00096E  EFBB  F004         	goto	u4140
  2360  000972                     u4141:
  2361  000972  EFC9  F004         	goto	l3675
  2362  000976                     u4140:
  2363  000976                     
  2364                           ; BSR set to: 0
  2365                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  2366  000976  0E00               	movlw	low _dbuf
  2367  000978  2597               	addwf	efgtoa@n& (0+255),w,b
  2368  00097A  6E01               	movwf	strcpy@dest^0,c
  2369  00097C  0E01               	movlw	high _dbuf
  2370  00097E  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2371  000980  6E02               	movwf	(strcpy@dest+1)^0,c
  2372  000982  0E3A               	movlw	low STR_5
  2373  000984  6E03               	movwf	strcpy@src^0,c
  2374  000986  0E08               	movlw	high STR_5
  2375  000988  6E04               	movwf	(strcpy@src+1)^0,c
  2376  00098A  ECC8  F01A         	call	_strcpy	;wreg free
  2377                           
  2378                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  2379  00098E  EFD5  F004         	goto	l3677
  2380  000992                     l3675:
  2381                           
  2382                           ; BSR set to: 0
  2383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  2384  000992  0E00               	movlw	low _dbuf
  2385  000994  2597               	addwf	efgtoa@n& (0+255),w,b
  2386  000996  6E01               	movwf	strcpy@dest^0,c
  2387  000998  0E01               	movlw	high _dbuf
  2388  00099A  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2389  00099C  6E02               	movwf	(strcpy@dest+1)^0,c
  2390  00099E  0E42               	movlw	low STR_6
  2391  0009A0  6E03               	movwf	strcpy@src^0,c
  2392  0009A2  0E08               	movlw	high STR_6
  2393  0009A4  6E04               	movwf	(strcpy@src+1)^0,c
  2394  0009A6  ECC8  F01A         	call	_strcpy	;wreg free
  2395  0009AA                     l3677:
  2396                           
  2397                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  2398  0009AA  0100               	movlb	0	; () banked
  2399  0009AC  0EFD               	movlw	253
  2400  0009AE  2784               	addwf	efgtoa@w& (0+255),f,b
  2401  0009B0  0EFF               	movlw	255
  2402  0009B2  2385               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2403  0009B4                     l3679:
  2404                           
  2405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  2406  0009B4  C055  F011         	movff	efgtoa@fp,pad@fp
  2407  0009B8  C056  F012         	movff	efgtoa@fp+1,pad@fp+1
  2408  0009BC  0E00               	movlw	low _dbuf
  2409  0009BE  6E13               	movwf	pad@buf^0,c
  2410  0009C0  0E01               	movlw	high _dbuf
  2411  0009C2  6E14               	movwf	(pad@buf+1)^0,c
  2412  0009C4  C084  F015         	movff	efgtoa@w,pad@p
  2413  0009C8  C085  F016         	movff	efgtoa@w+1,pad@p+1
  2414  0009CC  ECBC  F018         	call	_pad	;wreg free
  2415  0009D0  C011  F055         	movff	?_pad,?_efgtoa
  2416  0009D4  C012  F056         	movff	?_pad+1,?_efgtoa+1
  2417  0009D8  EFFE  F009         	goto	l236
  2418  0009DC                     l3683:
  2419                           
  2420                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2421  0009DC  C091  F001         	movff	efgtoa@g,___fpclassifyf@x
  2422  0009E0  C092  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2423  0009E4  C093  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2424  0009E8  C094  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2425  0009EC  ECF8  F016         	call	___fpclassifyf	;wreg free
  2426  0009F0  5001               	movf	?___fpclassifyf^0,w,c
  2427  0009F2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2428  0009F4  A4D8               	btfss	status,2,c
  2429  0009F6  EFFF  F004         	goto	u4151
  2430  0009FA  EF01  F005         	goto	u4150
  2431  0009FE                     u4151:
  2432  0009FE  EF41  F005         	goto	l3701
  2433  000A02                     u4150:
  2434  000A02  0EBF               	movlw	191
  2435  000A04  0100               	movlb	0	; () banked
  2436  000A06  6F60               	movwf	??_efgtoa& (0+255),b
  2437  000A08  0EFF               	movlw	255
  2438  000A0A  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  2439  000A0C  505B               	movf	efgtoa@c^0,w,c
  2440  000A0E  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  2441  000A10  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  2442  000A12  5160               	movf	??_efgtoa& (0+255),w,b
  2443  000A14  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  2444  000A16  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  2445  000A18  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2446  000A1A  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  2447  000A1C  E10A               	bnz	u4160
  2448  000A1E  0E1A               	movlw	26
  2449  000A20  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  2450  000A22  A0D8               	btfss	status,0,c
  2451  000A24  EF16  F005         	goto	u4161
  2452  000A28  EF19  F005         	goto	u4160
  2453  000A2C                     u4161:
  2454  000A2C  0E01               	movlw	1
  2455  000A2E  EF1A  F005         	goto	u4170
  2456  000A32                     u4160:
  2457  000A32  0E00               	movlw	0
  2458  000A34                     u4170:
  2459  000A34  6F6D               	movwf	_efgtoa$483& (0+255),b
  2460  000A36  6B6E               	clrf	(_efgtoa$483+1)& (0+255),b
  2461  000A38                     
  2462                           ; BSR set to: 0
  2463  000A38  516D               	movf	_efgtoa$483& (0+255),w,b
  2464  000A3A  116E               	iorwf	(_efgtoa$483+1)& (0+255),w,b
  2465  000A3C  B4D8               	btfsc	status,2,c
  2466  000A3E  EF23  F005         	goto	u4181
  2467  000A42  EF25  F005         	goto	u4180
  2468  000A46                     u4181:
  2469  000A46  EF33  F005         	goto	l3693
  2470  000A4A                     u4180:
  2471  000A4A                     
  2472                           ; BSR set to: 0
  2473                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  2474  000A4A  0E00               	movlw	low _dbuf
  2475  000A4C  2597               	addwf	efgtoa@n& (0+255),w,b
  2476  000A4E  6E01               	movwf	strcpy@dest^0,c
  2477  000A50  0E01               	movlw	high _dbuf
  2478  000A52  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2479  000A54  6E02               	movwf	(strcpy@dest+1)^0,c
  2480  000A56  0E3E               	movlw	low STR_9
  2481  000A58  6E03               	movwf	strcpy@src^0,c
  2482  000A5A  0E08               	movlw	high STR_9
  2483  000A5C  6E04               	movwf	(strcpy@src+1)^0,c
  2484  000A5E  ECC8  F01A         	call	_strcpy	;wreg free
  2485                           
  2486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  2487  000A62  EFD5  F004         	goto	l3677
  2488  000A66                     l3693:
  2489                           
  2490                           ; BSR set to: 0
  2491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  2492  000A66  0E00               	movlw	low _dbuf
  2493  000A68  2597               	addwf	efgtoa@n& (0+255),w,b
  2494  000A6A  6E01               	movwf	strcpy@dest^0,c
  2495  000A6C  0E01               	movlw	high _dbuf
  2496  000A6E  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2497  000A70  6E02               	movwf	(strcpy@dest+1)^0,c
  2498  000A72  0E46               	movlw	low STR_10
  2499  000A74  6E03               	movwf	strcpy@src^0,c
  2500  000A76  0E08               	movlw	high STR_10
  2501  000A78  6E04               	movwf	(strcpy@src+1)^0,c
  2502  000A7A  ECC8  F01A         	call	_strcpy	;wreg free
  2503  000A7E  EFD5  F004         	goto	l3677
  2504  000A82                     l3701:
  2505                           
  2506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  2507  000A82  0E00               	movlw	0
  2508  000A84  0100               	movlb	0	; () banked
  2509  000A86  6F99               	movwf	efgtoa@u& (0+255),b
  2510  000A88  0E00               	movlw	0
  2511  000A8A  6F9A               	movwf	(efgtoa@u+1)& (0+255),b
  2512  000A8C  0E80               	movlw	128
  2513  000A8E  6F9B               	movwf	(efgtoa@u+2)& (0+255),b
  2514  000A90  0E3F               	movlw	63
  2515  000A92  6F9C               	movwf	(efgtoa@u+3)& (0+255),b
  2516                           
  2517                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  2518  000A94  0E00               	movlw	0
  2519  000A96  6F96               	movwf	(efgtoa@e+1)& (0+255),b
  2520  000A98  0E00               	movlw	0
  2521  000A9A  6F95               	movwf	efgtoa@e& (0+255),b
  2522  000A9C                     
  2523                           ; BSR set to: 0
  2524                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  2525  000A9C  C091  F001         	movff	efgtoa@g,___fleq@ff1
  2526  000AA0  C092  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2527  000AA4  C093  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2528  000AA8  C094  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2529  000AAC  0E00               	movlw	0
  2530  000AAE  6E05               	movwf	___fleq@ff2^0,c
  2531  000AB0  0E00               	movlw	0
  2532  000AB2  6E06               	movwf	(___fleq@ff2+1)^0,c
  2533  000AB4  0E00               	movlw	0
  2534  000AB6  6E07               	movwf	(___fleq@ff2+2)^0,c
  2535  000AB8  0E00               	movlw	0
  2536  000ABA  6E08               	movwf	(___fleq@ff2+3)^0,c
  2537  000ABC  ECD9  F019         	call	___fleq	;wreg free
  2538  000AC0  B0D8               	btfsc	status,0,c
  2539  000AC2  EF65  F005         	goto	u4191
  2540  000AC6  EF67  F005         	goto	u4190
  2541  000ACA                     u4191:
  2542  000ACA  EFEA  F005         	goto	l3719
  2543  000ACE                     u4190:
  2544  000ACE  EF86  F005         	goto	l3711
  2545  000AD2                     l3707:
  2546                           
  2547                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  2548  000AD2  C099  F00F         	movff	efgtoa@u,___flmul@b
  2549  000AD6  C09A  F010         	movff	efgtoa@u+1,___flmul@b+1
  2550  000ADA  C09B  F011         	movff	efgtoa@u+2,___flmul@b+2
  2551  000ADE  C09C  F012         	movff	efgtoa@u+3,___flmul@b+3
  2552  000AE2  0E00               	movlw	0
  2553  000AE4  6E13               	movwf	___flmul@a^0,c
  2554  000AE6  0E00               	movlw	0
  2555  000AE8  6E14               	movwf	(___flmul@a+1)^0,c
  2556  000AEA  0E20               	movlw	32
  2557  000AEC  6E15               	movwf	(___flmul@a+2)^0,c
  2558  000AEE  0E41               	movlw	65
  2559  000AF0  6E16               	movwf	(___flmul@a+3)^0,c
  2560  000AF2  EC96  F00E         	call	___flmul	;wreg free
  2561  000AF6  C00F  F099         	movff	?___flmul,efgtoa@u
  2562  000AFA  C010  F09A         	movff	?___flmul+1,efgtoa@u+1
  2563  000AFE  C011  F09B         	movff	?___flmul+2,efgtoa@u+2
  2564  000B02  C012  F09C         	movff	?___flmul+3,efgtoa@u+3
  2565  000B06                     
  2566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  2567  000B06  0100               	movlb	0	; () banked
  2568  000B08  4B95               	infsnz	efgtoa@e& (0+255),f,b
  2569  000B0A  2B96               	incf	(efgtoa@e+1)& (0+255),f,b
  2570  000B0C                     l3711:
  2571                           
  2572                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  2573  000B0C  C091  F028         	movff	efgtoa@g,___flge@ff1
  2574  000B10  C092  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2575  000B14  C093  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2576  000B18  C094  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2577  000B1C  0E00               	movlw	0
  2578  000B1E  6E13               	movwf	___flmul@a^0,c
  2579  000B20  0E00               	movlw	0
  2580  000B22  6E14               	movwf	(___flmul@a+1)^0,c
  2581  000B24  0E20               	movlw	32
  2582  000B26  6E15               	movwf	(___flmul@a+2)^0,c
  2583  000B28  0E41               	movlw	65
  2584  000B2A  6E16               	movwf	(___flmul@a+3)^0,c
  2585  000B2C  C099  F00F         	movff	efgtoa@u,___flmul@b
  2586  000B30  C09A  F010         	movff	efgtoa@u+1,___flmul@b+1
  2587  000B34  C09B  F011         	movff	efgtoa@u+2,___flmul@b+2
  2588  000B38  C09C  F012         	movff	efgtoa@u+3,___flmul@b+3
  2589  000B3C  EC96  F00E         	call	___flmul	;wreg free
  2590  000B40  C00F  F02C         	movff	?___flmul,___flge@ff2
  2591  000B44  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  2592  000B48  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  2593  000B4C  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  2594  000B50  EC76  F016         	call	___flge	;wreg free
  2595  000B54  B0D8               	btfsc	status,0,c
  2596  000B56  EFAF  F005         	goto	u4201
  2597  000B5A  EFB1  F005         	goto	u4200
  2598  000B5E                     u4201:
  2599  000B5E  EF69  F005         	goto	l3707
  2600  000B62                     u4200:
  2601  000B62  EFD1  F005         	goto	l3717
  2602  000B66                     l3713:
  2603                           
  2604                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  2605  000B66  C099  F028         	movff	efgtoa@u,___fldiv@b
  2606  000B6A  C09A  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2607  000B6E  C09B  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2608  000B72  C09C  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2609  000B76  0E00               	movlw	0
  2610  000B78  6E2C               	movwf	___fldiv@a^0,c
  2611  000B7A  0E00               	movlw	0
  2612  000B7C  6E2D               	movwf	(___fldiv@a+1)^0,c
  2613  000B7E  0E20               	movlw	32
  2614  000B80  6E2E               	movwf	(___fldiv@a+2)^0,c
  2615  000B82  0E41               	movlw	65
  2616  000B84  6E2F               	movwf	(___fldiv@a+3)^0,c
  2617  000B86  ECAB  F010         	call	___fldiv	;wreg free
  2618  000B8A  C028  F099         	movff	?___fldiv,efgtoa@u
  2619  000B8E  C029  F09A         	movff	?___fldiv+1,efgtoa@u+1
  2620  000B92  C02A  F09B         	movff	?___fldiv+2,efgtoa@u+2
  2621  000B96  C02B  F09C         	movff	?___fldiv+3,efgtoa@u+3
  2622  000B9A                     
  2623                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  2624  000B9A  0100               	movlb	0	; () banked
  2625  000B9C  0795               	decf	efgtoa@e& (0+255),f,b
  2626  000B9E  A0D8               	btfss	status,0,c
  2627  000BA0  0796               	decf	(efgtoa@e+1)& (0+255),f,b
  2628  000BA2                     l3717:
  2629                           
  2630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  2631  000BA2  C091  F028         	movff	efgtoa@g,___flge@ff1
  2632  000BA6  C092  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2633  000BAA  C093  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2634  000BAE  C094  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2635  000BB2  C099  F02C         	movff	efgtoa@u,___flge@ff2
  2636  000BB6  C09A  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  2637  000BBA  C09B  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  2638  000BBE  C09C  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  2639  000BC2  EC76  F016         	call	___flge	;wreg free
  2640  000BC6  A0D8               	btfss	status,0,c
  2641  000BC8  EFE8  F005         	goto	u4211
  2642  000BCC  EFEA  F005         	goto	u4210
  2643  000BD0                     u4211:
  2644  000BD0  EFB3  F005         	goto	l3713
  2645  000BD4                     u4210:
  2646  000BD4                     l3719:
  2647                           
  2648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  2649  000BD4  C05B  F007         	movff	efgtoa@c,tolower@c
  2650  000BD8  6A08               	clrf	(tolower@c+1)^0,c
  2651  000BDA  EC98  F01A         	call	_tolower	;wreg free
  2652  000BDE  5007               	movf	?_tolower^0,w,c
  2653  000BE0  0100               	movlb	0	; () banked
  2654  000BE2  6F86               	movwf	efgtoa@mode& (0+255),b
  2655  000BE4                     
  2656                           ; BSR set to: 0
  2657                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  2658  000BE4  C086  F083         	movff	efgtoa@mode,efgtoa@nmode
  2659  000BE8                     
  2660                           ; BSR set to: 0
  2661                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  2662  000BE8  0E67               	movlw	103
  2663  000BEA  1986               	xorwf	efgtoa@mode& (0+255),w,b
  2664  000BEC  A4D8               	btfss	status,2,c
  2665  000BEE  EFFB  F005         	goto	u4221
  2666  000BF2  EFFD  F005         	goto	u4220
  2667  000BF6                     u4221:
  2668  000BF6  EF23  F006         	goto	l3733
  2669  000BFA                     u4220:
  2670  000BFA                     
  2671                           ; BSR set to: 0
  2672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  2673  000BFA  51DB               	movf	_prec& (0+255),w,b
  2674  000BFC  11DC               	iorwf	(_prec+1)& (0+255),w,b
  2675  000BFE  A4D8               	btfss	status,2,c
  2676  000C00  EF04  F006         	goto	u4231
  2677  000C04  EF06  F006         	goto	u4230
  2678  000C08                     u4231:
  2679  000C08  EF0A  F006         	goto	l3729
  2680  000C0C                     u4230:
  2681  000C0C                     
  2682                           ; BSR set to: 0
  2683                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  2684  000C0C  0E00               	movlw	0
  2685  000C0E  6FDC               	movwf	(_prec+1)& (0+255),b
  2686  000C10  0E01               	movlw	1
  2687  000C12  6FDB               	movwf	_prec& (0+255),b
  2688  000C14                     l3729:
  2689                           
  2690                           ; BSR set to: 0
  2691                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  2692  000C14  BFDC               	btfsc	(_prec+1)& (0+255),7,b
  2693  000C16  EF17  F006         	goto	u4240
  2694  000C1A  51DC               	movf	(_prec+1)& (0+255),w,b
  2695  000C1C  E106               	bnz	u4241
  2696  000C1E  05DB               	decf	_prec& (0+255),w,b
  2697  000C20  B0D8               	btfsc	status,0,c
  2698  000C22  EF15  F006         	goto	u4241
  2699  000C26  EF17  F006         	goto	u4240
  2700  000C2A                     u4241:
  2701  000C2A  EF1D  F006         	goto	l254
  2702  000C2E                     u4240:
  2703  000C2E                     l3731:
  2704                           
  2705                           ; BSR set to: 0
  2706  000C2E  0E00               	movlw	0
  2707  000C30  6F82               	movwf	(efgtoa@p+1)& (0+255),b
  2708  000C32  0E06               	movlw	6
  2709  000C34  6F81               	movwf	efgtoa@p& (0+255),b
  2710  000C36  EF2C  F006         	goto	l3739
  2711  000C3A                     l254:
  2712                           
  2713                           ; BSR set to: 0
  2714  000C3A  C0DB  F081         	movff	_prec,efgtoa@p
  2715  000C3E  C0DC  F082         	movff	_prec+1,efgtoa@p+1
  2716  000C42  EF2C  F006         	goto	l3739
  2717  000C46                     l3733:
  2718                           
  2719                           ; BSR set to: 0
  2720                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  2721  000C46  BFDC               	btfsc	(_prec+1)& (0+255),7,b
  2722  000C48  EF28  F006         	goto	u4251
  2723  000C4C  EF2A  F006         	goto	u4250
  2724  000C50                     u4251:
  2725  000C50  EF17  F006         	goto	l3731
  2726  000C54                     u4250:
  2727  000C54  EF1D  F006         	goto	l254
  2728  000C58                     l3739:
  2729                           
  2730                           ; BSR set to: 0
  2731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  2732  000C58  0E67               	movlw	103
  2733  000C5A  1986               	xorwf	efgtoa@mode& (0+255),w,b
  2734  000C5C  A4D8               	btfss	status,2,c
  2735  000C5E  EF33  F006         	goto	u4261
  2736  000C62  EF35  F006         	goto	u4260
  2737  000C66                     u4261:
  2738  000C66  EF64  F006         	goto	l3749
  2739  000C6A                     u4260:
  2740  000C6A                     
  2741                           ; BSR set to: 0
  2742                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  2743  000C6A  AF96               	btfss	(efgtoa@e+1)& (0+255),7,b
  2744  000C6C  EF43  F006         	goto	u4270
  2745  000C70  0EFC               	movlw	252
  2746  000C72  5D95               	subwf	efgtoa@e& (0+255),w,b
  2747  000C74  0EFF               	movlw	255
  2748  000C76  5996               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2749  000C78  A0D8               	btfss	status,0,c
  2750  000C7A  EF41  F006         	goto	u4271
  2751  000C7E  EF43  F006         	goto	u4270
  2752  000C82                     u4271:
  2753  000C82  EF62  F006         	goto	l3747
  2754  000C86                     u4270:
  2755  000C86                     
  2756                           ; BSR set to: 0
  2757  000C86  0EFF               	movlw	255
  2758  000C88  6F60               	movwf	??_efgtoa& (0+255),b
  2759  000C8A  0EFF               	movlw	255
  2760  000C8C  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  2761  000C8E  C081  F062         	movff	efgtoa@p,??_efgtoa+2
  2762  000C92  C082  F063         	movff	efgtoa@p+1,??_efgtoa+3
  2763  000C96  5160               	movf	??_efgtoa& (0+255),w,b
  2764  000C98  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  2765  000C9A  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  2766  000C9C  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2767  000C9E  5195               	movf	efgtoa@e& (0+255),w,b
  2768  000CA0  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  2769  000CA2  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  2770  000CA4  0A80               	xorlw	128
  2771  000CA6  6F64               	movwf	(??_efgtoa+4)& (0+255),b
  2772  000CA8  5196               	movf	(efgtoa@e+1)& (0+255),w,b
  2773  000CAA  0A80               	xorlw	128
  2774  000CAC  5964               	subwfb	(??_efgtoa+4)& (0+255),w,b
  2775  000CAE  A0D8               	btfss	status,0,c
  2776  000CB0  EF5C  F006         	goto	u4281
  2777  000CB4  EF5E  F006         	goto	u4280
  2778  000CB8                     u4281:
  2779  000CB8  EF62  F006         	goto	l3747
  2780  000CBC                     u4280:
  2781  000CBC                     
  2782                           ; BSR set to: 0
  2783                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  2784  000CBC  0E66               	movlw	102
  2785  000CBE  6F83               	movwf	efgtoa@nmode& (0+255),b
  2786                           
  2787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  2788  000CC0  EF64  F006         	goto	l3749
  2789  000CC4                     l3747:
  2790                           
  2791                           ; BSR set to: 0
  2792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  2793  000CC4  0E65               	movlw	101
  2794  000CC6  6F83               	movwf	efgtoa@nmode& (0+255),b
  2795  000CC8                     l3749:
  2796                           
  2797                           ; BSR set to: 0
  2798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  2799  000CC8  C081  F079         	movff	efgtoa@p,efgtoa@m
  2800  000CCC  C082  F07A         	movff	efgtoa@p+1,efgtoa@m+1
  2801  000CD0                     
  2802                           ; BSR set to: 0
  2803                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  2804  000CD0  0E67               	movlw	103
  2805  000CD2  1986               	xorwf	efgtoa@mode& (0+255),w,b
  2806  000CD4  A4D8               	btfss	status,2,c
  2807  000CD6  EF6F  F006         	goto	u4291
  2808  000CDA  EF71  F006         	goto	u4290
  2809  000CDE                     u4291:
  2810  000CDE  EF81  F006         	goto	l3757
  2811  000CE2                     u4290:
  2812  000CE2                     
  2813                           ; BSR set to: 0
  2814  000CE2  0E66               	movlw	102
  2815  000CE4  1983               	xorwf	efgtoa@nmode& (0+255),w,b
  2816  000CE6  A4D8               	btfss	status,2,c
  2817  000CE8  EF78  F006         	goto	u4301
  2818  000CEC  EF7A  F006         	goto	u4300
  2819  000CF0                     u4301:
  2820  000CF0  EF83  F006         	goto	l3759
  2821  000CF4                     u4300:
  2822  000CF4                     
  2823                           ; BSR set to: 0
  2824  000CF4  BF96               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2825  000CF6  EF81  F006         	goto	u4310
  2826  000CFA  EF7F  F006         	goto	u4311
  2827  000CFE                     u4311:
  2828  000CFE  EF83  F006         	goto	l3759
  2829  000D02                     u4310:
  2830  000D02                     l3757:
  2831                           
  2832                           ; BSR set to: 0
  2833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  2834  000D02  4B79               	infsnz	efgtoa@m& (0+255),f,b
  2835  000D04  2B7A               	incf	(efgtoa@m+1)& (0+255),f,b
  2836  000D06                     l3759:
  2837                           
  2838                           ; BSR set to: 0
  2839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  2840  000D06  0E66               	movlw	102
  2841  000D08  1983               	xorwf	efgtoa@nmode& (0+255),w,b
  2842  000D0A  A4D8               	btfss	status,2,c
  2843  000D0C  EF8A  F006         	goto	u4321
  2844  000D10  EF8C  F006         	goto	u4320
  2845  000D14                     u4321:
  2846  000D14  EFAC  F006         	goto	l3769
  2847  000D18                     u4320:
  2848  000D18                     
  2849                           ; BSR set to: 0
  2850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  2851  000D18  BF96               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2852  000D1A  EF93  F006         	goto	u4330
  2853  000D1E  EF91  F006         	goto	u4331
  2854  000D22                     u4331:
  2855  000D22  EF9F  F006         	goto	l3765
  2856  000D26                     u4330:
  2857  000D26                     
  2858                           ; BSR set to: 0
  2859                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  2860  000D26  0E00               	movlw	0
  2861  000D28  6F99               	movwf	efgtoa@u& (0+255),b
  2862  000D2A  0E00               	movlw	0
  2863  000D2C  6F9A               	movwf	(efgtoa@u+1)& (0+255),b
  2864  000D2E  0E80               	movlw	128
  2865  000D30  6F9B               	movwf	(efgtoa@u+2)& (0+255),b
  2866  000D32  0E3F               	movlw	63
  2867  000D34  6F9C               	movwf	(efgtoa@u+3)& (0+255),b
  2868                           
  2869                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  2870  000D36  0E00               	movlw	0
  2871  000D38  6F96               	movwf	(efgtoa@e+1)& (0+255),b
  2872  000D3A  0E00               	movlw	0
  2873  000D3C  6F95               	movwf	efgtoa@e& (0+255),b
  2874  000D3E                     l3765:
  2875                           
  2876                           ; BSR set to: 0
  2877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  2878  000D3E  0E67               	movlw	103
  2879  000D40  1986               	xorwf	efgtoa@mode& (0+255),w,b
  2880  000D42  B4D8               	btfsc	status,2,c
  2881  000D44  EFA6  F006         	goto	u4341
  2882  000D48  EFA8  F006         	goto	u4340
  2883  000D4C                     u4341:
  2884  000D4C  EFAC  F006         	goto	l3769
  2885  000D50                     u4340:
  2886  000D50                     
  2887                           ; BSR set to: 0
  2888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  2889  000D50  5195               	movf	efgtoa@e& (0+255),w,b
  2890  000D52  2779               	addwf	efgtoa@m& (0+255),f,b
  2891  000D54  5196               	movf	(efgtoa@e+1)& (0+255),w,b
  2892  000D56  237A               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2893  000D58                     l3769:
  2894                           
  2895                           ; BSR set to: 0
  2896                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  2897  000D58  0E00               	movlw	0
  2898  000D5A  6F90               	movwf	(efgtoa@i+1)& (0+255),b
  2899  000D5C  0E00               	movlw	0
  2900  000D5E  6F8F               	movwf	efgtoa@i& (0+255),b
  2901  000D60                     
  2902                           ; BSR set to: 0
  2903                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  2904  000D60  C091  F087         	movff	efgtoa@g,efgtoa@h
  2905  000D64  C092  F088         	movff	efgtoa@g+1,efgtoa@h+1
  2906  000D68  C093  F089         	movff	efgtoa@g+2,efgtoa@h+2
  2907  000D6C  C094  F08A         	movff	efgtoa@g+3,efgtoa@h+3
  2908  000D70                     
  2909                           ; BSR set to: 0
  2910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  2911  000D70  C099  F065         	movff	efgtoa@u,efgtoa@ou
  2912  000D74  C09A  F066         	movff	efgtoa@u+1,efgtoa@ou+1
  2913  000D78  C09B  F067         	movff	efgtoa@u+2,efgtoa@ou+2
  2914  000D7C  C09C  F068         	movff	efgtoa@u+3,efgtoa@ou+3
  2915                           
  2916                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  2917  000D80  EF3D  F007         	goto	l3783
  2918  000D84                     l3775:
  2919                           
  2920                           ; BSR set to: 0
  2921                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  2922  000D84  C087  F028         	movff	efgtoa@h,___fldiv@b
  2923  000D88  C088  F029         	movff	efgtoa@h+1,___fldiv@b+1
  2924  000D8C  C089  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  2925  000D90  C08A  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  2926  000D94  C099  F02C         	movff	efgtoa@u,___fldiv@a
  2927  000D98  C09A  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  2928  000D9C  C09B  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  2929  000DA0  C09C  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  2930  000DA4  ECAB  F010         	call	___fldiv	;wreg free
  2931  000DA8  C028  F041         	movff	?___fldiv,floorf@x
  2932  000DAC  C029  F042         	movff	?___fldiv+1,floorf@x+1
  2933  000DB0  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  2934  000DB4  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  2935  000DB8  EC78  F012         	call	_floorf	;wreg free
  2936  000DBC  C041  F08B         	movff	?_floorf,efgtoa@l
  2937  000DC0  C042  F08C         	movff	?_floorf+1,efgtoa@l+1
  2938  000DC4  C043  F08D         	movff	?_floorf+2,efgtoa@l+2
  2939  000DC8  C044  F08E         	movff	?_floorf+3,efgtoa@l+3
  2940                           
  2941                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  2942  000DCC  C08B  F001         	movff	efgtoa@l,___fltol@f1
  2943  000DD0  C08C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2944  000DD4  C08D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2945  000DD8  C08E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2946  000DDC  ECF3  F015         	call	___fltol	;wreg free
  2947  000DE0  C001  F07D         	movff	?___fltol,efgtoa@d
  2948  000DE4  C002  F07E         	movff	?___fltol+1,efgtoa@d+1
  2949  000DE8                     
  2950                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  2951  000DE8  C087  F028         	movff	efgtoa@h,___flsub@b
  2952  000DEC  C088  F029         	movff	efgtoa@h+1,___flsub@b+1
  2953  000DF0  C089  F02A         	movff	efgtoa@h+2,___flsub@b+2
  2954  000DF4  C08A  F02B         	movff	efgtoa@h+3,___flsub@b+3
  2955  000DF8  C099  F013         	movff	efgtoa@u,___flmul@a
  2956  000DFC  C09A  F014         	movff	efgtoa@u+1,___flmul@a+1
  2957  000E00  C09B  F015         	movff	efgtoa@u+2,___flmul@a+2
  2958  000E04  C09C  F016         	movff	efgtoa@u+3,___flmul@a+3
  2959  000E08  C08B  F00F         	movff	efgtoa@l,___flmul@b
  2960  000E0C  C08C  F010         	movff	efgtoa@l+1,___flmul@b+1
  2961  000E10  C08D  F011         	movff	efgtoa@l+2,___flmul@b+2
  2962  000E14  C08E  F012         	movff	efgtoa@l+3,___flmul@b+3
  2963  000E18  EC96  F00E         	call	___flmul	;wreg free
  2964  000E1C  C00F  F02C         	movff	?___flmul,___flsub@a
  2965  000E20  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2966  000E24  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2967  000E28  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2968  000E2C  ECC2  F01B         	call	___flsub	;wreg free
  2969  000E30  C028  F087         	movff	?___flsub,efgtoa@h
  2970  000E34  C029  F088         	movff	?___flsub+1,efgtoa@h+1
  2971  000E38  C02A  F089         	movff	?___flsub+2,efgtoa@h+2
  2972  000E3C  C02B  F08A         	movff	?___flsub+3,efgtoa@h+3
  2973  000E40                     
  2974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  2975  000E40  C099  F028         	movff	efgtoa@u,___fldiv@b
  2976  000E44  C09A  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2977  000E48  C09B  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2978  000E4C  C09C  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2979  000E50  0E00               	movlw	0
  2980  000E52  6E2C               	movwf	___fldiv@a^0,c
  2981  000E54  0E00               	movlw	0
  2982  000E56  6E2D               	movwf	(___fldiv@a+1)^0,c
  2983  000E58  0E20               	movlw	32
  2984  000E5A  6E2E               	movwf	(___fldiv@a+2)^0,c
  2985  000E5C  0E41               	movlw	65
  2986  000E5E  6E2F               	movwf	(___fldiv@a+3)^0,c
  2987  000E60  ECAB  F010         	call	___fldiv	;wreg free
  2988  000E64  C028  F099         	movff	?___fldiv,efgtoa@u
  2989  000E68  C029  F09A         	movff	?___fldiv+1,efgtoa@u+1
  2990  000E6C  C02A  F09B         	movff	?___fldiv+2,efgtoa@u+2
  2991  000E70  C02B  F09C         	movff	?___fldiv+3,efgtoa@u+3
  2992  000E74                     
  2993                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  2994  000E74  0100               	movlb	0	; () banked
  2995  000E76  4B8F               	infsnz	efgtoa@i& (0+255),f,b
  2996  000E78  2B90               	incf	(efgtoa@i+1)& (0+255),f,b
  2997  000E7A                     l3783:
  2998                           
  2999                           ; BSR set to: 0
  3000                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3001  000E7A  5179               	movf	efgtoa@m& (0+255),w,b
  3002  000E7C  5D8F               	subwf	efgtoa@i& (0+255),w,b
  3003  000E7E  5190               	movf	(efgtoa@i+1)& (0+255),w,b
  3004  000E80  0A80               	xorlw	128
  3005  000E82  6F60               	movwf	??_efgtoa& (0+255),b
  3006  000E84  517A               	movf	(efgtoa@m+1)& (0+255),w,b
  3007  000E86  0A80               	xorlw	128
  3008  000E88  5960               	subwfb	??_efgtoa& (0+255),w,b
  3009  000E8A  A0D8               	btfss	status,0,c
  3010  000E8C  EF4A  F007         	goto	u4351
  3011  000E90  EF4C  F007         	goto	u4350
  3012  000E94                     u4351:
  3013  000E94  EFC2  F006         	goto	l3775
  3014  000E98                     u4350:
  3015  000E98                     
  3016                           ; BSR set to: 0
  3017                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  3018  000E98  C099  F00F         	movff	efgtoa@u,___flmul@b
  3019  000E9C  C09A  F010         	movff	efgtoa@u+1,___flmul@b+1
  3020  000EA0  C09B  F011         	movff	efgtoa@u+2,___flmul@b+2
  3021  000EA4  C09C  F012         	movff	efgtoa@u+3,___flmul@b+3
  3022  000EA8  0E00               	movlw	0
  3023  000EAA  6E13               	movwf	___flmul@a^0,c
  3024  000EAC  0E00               	movlw	0
  3025  000EAE  6E14               	movwf	(___flmul@a+1)^0,c
  3026  000EB0  0EA0               	movlw	160
  3027  000EB2  6E15               	movwf	(___flmul@a+2)^0,c
  3028  000EB4  0E40               	movlw	64
  3029  000EB6  6E16               	movwf	(___flmul@a+3)^0,c
  3030  000EB8  EC96  F00E         	call	___flmul	;wreg free
  3031  000EBC  C00F  F08B         	movff	?___flmul,efgtoa@l
  3032  000EC0  C010  F08C         	movff	?___flmul+1,efgtoa@l+1
  3033  000EC4  C011  F08D         	movff	?___flmul+2,efgtoa@l+2
  3034  000EC8  C012  F08E         	movff	?___flmul+3,efgtoa@l+3
  3035  000ECC                     
  3036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  3037  000ECC  C087  F028         	movff	efgtoa@h,___flge@ff1
  3038  000ED0  C088  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3039  000ED4  C089  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3040  000ED8  C08A  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3041  000EDC  C08B  F02C         	movff	efgtoa@l,___flge@ff2
  3042  000EE0  C08C  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  3043  000EE4  C08D  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  3044  000EE8  C08E  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  3045  000EEC  EC76  F016         	call	___flge	;wreg free
  3046  000EF0  B0D8               	btfsc	status,0,c
  3047  000EF2  EF7D  F007         	goto	u4361
  3048  000EF6  EF7F  F007         	goto	u4360
  3049  000EFA                     u4361:
  3050  000EFA  EF8A  F007         	goto	l3791
  3051  000EFE                     u4360:
  3052  000EFE                     
  3053                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  3054  000EFE  0E00               	movlw	0
  3055  000F00  0100               	movlb	0	; () banked
  3056  000F02  6F8B               	movwf	efgtoa@l& (0+255),b
  3057  000F04  0E00               	movlw	0
  3058  000F06  6F8C               	movwf	(efgtoa@l+1)& (0+255),b
  3059  000F08  0E00               	movlw	0
  3060  000F0A  6F8D               	movwf	(efgtoa@l+2)& (0+255),b
  3061  000F0C  0E00               	movlw	0
  3062  000F0E  6F8E               	movwf	(efgtoa@l+3)& (0+255),b
  3063                           
  3064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  3065  000F10  EFB3  F007         	goto	l3797
  3066  000F14                     l3791:
  3067                           
  3068                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  3069  000F14  C087  F001         	movff	efgtoa@h,___fleq@ff1
  3070  000F18  C088  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3071  000F1C  C089  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3072  000F20  C08A  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3073  000F24  C08B  F005         	movff	efgtoa@l,___fleq@ff2
  3074  000F28  C08C  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3075  000F2C  C08D  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3076  000F30  C08E  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3077  000F34  ECD9  F019         	call	___fleq	;wreg free
  3078  000F38  A0D8               	btfss	status,0,c
  3079  000F3A  EFA1  F007         	goto	u4371
  3080  000F3E  EFA3  F007         	goto	u4370
  3081  000F42                     u4371:
  3082  000F42  EFB3  F007         	goto	l3797
  3083  000F46                     u4370:
  3084  000F46  0100               	movlb	0	; () banked
  3085  000F48  B17D               	btfsc	efgtoa@d& (0+255),0,b
  3086  000F4A  EFA9  F007         	goto	u4381
  3087  000F4E  EFAB  F007         	goto	u4380
  3088  000F52                     u4381:
  3089  000F52  EFB3  F007         	goto	l3797
  3090  000F56                     u4380:
  3091  000F56                     
  3092                           ; BSR set to: 0
  3093                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  3094  000F56  0E00               	movlw	0
  3095  000F58  6F8B               	movwf	efgtoa@l& (0+255),b
  3096  000F5A  0E00               	movlw	0
  3097  000F5C  6F8C               	movwf	(efgtoa@l+1)& (0+255),b
  3098  000F5E  0E00               	movlw	0
  3099  000F60  6F8D               	movwf	(efgtoa@l+2)& (0+255),b
  3100  000F62  0E00               	movlw	0
  3101  000F64  6F8E               	movwf	(efgtoa@l+3)& (0+255),b
  3102  000F66                     l3797:
  3103                           
  3104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  3105  000F66  C091  F001         	movff	efgtoa@g,___fladd@b
  3106  000F6A  C092  F002         	movff	efgtoa@g+1,___fladd@b+1
  3107  000F6E  C093  F003         	movff	efgtoa@g+2,___fladd@b+2
  3108  000F72  C094  F004         	movff	efgtoa@g+3,___fladd@b+3
  3109  000F76  C08B  F005         	movff	efgtoa@l,___fladd@a
  3110  000F7A  C08C  F006         	movff	efgtoa@l+1,___fladd@a+1
  3111  000F7E  C08D  F007         	movff	efgtoa@l+2,___fladd@a+2
  3112  000F82  C08E  F008         	movff	efgtoa@l+3,___fladd@a+3
  3113  000F86  ECFF  F009         	call	___fladd	;wreg free
  3114  000F8A  C001  F087         	movff	?___fladd,efgtoa@h
  3115  000F8E  C002  F088         	movff	?___fladd+1,efgtoa@h+1
  3116  000F92  C003  F089         	movff	?___fladd+2,efgtoa@h+2
  3117  000F96  C004  F08A         	movff	?___fladd+3,efgtoa@h+3
  3118  000F9A                     
  3119                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  3120  000F9A  C065  F099         	movff	efgtoa@ou,efgtoa@u
  3121  000F9E  C066  F09A         	movff	efgtoa@ou+1,efgtoa@u+1
  3122  000FA2  C067  F09B         	movff	efgtoa@ou+2,efgtoa@u+2
  3123  000FA6  C068  F09C         	movff	efgtoa@ou+3,efgtoa@u+3
  3124  000FAA                     
  3125                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  3126  000FAA  0E65               	movlw	101
  3127  000FAC  0100               	movlb	0	; () banked
  3128  000FAE  1983               	xorwf	efgtoa@nmode& (0+255),w,b
  3129  000FB0  B4D8               	btfsc	status,2,c
  3130  000FB2  EFDD  F007         	goto	u4391
  3131  000FB6  EFDF  F007         	goto	u4390
  3132  000FBA                     u4391:
  3133  000FBA  EFE5  F007         	goto	l3805
  3134  000FBE                     u4390:
  3135  000FBE                     
  3136                           ; BSR set to: 0
  3137  000FBE  C095  F07B         	movff	efgtoa@e,efgtoa@ne
  3138  000FC2  C096  F07C         	movff	efgtoa@e+1,efgtoa@ne+1
  3139  000FC6  EFE9  F007         	goto	l280
  3140  000FCA                     l3805:
  3141                           
  3142                           ; BSR set to: 0
  3143  000FCA  0E00               	movlw	0
  3144  000FCC  6F7C               	movwf	(efgtoa@ne+1)& (0+255),b
  3145  000FCE  0E00               	movlw	0
  3146  000FD0  6F7B               	movwf	efgtoa@ne& (0+255),b
  3147  000FD2                     l280:
  3148                           
  3149                           ; BSR set to: 0
  3150                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  3151  000FD2  0E00               	movlw	0
  3152  000FD4  6F78               	movwf	(efgtoa@pp+1)& (0+255),b
  3153  000FD6  0E00               	movlw	0
  3154  000FD8  6F77               	movwf	efgtoa@pp& (0+255),b
  3155                           
  3156                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  3157  000FDA  0E00               	movlw	0
  3158  000FDC  6F76               	movwf	(efgtoa@t+1)& (0+255),b
  3159  000FDE  0E00               	movlw	0
  3160  000FE0  6F75               	movwf	efgtoa@t& (0+255),b
  3161                           
  3162                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  3163  000FE2  0E00               	movlw	0
  3164  000FE4  6F90               	movwf	(efgtoa@i+1)& (0+255),b
  3165  000FE6  0E00               	movlw	0
  3166  000FE8  6F8F               	movwf	efgtoa@i& (0+255),b
  3167                           
  3168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3169  000FEA  EFE4  F008         	goto	l3855
  3170  000FEE                     l3807:
  3171                           
  3172                           ; BSR set to: 0
  3173                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  3174  000FEE  C087  F028         	movff	efgtoa@h,___fldiv@b
  3175  000FF2  C088  F029         	movff	efgtoa@h+1,___fldiv@b+1
  3176  000FF6  C089  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  3177  000FFA  C08A  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  3178  000FFE  C099  F02C         	movff	efgtoa@u,___fldiv@a
  3179  001002  C09A  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  3180  001006  C09B  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  3181  00100A  C09C  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  3182  00100E  ECAB  F010         	call	___fldiv	;wreg free
  3183  001012  C028  F041         	movff	?___fldiv,floorf@x
  3184  001016  C029  F042         	movff	?___fldiv+1,floorf@x+1
  3185  00101A  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  3186  00101E  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  3187  001022  EC78  F012         	call	_floorf	;wreg free
  3188  001026  C041  F08B         	movff	?_floorf,efgtoa@l
  3189  00102A  C042  F08C         	movff	?_floorf+1,efgtoa@l+1
  3190  00102E  C043  F08D         	movff	?_floorf+2,efgtoa@l+2
  3191  001032  C044  F08E         	movff	?_floorf+3,efgtoa@l+3
  3192                           
  3193                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  3194  001036  C08B  F001         	movff	efgtoa@l,___fltol@f1
  3195  00103A  C08C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3196  00103E  C08D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3197  001042  C08E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3198  001046  ECF3  F015         	call	___fltol	;wreg free
  3199  00104A  C001  F07D         	movff	?___fltol,efgtoa@d
  3200  00104E  C002  F07E         	movff	?___fltol+1,efgtoa@d+1
  3201  001052                     
  3202                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3203  001052  0100               	movlb	0	; () banked
  3204  001054  B9DD               	btfsc	_flags& (0+255),4,b
  3205  001056  EF2F  F008         	goto	u4401
  3206  00105A  EF31  F008         	goto	u4400
  3207  00105E                     u4401:
  3208  00105E  EF4E  F008         	goto	l3819
  3209  001062                     u4400:
  3210  001062                     
  3211                           ; BSR set to: 0
  3212  001062  517D               	movf	efgtoa@d& (0+255),w,b
  3213  001064  117E               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3214  001066  A4D8               	btfss	status,2,c
  3215  001068  EF38  F008         	goto	u4411
  3216  00106C  EF3A  F008         	goto	u4410
  3217  001070                     u4411:
  3218  001070  EF4E  F008         	goto	l3819
  3219  001074                     u4410:
  3220  001074                     
  3221                           ; BSR set to: 0
  3222  001074  0E67               	movlw	103
  3223  001076  1986               	xorwf	efgtoa@mode& (0+255),w,b
  3224  001078  A4D8               	btfss	status,2,c
  3225  00107A  EF41  F008         	goto	u4421
  3226  00107E  EF43  F008         	goto	u4420
  3227  001082                     u4421:
  3228  001082  EF4E  F008         	goto	l3819
  3229  001086                     u4420:
  3230  001086                     
  3231                           ; BSR set to: 0
  3232  001086  BF7C               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3233  001088  EF4A  F008         	goto	u4430
  3234  00108C  EF48  F008         	goto	u4431
  3235  001090                     u4431:
  3236  001090  EF4E  F008         	goto	l3819
  3237  001094                     u4430:
  3238  001094                     
  3239                           ; BSR set to: 0
  3240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  3241  001094  4B75               	infsnz	efgtoa@t& (0+255),f,b
  3242  001096  2B76               	incf	(efgtoa@t+1)& (0+255),f,b
  3243                           
  3244                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  3245  001098  EF98  F008         	goto	l3847
  3246  00109C                     l3819:
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  3250  00109C  5177               	movf	efgtoa@pp& (0+255),w,b
  3251  00109E  1178               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3252  0010A0  A4D8               	btfss	status,2,c
  3253  0010A2  EF55  F008         	goto	u4441
  3254  0010A6  EF57  F008         	goto	u4440
  3255  0010AA                     u4441:
  3256  0010AA  EF81  F008         	goto	l3839
  3257  0010AE                     u4440:
  3258  0010AE                     
  3259                           ; BSR set to: 0
  3260  0010AE  BF7C               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3261  0010B0  EF5E  F008         	goto	u4450
  3262  0010B4  EF5C  F008         	goto	u4451
  3263  0010B8                     u4451:
  3264  0010B8  EF81  F008         	goto	l3839
  3265  0010BC                     u4450:
  3266  0010BC                     
  3267                           ; BSR set to: 0
  3268                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  3269  0010BC  0E00               	movlw	low _dbuf
  3270  0010BE  2597               	addwf	efgtoa@n& (0+255),w,b
  3271  0010C0  6ED9               	movwf	fsr2l,c
  3272  0010C2  0E01               	movlw	high _dbuf
  3273  0010C4  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3274  0010C6  6EDA               	movwf	fsr2h,c
  3275  0010C8  0E2E               	movlw	46
  3276  0010CA  6EDF               	movwf	indf2,c
  3277  0010CC                     
  3278                           ; BSR set to: 0
  3279  0010CC  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3280  0010CE  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3281  0010D0                     
  3282                           ; BSR set to: 0
  3283                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  3284  0010D0  0784               	decf	efgtoa@w& (0+255),f,b
  3285  0010D2  A0D8               	btfss	status,0,c
  3286  0010D4  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3287  0010D6                     
  3288                           ; BSR set to: 0
  3289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  3290  0010D6  0E00               	movlw	0
  3291  0010D8  6F78               	movwf	(efgtoa@pp+1)& (0+255),b
  3292  0010DA  0E01               	movlw	1
  3293  0010DC  6F77               	movwf	efgtoa@pp& (0+255),b
  3294  0010DE  EF81  F008         	goto	l3839
  3295  0010E2                     l3831:
  3296                           
  3297                           ; BSR set to: 0
  3298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  3299  0010E2  0E00               	movlw	low _dbuf
  3300  0010E4  2597               	addwf	efgtoa@n& (0+255),w,b
  3301  0010E6  6ED9               	movwf	fsr2l,c
  3302  0010E8  0E01               	movlw	high _dbuf
  3303  0010EA  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3304  0010EC  6EDA               	movwf	fsr2h,c
  3305  0010EE  0E30               	movlw	48
  3306  0010F0  6EDF               	movwf	indf2,c
  3307  0010F2                     
  3308                           ; BSR set to: 0
  3309  0010F2  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3310  0010F4  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3311  0010F6                     
  3312                           ; BSR set to: 0
  3313                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  3314  0010F6  0784               	decf	efgtoa@w& (0+255),f,b
  3315  0010F8  A0D8               	btfss	status,0,c
  3316  0010FA  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3317  0010FC                     
  3318                           ; BSR set to: 0
  3319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  3320  0010FC  0775               	decf	efgtoa@t& (0+255),f,b
  3321  0010FE  A0D8               	btfss	status,0,c
  3322  001100  0776               	decf	(efgtoa@t+1)& (0+255),f,b
  3323  001102                     l3839:
  3324                           
  3325                           ; BSR set to: 0
  3326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  3327  001102  5175               	movf	efgtoa@t& (0+255),w,b
  3328  001104  1176               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3329  001106  A4D8               	btfss	status,2,c
  3330  001108  EF88  F008         	goto	u4461
  3331  00110C  EF8A  F008         	goto	u4460
  3332  001110                     u4461:
  3333  001110  EF71  F008         	goto	l3831
  3334  001114                     u4460:
  3335  001114                     
  3336                           ; BSR set to: 0
  3337                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  3338  001114  0E00               	movlw	low _dbuf
  3339  001116  2597               	addwf	efgtoa@n& (0+255),w,b
  3340  001118  6ED9               	movwf	fsr2l,c
  3341  00111A  0E01               	movlw	high _dbuf
  3342  00111C  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3343  00111E  6EDA               	movwf	fsr2h,c
  3344  001120  517D               	movf	efgtoa@d& (0+255),w,b
  3345  001122  0F30               	addlw	48
  3346  001124  6EDF               	movwf	indf2,c
  3347  001126                     
  3348                           ; BSR set to: 0
  3349  001126  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3350  001128  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3351  00112A                     
  3352                           ; BSR set to: 0
  3353                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  3354  00112A  0784               	decf	efgtoa@w& (0+255),f,b
  3355  00112C  A0D8               	btfss	status,0,c
  3356  00112E  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3357  001130                     l3847:
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  3361  001130  C087  F028         	movff	efgtoa@h,___flsub@b
  3362  001134  C088  F029         	movff	efgtoa@h+1,___flsub@b+1
  3363  001138  C089  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3364  00113C  C08A  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3365  001140  C099  F013         	movff	efgtoa@u,___flmul@a
  3366  001144  C09A  F014         	movff	efgtoa@u+1,___flmul@a+1
  3367  001148  C09B  F015         	movff	efgtoa@u+2,___flmul@a+2
  3368  00114C  C09C  F016         	movff	efgtoa@u+3,___flmul@a+3
  3369  001150  C08B  F00F         	movff	efgtoa@l,___flmul@b
  3370  001154  C08C  F010         	movff	efgtoa@l+1,___flmul@b+1
  3371  001158  C08D  F011         	movff	efgtoa@l+2,___flmul@b+2
  3372  00115C  C08E  F012         	movff	efgtoa@l+3,___flmul@b+3
  3373  001160  EC96  F00E         	call	___flmul	;wreg free
  3374  001164  C00F  F02C         	movff	?___flmul,___flsub@a
  3375  001168  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3376  00116C  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3377  001170  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3378  001174  ECC2  F01B         	call	___flsub	;wreg free
  3379  001178  C028  F087         	movff	?___flsub,efgtoa@h
  3380  00117C  C029  F088         	movff	?___flsub+1,efgtoa@h+1
  3381  001180  C02A  F089         	movff	?___flsub+2,efgtoa@h+2
  3382  001184  C02B  F08A         	movff	?___flsub+3,efgtoa@h+3
  3383  001188                     
  3384                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  3385  001188  C099  F028         	movff	efgtoa@u,___fldiv@b
  3386  00118C  C09A  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3387  001190  C09B  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3388  001194  C09C  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3389  001198  0E00               	movlw	0
  3390  00119A  6E2C               	movwf	___fldiv@a^0,c
  3391  00119C  0E00               	movlw	0
  3392  00119E  6E2D               	movwf	(___fldiv@a+1)^0,c
  3393  0011A0  0E20               	movlw	32
  3394  0011A2  6E2E               	movwf	(___fldiv@a+2)^0,c
  3395  0011A4  0E41               	movlw	65
  3396  0011A6  6E2F               	movwf	(___fldiv@a+3)^0,c
  3397  0011A8  ECAB  F010         	call	___fldiv	;wreg free
  3398  0011AC  C028  F099         	movff	?___fldiv,efgtoa@u
  3399  0011B0  C029  F09A         	movff	?___fldiv+1,efgtoa@u+1
  3400  0011B4  C02A  F09B         	movff	?___fldiv+2,efgtoa@u+2
  3401  0011B8  C02B  F09C         	movff	?___fldiv+3,efgtoa@u+3
  3402  0011BC                     
  3403                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  3404  0011BC  0100               	movlb	0	; () banked
  3405  0011BE  077B               	decf	efgtoa@ne& (0+255),f,b
  3406  0011C0  A0D8               	btfss	status,0,c
  3407  0011C2  077C               	decf	(efgtoa@ne+1)& (0+255),f,b
  3408  0011C4                     
  3409                           ; BSR set to: 0
  3410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  3411  0011C4  4B8F               	infsnz	efgtoa@i& (0+255),f,b
  3412  0011C6  2B90               	incf	(efgtoa@i+1)& (0+255),f,b
  3413  0011C8                     l3855:
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3417  0011C8  5179               	movf	efgtoa@m& (0+255),w,b
  3418  0011CA  5D8F               	subwf	efgtoa@i& (0+255),w,b
  3419  0011CC  5190               	movf	(efgtoa@i+1)& (0+255),w,b
  3420  0011CE  0A80               	xorlw	128
  3421  0011D0  6F60               	movwf	??_efgtoa& (0+255),b
  3422  0011D2  517A               	movf	(efgtoa@m+1)& (0+255),w,b
  3423  0011D4  0A80               	xorlw	128
  3424  0011D6  5960               	subwfb	??_efgtoa& (0+255),w,b
  3425  0011D8  B0D8               	btfsc	status,0,c
  3426  0011DA  EFF1  F008         	goto	u4471
  3427  0011DE  EFF3  F008         	goto	u4470
  3428  0011E2                     u4471:
  3429  0011E2  EF01  F009         	goto	l3859
  3430  0011E6                     u4470:
  3431  0011E6                     
  3432                           ; BSR set to: 0
  3433  0011E6  BF98               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3434  0011E8  EFFF  F008         	goto	u4481
  3435  0011EC  5198               	movf	(efgtoa@n+1)& (0+255),w,b
  3436  0011EE  E109               	bnz	u4480
  3437  0011F0  0E4B               	movlw	75
  3438  0011F2  5D97               	subwf	efgtoa@n& (0+255),w,b
  3439  0011F4  A0D8               	btfss	status,0,c
  3440  0011F6  EFFF  F008         	goto	u4481
  3441  0011FA  EF01  F009         	goto	u4480
  3442  0011FE                     u4481:
  3443  0011FE  EFF7  F007         	goto	l3807
  3444  001202                     u4480:
  3445  001202                     l3859:
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  3449  001202  5177               	movf	efgtoa@pp& (0+255),w,b
  3450  001204  1178               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3451  001206  A4D8               	btfss	status,2,c
  3452  001208  EF08  F009         	goto	u4491
  3453  00120C  EF0A  F009         	goto	u4490
  3454  001210                     u4491:
  3455  001210  EF1B  F009         	goto	l3867
  3456  001214                     u4490:
  3457  001214                     
  3458                           ; BSR set to: 0
  3459  001214  A9DD               	btfss	_flags& (0+255),4,b
  3460  001216  EF0F  F009         	goto	u4501
  3461  00121A  EF11  F009         	goto	u4500
  3462  00121E                     u4501:
  3463  00121E  EF1B  F009         	goto	l3867
  3464  001222                     u4500:
  3465  001222                     
  3466                           ; BSR set to: 0
  3467                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  3468  001222  0E00               	movlw	low _dbuf
  3469  001224  2597               	addwf	efgtoa@n& (0+255),w,b
  3470  001226  6ED9               	movwf	fsr2l,c
  3471  001228  0E01               	movlw	high _dbuf
  3472  00122A  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3473  00122C  6EDA               	movwf	fsr2h,c
  3474  00122E  0E2E               	movlw	46
  3475  001230  6EDF               	movwf	indf2,c
  3476  001232                     
  3477                           ; BSR set to: 0
  3478  001232  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3479  001234  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3480  001236                     l3867:
  3481                           
  3482                           ; BSR set to: 0
  3483                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  3484  001236  0E00               	movlw	low _dbuf
  3485  001238  2597               	addwf	efgtoa@n& (0+255),w,b
  3486  00123A  6ED9               	movwf	fsr2l,c
  3487  00123C  0E01               	movlw	high _dbuf
  3488  00123E  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3489  001240  6EDA               	movwf	fsr2h,c
  3490  001242  0E00               	movlw	0
  3491  001244  6EDF               	movwf	indf2,c
  3492  001246                     
  3493                           ; BSR set to: 0
  3494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  3495  001246  0E65               	movlw	101
  3496  001248  1983               	xorwf	efgtoa@nmode& (0+255),w,b
  3497  00124A  A4D8               	btfss	status,2,c
  3498  00124C  EF2A  F009         	goto	u4511
  3499  001250  EF2C  F009         	goto	u4510
  3500  001254                     u4511:
  3501  001254  EFDA  F004         	goto	l3679
  3502  001258                     u4510:
  3503  001258                     
  3504                           ; BSR set to: 0
  3505                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  3506  001258  0E00               	movlw	0
  3507  00125A  6F90               	movwf	(efgtoa@i+1)& (0+255),b
  3508  00125C  0E4F               	movlw	79
  3509  00125E  6F8F               	movwf	efgtoa@i& (0+255),b
  3510  001260                     
  3511                           ; BSR set to: 0
  3512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  3513  001260  0E00               	movlw	low _dbuf
  3514  001262  258F               	addwf	efgtoa@i& (0+255),w,b
  3515  001264  6ED9               	movwf	fsr2l,c
  3516  001266  0E01               	movlw	high _dbuf
  3517  001268  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3518  00126A  6EDA               	movwf	fsr2h,c
  3519  00126C  0E00               	movlw	0
  3520  00126E  6EDF               	movwf	indf2,c
  3521  001270                     
  3522                           ; BSR set to: 0
  3523                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  3524  001270  0E00               	movlw	0
  3525  001272  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  3526  001274  0E00               	movlw	0
  3527  001276  6F7F               	movwf	efgtoa@sign& (0+255),b
  3528  001278                     
  3529                           ; BSR set to: 0
  3530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  3531  001278  BF96               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3532  00127A  EF43  F009         	goto	u4520
  3533  00127E  EF41  F009         	goto	u4521
  3534  001282                     u4521:
  3535  001282  EF4B  F009         	goto	l3883
  3536  001286                     u4520:
  3537  001286                     
  3538                           ; BSR set to: 0
  3539                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  3540  001286  0E00               	movlw	0
  3541  001288  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  3542  00128A  0E01               	movlw	1
  3543  00128C  6F7F               	movwf	efgtoa@sign& (0+255),b
  3544  00128E                     
  3545                           ; BSR set to: 0
  3546                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  3547  00128E  6D95               	negf	efgtoa@e& (0+255),b
  3548  001290  1F96               	comf	(efgtoa@e+1)& (0+255),f,b
  3549  001292  B0D8               	btfsc	status,0,c
  3550  001294  2B96               	incf	(efgtoa@e+1)& (0+255),f,b
  3551  001296                     l3883:
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  3555  001296  0E00               	movlw	0
  3556  001298  6F82               	movwf	(efgtoa@p+1)& (0+255),b
  3557  00129A  0E02               	movlw	2
  3558  00129C  6F81               	movwf	efgtoa@p& (0+255),b
  3559                           
  3560                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  3561  00129E  EF7C  F009         	goto	l3895
  3562  0012A2                     l3885:
  3563                           
  3564                           ; BSR set to: 0
  3565                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  3566  0012A2  078F               	decf	efgtoa@i& (0+255),f,b
  3567  0012A4  A0D8               	btfss	status,0,c
  3568  0012A6  0790               	decf	(efgtoa@i+1)& (0+255),f,b
  3569  0012A8                     
  3570                           ; BSR set to: 0
  3571                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  3572  0012A8  0E00               	movlw	low _dbuf
  3573  0012AA  258F               	addwf	efgtoa@i& (0+255),w,b
  3574  0012AC  6ED9               	movwf	fsr2l,c
  3575  0012AE  0E01               	movlw	high _dbuf
  3576  0012B0  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3577  0012B2  6EDA               	movwf	fsr2h,c
  3578  0012B4  C095  F001         	movff	efgtoa@e,___awmod@dividend
  3579  0012B8  C096  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3580  0012BC  0E00               	movlw	0
  3581  0012BE  6E04               	movwf	(___awmod@divisor+1)^0,c
  3582  0012C0  0E0A               	movlw	10
  3583  0012C2  6E03               	movwf	___awmod@divisor^0,c
  3584  0012C4  EC81  F019         	call	___awmod	;wreg free
  3585  0012C8  5001               	movf	?___awmod^0,w,c
  3586  0012CA  0F30               	addlw	48
  3587  0012CC  6EDF               	movwf	indf2,c
  3588  0012CE                     
  3589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  3590  0012CE  C095  F001         	movff	efgtoa@e,___awdiv@dividend
  3591  0012D2  C096  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  3592  0012D6  0E00               	movlw	0
  3593  0012D8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3594  0012DA  0E0A               	movlw	10
  3595  0012DC  6E03               	movwf	___awdiv@divisor^0,c
  3596  0012DE  EC1F  F019         	call	___awdiv	;wreg free
  3597  0012E2  C001  F095         	movff	?___awdiv,efgtoa@e
  3598  0012E6  C002  F096         	movff	?___awdiv+1,efgtoa@e+1
  3599  0012EA                     
  3600                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  3601  0012EA  0100               	movlb	0	; () banked
  3602  0012EC  0781               	decf	efgtoa@p& (0+255),f,b
  3603  0012EE  A0D8               	btfss	status,0,c
  3604  0012F0  0782               	decf	(efgtoa@p+1)& (0+255),f,b
  3605  0012F2                     
  3606                           ; BSR set to: 0
  3607                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  3608  0012F2  0784               	decf	efgtoa@w& (0+255),f,b
  3609  0012F4  A0D8               	btfss	status,0,c
  3610  0012F6  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3611  0012F8                     l3895:
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  3615  0012F8  5195               	movf	efgtoa@e& (0+255),w,b
  3616  0012FA  1196               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3617  0012FC  A4D8               	btfss	status,2,c
  3618  0012FE  EF83  F009         	goto	u4531
  3619  001302  EF85  F009         	goto	u4530
  3620  001306                     u4531:
  3621  001306  EF51  F009         	goto	l3885
  3622  00130A                     u4530:
  3623  00130A                     
  3624                           ; BSR set to: 0
  3625  00130A  BF82               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3626  00130C  EF92  F009         	goto	u4540
  3627  001310  5182               	movf	(efgtoa@p+1)& (0+255),w,b
  3628  001312  E106               	bnz	u4541
  3629  001314  0581               	decf	efgtoa@p& (0+255),w,b
  3630  001316  B0D8               	btfsc	status,0,c
  3631  001318  EF90  F009         	goto	u4541
  3632  00131C  EF92  F009         	goto	u4540
  3633  001320                     u4541:
  3634  001320  EF51  F009         	goto	l3885
  3635  001324                     u4540:
  3636  001324                     
  3637                           ; BSR set to: 0
  3638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  3639  001324  078F               	decf	efgtoa@i& (0+255),f,b
  3640  001326  A0D8               	btfss	status,0,c
  3641  001328  0790               	decf	(efgtoa@i+1)& (0+255),f,b
  3642  00132A                     
  3643                           ; BSR set to: 0
  3644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  3645  00132A  517F               	movf	efgtoa@sign& (0+255),w,b
  3646  00132C  1180               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3647  00132E  A4D8               	btfss	status,2,c
  3648  001330  EF9C  F009         	goto	u4551
  3649  001334  EF9E  F009         	goto	u4550
  3650  001338                     u4551:
  3651  001338  EFA4  F009         	goto	l3905
  3652  00133C                     u4550:
  3653  00133C                     
  3654                           ; BSR set to: 0
  3655  00133C  0E00               	movlw	0
  3656  00133E  6F70               	movwf	(_efgtoa$487+1)& (0+255),b
  3657  001340  0E2B               	movlw	43
  3658  001342  6F6F               	movwf	_efgtoa$487& (0+255),b
  3659  001344  EFA8  F009         	goto	l3907
  3660  001348                     l3905:
  3661                           
  3662                           ; BSR set to: 0
  3663  001348  0E00               	movlw	0
  3664  00134A  6F70               	movwf	(_efgtoa$487+1)& (0+255),b
  3665  00134C  0E2D               	movlw	45
  3666  00134E  6F6F               	movwf	_efgtoa$487& (0+255),b
  3667  001350                     l3907:
  3668                           
  3669                           ; BSR set to: 0
  3670  001350  0E00               	movlw	low _dbuf
  3671  001352  258F               	addwf	efgtoa@i& (0+255),w,b
  3672  001354  6ED9               	movwf	fsr2l,c
  3673  001356  0E01               	movlw	high _dbuf
  3674  001358  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3675  00135A  6EDA               	movwf	fsr2h,c
  3676  00135C  C06F  FFDF         	movff	_efgtoa$487,indf2
  3677  001360                     
  3678                           ; BSR set to: 0
  3679                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  3680  001360  0784               	decf	efgtoa@w& (0+255),f,b
  3681  001362  A0D8               	btfss	status,0,c
  3682  001364  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3683  001366                     
  3684                           ; BSR set to: 0
  3685                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3686  001366  078F               	decf	efgtoa@i& (0+255),f,b
  3687  001368  A0D8               	btfss	status,0,c
  3688  00136A  0790               	decf	(efgtoa@i+1)& (0+255),f,b
  3689  00136C                     
  3690                           ; BSR set to: 0
  3691  00136C  0EBF               	movlw	191
  3692  00136E  6F60               	movwf	??_efgtoa& (0+255),b
  3693  001370  0EFF               	movlw	255
  3694  001372  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  3695  001374  505B               	movf	efgtoa@c^0,w,c
  3696  001376  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  3697  001378  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  3698  00137A  5160               	movf	??_efgtoa& (0+255),w,b
  3699  00137C  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  3700  00137E  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  3701  001380  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3702  001382  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  3703  001384  E10A               	bnz	u4560
  3704  001386  0E1A               	movlw	26
  3705  001388  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  3706  00138A  A0D8               	btfss	status,0,c
  3707  00138C  EFCA  F009         	goto	u4561
  3708  001390  EFCD  F009         	goto	u4560
  3709  001394                     u4561:
  3710  001394  0E01               	movlw	1
  3711  001396  EFCE  F009         	goto	u4570
  3712  00139A                     u4560:
  3713  00139A  0E00               	movlw	0
  3714  00139C                     u4570:
  3715  00139C  6F73               	movwf	_efgtoa$489& (0+255),b
  3716  00139E  6B74               	clrf	(_efgtoa$489+1)& (0+255),b
  3717  0013A0                     
  3718                           ; BSR set to: 0
  3719  0013A0  5173               	movf	_efgtoa$489& (0+255),w,b
  3720  0013A2  1174               	iorwf	(_efgtoa$489+1)& (0+255),w,b
  3721  0013A4  A4D8               	btfss	status,2,c
  3722  0013A6  EFD7  F009         	goto	u4581
  3723  0013AA  EFD9  F009         	goto	u4580
  3724  0013AE                     u4581:
  3725  0013AE  EFDF  F009         	goto	l3921
  3726  0013B2                     u4580:
  3727  0013B2                     
  3728                           ; BSR set to: 0
  3729  0013B2  0E00               	movlw	0
  3730  0013B4  6F72               	movwf	(_efgtoa$488+1)& (0+255),b
  3731  0013B6  0E65               	movlw	101
  3732  0013B8  6F71               	movwf	_efgtoa$488& (0+255),b
  3733  0013BA  EFE3  F009         	goto	l3923
  3734  0013BE                     l3921:
  3735                           
  3736                           ; BSR set to: 0
  3737  0013BE  0E00               	movlw	0
  3738  0013C0  6F72               	movwf	(_efgtoa$488+1)& (0+255),b
  3739  0013C2  0E45               	movlw	69
  3740  0013C4  6F71               	movwf	_efgtoa$488& (0+255),b
  3741  0013C6                     l3923:
  3742                           
  3743                           ; BSR set to: 0
  3744  0013C6  0E00               	movlw	low _dbuf
  3745  0013C8  258F               	addwf	efgtoa@i& (0+255),w,b
  3746  0013CA  6ED9               	movwf	fsr2l,c
  3747  0013CC  0E01               	movlw	high _dbuf
  3748  0013CE  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3749  0013D0  6EDA               	movwf	fsr2h,c
  3750  0013D2  C071  FFDF         	movff	_efgtoa$488,indf2
  3751  0013D6                     
  3752                           ; BSR set to: 0
  3753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  3754  0013D6  0784               	decf	efgtoa@w& (0+255),f,b
  3755  0013D8  A0D8               	btfss	status,0,c
  3756  0013DA  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3757  0013DC                     
  3758                           ; BSR set to: 0
  3759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  3760  0013DC  0E00               	movlw	low _dbuf
  3761  0013DE  2597               	addwf	efgtoa@n& (0+255),w,b
  3762  0013E0  6E01               	movwf	strcpy@dest^0,c
  3763  0013E2  0E01               	movlw	high _dbuf
  3764  0013E4  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3765  0013E6  6E02               	movwf	(strcpy@dest+1)^0,c
  3766  0013E8  0E00               	movlw	low _dbuf
  3767  0013EA  258F               	addwf	efgtoa@i& (0+255),w,b
  3768  0013EC  6E03               	movwf	strcpy@src^0,c
  3769  0013EE  0E01               	movlw	high _dbuf
  3770  0013F0  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3771  0013F2  6E04               	movwf	(strcpy@src+1)^0,c
  3772  0013F4  ECC8  F01A         	call	_strcpy	;wreg free
  3773  0013F8  EFDA  F004         	goto	l3679
  3774  0013FC                     l236:
  3775  0013FC  0012               	return		;funcret
  3776  0013FE                     __end_of_efgtoa:
  3777                           	opt callstack 0
  3778                           
  3779 ;; *************** function _tolower *****************
  3780 ;; Defined at:
  3781 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  3782 ;; Parameters:    Size  Location     Type
  3783 ;;  c               2    6[COMRAM] int 
  3784 ;; Auto vars:     Size  Location     Type
  3785 ;;		None
  3786 ;; Return value:  Size  Location     Type
  3787 ;;                  2    6[COMRAM] int 
  3788 ;; Registers used:
  3789 ;;		wreg, status,2, status,0
  3790 ;; Tracked objects:
  3791 ;;		On entry : 0/0
  3792 ;;		On exit  : 0/0
  3793 ;;		Unchanged: 0/0
  3794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3795 ;;      Params:         2       0       0       0       0       0       0       0       0
  3796 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3797 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3798 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3799 ;;Total ram usage:        8 bytes
  3800 ;; Hardware stack levels used:    1
  3801 ;; Hardware stack levels required when called:    1
  3802 ;; This function calls:
  3803 ;;		_isupper
  3804 ;; This function is called by:
  3805 ;;		_efgtoa
  3806 ;;		_vfpfcnvrt
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810                           	psect	text6
  3811  003530                     __ptext6:
  3812                           	opt callstack 0
  3813  003530                     _tolower:
  3814                           	opt callstack 26
  3815  003530  0EBF               	movlw	191
  3816  003532  6E09               	movwf	??_tolower^0,c
  3817  003534  0EFF               	movlw	255
  3818  003536  6E0A               	movwf	(??_tolower+1)^0,c
  3819  003538  C007  F00B         	movff	tolower@c,??_tolower+2
  3820  00353C  C008  F00C         	movff	tolower@c+1,??_tolower+3
  3821  003540  5009               	movf	??_tolower^0,w,c
  3822  003542  260B               	addwf	(??_tolower+2)^0,f,c
  3823  003544  500A               	movf	(??_tolower+1)^0,w,c
  3824  003546  220C               	addwfc	(??_tolower+3)^0,f,c
  3825  003548  500C               	movf	(??_tolower+3)^0,w,c
  3826  00354A  E10A               	bnz	u3200
  3827  00354C  0E1A               	movlw	26
  3828  00354E  5C0B               	subwf	(??_tolower+2)^0,w,c
  3829  003550  A0D8               	btfss	status,0,c
  3830  003552  EFAD  F01A         	goto	u3201
  3831  003556  EFB0  F01A         	goto	u3200
  3832  00355A                     u3201:
  3833  00355A  0E01               	movlw	1
  3834  00355C  EFB1  F01A         	goto	u3210
  3835  003560                     u3200:
  3836  003560  0E00               	movlw	0
  3837  003562                     u3210:
  3838  003562  6E0D               	movwf	_tolower$1094^0,c
  3839  003564  6A0E               	clrf	(_tolower$1094+1)^0,c
  3840  003566  500D               	movf	_tolower$1094^0,w,c
  3841  003568  100E               	iorwf	(_tolower$1094+1)^0,w,c
  3842  00356A  B4D8               	btfsc	status,2,c
  3843  00356C  EFBA  F01A         	goto	u3221
  3844  003570  EFBC  F01A         	goto	u3220
  3845  003574                     u3221:
  3846  003574  EFC3  F01A         	goto	l1145
  3847  003578                     u3220:
  3848  003578  0E20               	movlw	32
  3849  00357A  1007               	iorwf	tolower@c^0,w,c
  3850  00357C  6E07               	movwf	?_tolower^0,c
  3851  00357E  5008               	movf	(tolower@c+1)^0,w,c
  3852  003580  6E08               	movwf	(?_tolower+1)^0,c
  3853  003582  EFC7  F01A         	goto	l1150
  3854  003586                     l1145:
  3855  003586  C007  F007         	movff	tolower@c,?_tolower
  3856  00358A  C008  F008         	movff	tolower@c+1,?_tolower+1
  3857  00358E                     l1150:
  3858  00358E  0012               	return		;funcret
  3859  003590                     __end_of_tolower:
  3860                           	opt callstack 0
  3861                           
  3862 ;; *************** function _isupper *****************
  3863 ;; Defined at:
  3864 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;  c               2    0[COMRAM] int 
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;		None
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  2    0[COMRAM] int 
  3871 ;; Registers used:
  3872 ;;		wreg, status,2, status,0
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3878 ;;      Params:         2       0       0       0       0       0       0       0       0
  3879 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3880 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3881 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3882 ;;Total ram usage:        6 bytes
  3883 ;; Hardware stack levels used:    1
  3884 ;; This function calls:
  3885 ;;		Nothing
  3886 ;; This function is called by:
  3887 ;;		_efgtoa
  3888 ;;		_vfpfcnvrt
  3889 ;;		_tolower
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893                           	psect	text7
  3894  003892                     __ptext7:
  3895                           	opt callstack 0
  3896  003892                     _isupper:
  3897                           	opt callstack 26
  3898  003892  0EBF               	movlw	191
  3899  003894  6E03               	movwf	??_isupper^0,c
  3900  003896  0EFF               	movlw	255
  3901  003898  6E04               	movwf	(??_isupper+1)^0,c
  3902  00389A  C001  F005         	movff	isupper@c,??_isupper+2
  3903  00389E  C002  F006         	movff	isupper@c+1,??_isupper+3
  3904  0038A2  5003               	movf	??_isupper^0,w,c
  3905  0038A4  2605               	addwf	(??_isupper+2)^0,f,c
  3906  0038A6  5004               	movf	(??_isupper+1)^0,w,c
  3907  0038A8  2206               	addwfc	(??_isupper+3)^0,f,c
  3908  0038AA  5006               	movf	(??_isupper+3)^0,w,c
  3909  0038AC  E10A               	bnz	u2660
  3910  0038AE  0E1A               	movlw	26
  3911  0038B0  5C05               	subwf	(??_isupper+2)^0,w,c
  3912  0038B2  A0D8               	btfss	status,0,c
  3913  0038B4  EF5E  F01C         	goto	u2661
  3914  0038B8  EF61  F01C         	goto	u2660
  3915  0038BC                     u2661:
  3916  0038BC  0E01               	movlw	1
  3917  0038BE  EF62  F01C         	goto	u2670
  3918  0038C2                     u2660:
  3919  0038C2  0E00               	movlw	0
  3920  0038C4                     u2670:
  3921  0038C4  6E01               	movwf	?_isupper^0,c
  3922  0038C6  6A02               	clrf	(?_isupper+1)^0,c
  3923  0038C8  0012               	return		;funcret
  3924  0038CA                     __end_of_isupper:
  3925                           	opt callstack 0
  3926                           
  3927 ;; *************** function _strcpy *****************
  3928 ;; Defined at:
  3929 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  3930 ;; Parameters:    Size  Location     Type
  3931 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3932 ;;		 -> dbuf(80), 
  3933 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3934 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  3935 ;;		 -> dbuf(80), 
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;  d               2    8[COMRAM] PTR unsigned char 
  3938 ;;		 -> dbuf(80), 
  3939 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3940 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  3941 ;;		 -> dbuf(80), 
  3942 ;; Return value:  Size  Location     Type
  3943 ;;                  2    0[COMRAM] PTR unsigned char 
  3944 ;; Registers used:
  3945 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3946 ;; Tracked objects:
  3947 ;;		On entry : 0/0
  3948 ;;		On exit  : 0/0
  3949 ;;		Unchanged: 0/0
  3950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3951 ;;      Params:         4       0       0       0       0       0       0       0       0
  3952 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3953 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3954 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3955 ;;Total ram usage:       10 bytes
  3956 ;; Hardware stack levels used:    1
  3957 ;; This function calls:
  3958 ;;		Nothing
  3959 ;; This function is called by:
  3960 ;;		_efgtoa
  3961 ;; This function uses a non-reentrant model
  3962 ;;
  3963                           
  3964                           	psect	text8
  3965  003590                     __ptext8:
  3966                           	opt callstack 0
  3967  003590                     _strcpy:
  3968                           	opt callstack 26
  3969  003590  C003  F007         	movff	strcpy@src,strcpy@s
  3970  003594  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  3971  003598  C001  F009         	movff	strcpy@dest,strcpy@d
  3972  00359C  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  3973  0035A0                     l3127:
  3974  0035A0  5007               	movf	strcpy@s^0,w,c
  3975  0035A2  6E05               	movwf	??_strcpy^0,c
  3976  0035A4  5008               	movf	(strcpy@s+1)^0,w,c
  3977  0035A6  6E06               	movwf	(??_strcpy+1)^0,c
  3978  0035A8  4A07               	infsnz	strcpy@s^0,f,c
  3979  0035AA  2A08               	incf	(strcpy@s+1)^0,f,c
  3980  0035AC  C005  FFF6         	movff	??_strcpy,tblptrl
  3981  0035B0  C006  FFF7         	movff	??_strcpy+1,tblptrh
  3982  0035B4  6AF8               	clrf	tblptru,c
  3983  0035B6  C009  FFD9         	movff	strcpy@d,fsr2l
  3984  0035BA  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  3985  0035BE  4A09               	infsnz	strcpy@d^0,f,c
  3986  0035C0  2A0A               	incf	(strcpy@d+1)^0,f,c
  3987  0035C2  0E07               	movlw	(high __ramtop+-1)
  3988  0035C4  64F7               	cpfsgt	tblptrh,c
  3989  0035C6  D003               	bra	u3187
  3990  0035C8  0008               	tblrd		*
  3991  0035CA  50F5               	movf	tablat,w,c
  3992  0035CC  D005               	bra	u3180
  3993  0035CE                     u3187:
  3994  0035CE  CFF6 FFE9          	movff	tblptrl,fsr0l
  3995  0035D2  CFF7 FFEA          	movff	tblptrh,fsr0h
  3996  0035D6  50EF               	movf	indf0,w,c
  3997  0035D8                     u3180:
  3998  0035D8  6EDF               	movwf	indf2,c
  3999  0035DA  50DF               	movf	indf2,w,c
  4000  0035DC  A4D8               	btfss	status,2,c
  4001  0035DE  EFF3  F01A         	goto	u3191
  4002  0035E2  EFF5  F01A         	goto	u3190
  4003  0035E6                     u3191:
  4004  0035E6  EFD0  F01A         	goto	l3127
  4005  0035EA                     u3190:
  4006  0035EA  0012               	return		;funcret
  4007  0035EC                     __end_of_strcpy:
  4008                           	opt callstack 0
  4009                           
  4010 ;; *************** function _pad *****************
  4011 ;; Defined at:
  4012 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4015 ;;		 -> sprintf@f(6), 
  4016 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4017 ;;		 -> dbuf(80), 
  4018 ;;  p               2   20[COMRAM] int 
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;  w               2   25[COMRAM] int 
  4021 ;;  i               2   23[COMRAM] int 
  4022 ;; Return value:  Size  Location     Type
  4023 ;;                  2   16[COMRAM] int 
  4024 ;; Registers used:
  4025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4026 ;; Tracked objects:
  4027 ;;		On entry : 0/0
  4028 ;;		On exit  : 0/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4031 ;;      Params:         6       0       0       0       0       0       0       0       0
  4032 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4033 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4034 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4035 ;;Total ram usage:       11 bytes
  4036 ;; Hardware stack levels used:    1
  4037 ;; Hardware stack levels required when called:    3
  4038 ;; This function calls:
  4039 ;;		_fputc
  4040 ;;		_fputs
  4041 ;;		_strlen
  4042 ;; This function is called by:
  4043 ;;		_efgtoa
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046                           
  4047                           	psect	text9
  4048  003178                     __ptext9:
  4049                           	opt callstack 0
  4050  003178                     _pad:
  4051                           	opt callstack 23
  4052  003178                     
  4053                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4054  003178  0100               	movlb	0	; () banked
  4055  00317A  A1DD               	btfss	_flags& (0+255),0,b
  4056  00317C  EFC2  F018         	goto	u3071
  4057  003180  EFC4  F018         	goto	u3070
  4058  003184                     u3071:
  4059  003184  EFCE  F018         	goto	l3085
  4060  003188                     u3070:
  4061  003188                     
  4062                           ; BSR set to: 0
  4063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4064  003188  C013  F00A         	movff	pad@buf,fputs@s
  4065  00318C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4066  003190  C011  F00C         	movff	pad@fp,fputs@fp
  4067  003194  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4068  003198  EC08  F01C         	call	_fputs	;wreg free
  4069  00319C                     l3085:
  4070                           
  4071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4072  00319C  BE16               	btfsc	(pad@p+1)^0,7,c
  4073  00319E  EFD3  F018         	goto	u3081
  4074  0031A2  EFD5  F018         	goto	u3080
  4075  0031A6                     u3081:
  4076  0031A6  EFDB  F018         	goto	l3089
  4077  0031AA                     u3080:
  4078  0031AA  C015  F01A         	movff	pad@p,pad@w
  4079  0031AE  C016  F01B         	movff	pad@p+1,pad@w+1
  4080  0031B2  EFDF  F018         	goto	l213
  4081  0031B6                     l3089:
  4082  0031B6  0E00               	movlw	0
  4083  0031B8  6E1B               	movwf	(pad@w+1)^0,c
  4084  0031BA  0E00               	movlw	0
  4085  0031BC  6E1A               	movwf	pad@w^0,c
  4086  0031BE                     l213:
  4087                           
  4088                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  4089  0031BE  0E00               	movlw	0
  4090  0031C0  6E19               	movwf	(pad@i+1)^0,c
  4091  0031C2  0E00               	movlw	0
  4092  0031C4  6E18               	movwf	pad@i^0,c
  4093                           
  4094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4095  0031C6  EFF1  F018         	goto	l3095
  4096  0031CA                     l3091:
  4097                           
  4098                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4099  0031CA  0E00               	movlw	0
  4100  0031CC  6E02               	movwf	(fputc@c+1)^0,c
  4101  0031CE  0E20               	movlw	32
  4102  0031D0  6E01               	movwf	fputc@c^0,c
  4103  0031D2  C011  F003         	movff	pad@fp,fputc@fp
  4104  0031D6  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4105  0031DA  EC57  F018         	call	_fputc	;wreg free
  4106  0031DE                     
  4107                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4108  0031DE  4A18               	infsnz	pad@i^0,f,c
  4109  0031E0  2A19               	incf	(pad@i+1)^0,f,c
  4110  0031E2                     l3095:
  4111                           
  4112                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4113  0031E2  501A               	movf	pad@w^0,w,c
  4114  0031E4  5C18               	subwf	pad@i^0,w,c
  4115  0031E6  5019               	movf	(pad@i+1)^0,w,c
  4116  0031E8  0A80               	xorlw	128
  4117  0031EA  6E17               	movwf	??_pad^0,c
  4118  0031EC  501B               	movf	(pad@w+1)^0,w,c
  4119  0031EE  0A80               	xorlw	128
  4120  0031F0  5817               	subwfb	??_pad^0,w,c
  4121  0031F2  A0D8               	btfss	status,0,c
  4122  0031F4  EFFE  F018         	goto	u3091
  4123  0031F8  EF00  F019         	goto	u3090
  4124  0031FC                     u3091:
  4125  0031FC  EFE5  F018         	goto	l3091
  4126  003200                     u3090:
  4127  003200                     
  4128                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4129  003200  0100               	movlb	0	; () banked
  4130  003202  B1DD               	btfsc	_flags& (0+255),0,b
  4131  003204  EF06  F019         	goto	u3101
  4132  003208  EF08  F019         	goto	u3100
  4133  00320C                     u3101:
  4134  00320C  EF12  F019         	goto	l3099
  4135  003210                     u3100:
  4136  003210                     
  4137                           ; BSR set to: 0
  4138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4139  003210  C013  F00A         	movff	pad@buf,fputs@s
  4140  003214  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4141  003218  C011  F00C         	movff	pad@fp,fputs@fp
  4142  00321C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4143  003220  EC08  F01C         	call	_fputs	;wreg free
  4144  003224                     l3099:
  4145                           
  4146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4147  003224  C013  F001         	movff	pad@buf,strlen@s
  4148  003228  C014  F002         	movff	pad@buf+1,strlen@s+1
  4149  00322C  EC9D  F01C         	call	_strlen	;wreg free
  4150  003230  501A               	movf	pad@w^0,w,c
  4151  003232  2401               	addwf	?_strlen^0,w,c
  4152  003234  6E11               	movwf	?_pad^0,c
  4153  003236  501B               	movf	(pad@w+1)^0,w,c
  4154  003238  2002               	addwfc	(?_strlen+1)^0,w,c
  4155  00323A  6E12               	movwf	(?_pad+1)^0,c
  4156  00323C  0012               	return		;funcret
  4157  00323E                     __end_of_pad:
  4158                           	opt callstack 0
  4159                           
  4160 ;; *************** function _strlen *****************
  4161 ;; Defined at:
  4162 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4165 ;;		 -> dbuf(80), 
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4168 ;;		 -> dbuf(80), 
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  2    0[COMRAM] unsigned int 
  4171 ;; Registers used:
  4172 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4178 ;;      Params:         2       0       0       0       0       0       0       0       0
  4179 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4180 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4181 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4182 ;;Total ram usage:        4 bytes
  4183 ;; Hardware stack levels used:    1
  4184 ;; This function calls:
  4185 ;;		Nothing
  4186 ;; This function is called by:
  4187 ;;		_pad
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191                           	psect	text10
  4192  00393A                     __ptext10:
  4193                           	opt callstack 0
  4194  00393A                     _strlen:
  4195                           	opt callstack 25
  4196  00393A  C001  F003         	movff	strlen@s,strlen@a
  4197  00393E  C002  F004         	movff	strlen@s+1,strlen@a+1
  4198  003942  EFA5  F01C         	goto	l2869
  4199  003946                     l2867:
  4200  003946  4A01               	infsnz	strlen@s^0,f,c
  4201  003948  2A02               	incf	(strlen@s+1)^0,f,c
  4202  00394A                     l2869:
  4203  00394A  C001  FFD9         	movff	strlen@s,fsr2l
  4204  00394E  C002  FFDA         	movff	strlen@s+1,fsr2h
  4205  003952  50DF               	movf	indf2,w,c
  4206  003954  A4D8               	btfss	status,2,c
  4207  003956  EFAF  F01C         	goto	u2651
  4208  00395A  EFB1  F01C         	goto	u2650
  4209  00395E                     u2651:
  4210  00395E  EFA3  F01C         	goto	l2867
  4211  003962                     u2650:
  4212  003962  5003               	movf	strlen@a^0,w,c
  4213  003964  5C01               	subwf	strlen@s^0,w,c
  4214  003966  6E01               	movwf	?_strlen^0,c
  4215  003968  5004               	movf	(strlen@a+1)^0,w,c
  4216  00396A  5802               	subwfb	(strlen@s+1)^0,w,c
  4217  00396C  6E02               	movwf	(?_strlen+1)^0,c
  4218  00396E  0012               	return		;funcret
  4219  003970                     __end_of_strlen:
  4220                           	opt callstack 0
  4221                           
  4222 ;; *************** function _fputs *****************
  4223 ;; Defined at:
  4224 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  4225 ;; Parameters:    Size  Location     Type
  4226 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4227 ;;		 -> dbuf(80), 
  4228 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4229 ;;		 -> sprintf@f(6), 
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;  i               2   14[COMRAM] int 
  4232 ;;  c               1   13[COMRAM] unsigned char 
  4233 ;; Return value:  Size  Location     Type
  4234 ;;                  2    9[COMRAM] int 
  4235 ;; Registers used:
  4236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4237 ;; Tracked objects:
  4238 ;;		On entry : 0/0
  4239 ;;		On exit  : 0/0
  4240 ;;		Unchanged: 0/0
  4241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4242 ;;      Params:         4       0       0       0       0       0       0       0       0
  4243 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4244 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4245 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4246 ;;Total ram usage:        7 bytes
  4247 ;; Hardware stack levels used:    1
  4248 ;; Hardware stack levels required when called:    2
  4249 ;; This function calls:
  4250 ;;		_fputc
  4251 ;; This function is called by:
  4252 ;;		_pad
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256                           	psect	text11
  4257  003810                     __ptext11:
  4258                           	opt callstack 0
  4259  003810                     _fputs:
  4260                           	opt callstack 23
  4261  003810  0E00               	movlw	0
  4262  003812  6E10               	movwf	(fputs@i+1)^0,c
  4263  003814  0E00               	movlw	0
  4264  003816  6E0F               	movwf	fputs@i^0,c
  4265  003818  EF19  F01C         	goto	l2863
  4266  00381C                     l2859:
  4267  00381C  C00E  F001         	movff	fputs@c,fputc@c
  4268  003820  6A02               	clrf	(fputc@c+1)^0,c
  4269  003822  C00C  F003         	movff	fputs@fp,fputc@fp
  4270  003826  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4271  00382A  EC57  F018         	call	_fputc	;wreg free
  4272  00382E  4A0F               	infsnz	fputs@i^0,f,c
  4273  003830  2A10               	incf	(fputs@i+1)^0,f,c
  4274  003832                     l2863:
  4275  003832  500F               	movf	fputs@i^0,w,c
  4276  003834  240A               	addwf	fputs@s^0,w,c
  4277  003836  6ED9               	movwf	fsr2l,c
  4278  003838  5010               	movf	(fputs@i+1)^0,w,c
  4279  00383A  200B               	addwfc	(fputs@s+1)^0,w,c
  4280  00383C  6EDA               	movwf	fsr2h,c
  4281  00383E  50DF               	movf	indf2,w,c
  4282  003840  6E0E               	movwf	fputs@c^0,c
  4283  003842  500E               	movf	fputs@c^0,w,c
  4284  003844  A4D8               	btfss	status,2,c
  4285  003846  EF27  F01C         	goto	u2641
  4286  00384A  EF29  F01C         	goto	u2640
  4287  00384E                     u2641:
  4288  00384E  EF0E  F01C         	goto	l2859
  4289  003852                     u2640:
  4290  003852  0012               	return		;funcret
  4291  003854                     __end_of_fputs:
  4292                           	opt callstack 0
  4293                           
  4294 ;; *************** function _fputc *****************
  4295 ;; Defined at:
  4296 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;  c               2    0[COMRAM] int 
  4299 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4300 ;;		 -> sprintf@f(6), 
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;		None
  4303 ;; Return value:  Size  Location     Type
  4304 ;;                  2    0[COMRAM] int 
  4305 ;; Registers used:
  4306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4307 ;; Tracked objects:
  4308 ;;		On entry : 0/0
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4312 ;;      Params:         4       0       0       0       0       0       0       0       0
  4313 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4314 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4315 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4316 ;;Total ram usage:        9 bytes
  4317 ;; Hardware stack levels used:    1
  4318 ;; Hardware stack levels required when called:    1
  4319 ;; This function calls:
  4320 ;;		_putch
  4321 ;; This function is called by:
  4322 ;;		_pad
  4323 ;;		_vfpfcnvrt
  4324 ;;		_fputs
  4325 ;; This function uses a non-reentrant model
  4326 ;;
  4327                           
  4328                           	psect	text12
  4329  0030AE                     __ptext12:
  4330                           	opt callstack 0
  4331  0030AE                     _fputc:
  4332                           	opt callstack 26
  4333  0030AE  5003               	movf	fputc@fp^0,w,c
  4334  0030B0  1004               	iorwf	(fputc@fp+1)^0,w,c
  4335  0030B2  B4D8               	btfsc	status,2,c
  4336  0030B4  EF5E  F018         	goto	u2601
  4337  0030B8  EF60  F018         	goto	u2600
  4338  0030BC                     u2601:
  4339  0030BC  EF69  F018         	goto	l2847
  4340  0030C0                     u2600:
  4341  0030C0  5003               	movf	fputc@fp^0,w,c
  4342  0030C2  1004               	iorwf	(fputc@fp+1)^0,w,c
  4343  0030C4  A4D8               	btfss	status,2,c
  4344  0030C6  EF67  F018         	goto	u2611
  4345  0030CA  EF69  F018         	goto	u2610
  4346  0030CE                     u2611:
  4347  0030CE  EF6E  F018         	goto	l2849
  4348  0030D2                     u2610:
  4349  0030D2                     l2847:
  4350  0030D2  5001               	movf	fputc@c^0,w,c
  4351  0030D4  EC2D  F01D         	call	_putch
  4352  0030D8  EFBB  F018         	goto	l1101
  4353  0030DC                     l2849:
  4354  0030DC  EE20 F004          	lfsr	2,4
  4355  0030E0  5003               	movf	fputc@fp^0,w,c
  4356  0030E2  26D9               	addwf	fsr2l,f,c
  4357  0030E4  5004               	movf	(fputc@fp+1)^0,w,c
  4358  0030E6  22DA               	addwfc	fsr2h,f,c
  4359  0030E8  50DE               	movf	postinc2,w,c
  4360  0030EA  10DE               	iorwf	postinc2,w,c
  4361  0030EC  B4D8               	btfsc	status,2,c
  4362  0030EE  EF7B  F018         	goto	u2621
  4363  0030F2  EF7D  F018         	goto	u2620
  4364  0030F6                     u2621:
  4365  0030F6  EF98  F018         	goto	l2853
  4366  0030FA                     u2620:
  4367  0030FA  EE20 F004          	lfsr	2,4
  4368  0030FE  5003               	movf	fputc@fp^0,w,c
  4369  003100  26D9               	addwf	fsr2l,f,c
  4370  003102  5004               	movf	(fputc@fp+1)^0,w,c
  4371  003104  22DA               	addwfc	fsr2h,f,c
  4372  003106  EE10 F002          	lfsr	1,2
  4373  00310A  5003               	movf	fputc@fp^0,w,c
  4374  00310C  26E1               	addwf	fsr1l,f,c
  4375  00310E  5004               	movf	(fputc@fp+1)^0,w,c
  4376  003110  22E2               	addwfc	fsr1h,f,c
  4377  003112  50DE               	movf	postinc2,w,c
  4378  003114  5CE6               	subwf	postinc1,w,c
  4379  003116  50E6               	movf	postinc1,w,c
  4380  003118  0A80               	xorlw	128
  4381  00311A  6E09               	movwf	(??_fputc+4)^0,c
  4382  00311C  50DE               	movf	postinc2,w,c
  4383  00311E  0A80               	xorlw	128
  4384  003120  5809               	subwfb	(??_fputc+4)^0,w,c
  4385  003122  B0D8               	btfsc	status,0,c
  4386  003124  EF96  F018         	goto	u2631
  4387  003128  EF98  F018         	goto	u2630
  4388  00312C                     u2631:
  4389  00312C  EFBB  F018         	goto	l1101
  4390  003130                     u2630:
  4391  003130                     l2853:
  4392  003130  EE20 F002          	lfsr	2,2
  4393  003134  5003               	movf	fputc@fp^0,w,c
  4394  003136  26D9               	addwf	fsr2l,f,c
  4395  003138  5004               	movf	(fputc@fp+1)^0,w,c
  4396  00313A  22DA               	addwfc	fsr2h,f,c
  4397  00313C  CFDE F005          	movff	postinc2,??_fputc
  4398  003140  CFDD F006          	movff	postdec2,??_fputc+1
  4399  003144  C003  FFD9         	movff	fputc@fp,fsr2l
  4400  003148  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4401  00314C  CFDE F007          	movff	postinc2,??_fputc+2
  4402  003150  CFDD F008          	movff	postdec2,??_fputc+3
  4403  003154  5005               	movf	??_fputc^0,w,c
  4404  003156  2407               	addwf	(??_fputc+2)^0,w,c
  4405  003158  6ED9               	movwf	fsr2l,c
  4406  00315A  5006               	movf	(??_fputc+1)^0,w,c
  4407  00315C  2008               	addwfc	(??_fputc+3)^0,w,c
  4408  00315E  6EDA               	movwf	fsr2h,c
  4409  003160  C001  FFDF         	movff	fputc@c,indf2
  4410  003164  EE20 F002          	lfsr	2,2
  4411  003168  5003               	movf	fputc@fp^0,w,c
  4412  00316A  26D9               	addwf	fsr2l,f,c
  4413  00316C  5004               	movf	(fputc@fp+1)^0,w,c
  4414  00316E  22DA               	addwfc	fsr2h,f,c
  4415  003170  2ADE               	incf	postinc2,f,c
  4416  003172  0E00               	movlw	0
  4417  003174  22DD               	addwfc	postdec2,f,c
  4418  003176                     l1101:
  4419  003176  0012               	return		;funcret
  4420  003178                     __end_of_fputc:
  4421                           	opt callstack 0
  4422                           
  4423 ;; *************** function _putch *****************
  4424 ;; Defined at:
  4425 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;  c               1    wreg     unsigned char 
  4428 ;; Auto vars:     Size  Location     Type
  4429 ;;  c               1    0[COMRAM] unsigned char 
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  1    wreg      void 
  4432 ;; Registers used:
  4433 ;;		wreg
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4439 ;;      Params:         0       0       0       0       0       0       0       0       0
  4440 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4441 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4442 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4443 ;;Total ram usage:        0 bytes
  4444 ;; Hardware stack levels used:    1
  4445 ;; This function calls:
  4446 ;;		Nothing
  4447 ;; This function is called by:
  4448 ;;		_fputc
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           	psect	text13
  4453  003A5A                     __ptext13:
  4454                           	opt callstack 0
  4455  003A5A                     _putch:
  4456                           	opt callstack 26
  4457  003A5A  0012               	return		;funcret
  4458  003A5C                     __end_of_putch:
  4459                           	opt callstack 0
  4460                           
  4461 ;; *************** function _floorf *****************
  4462 ;; Defined at:
  4463 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;  x               4   64[COMRAM] float 
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;  u               4   80[COMRAM] struct .
  4468 ;;  m               4   74[COMRAM] unsigned long 
  4469 ;;  e               2   78[COMRAM] int 
  4470 ;; Return value:  Size  Location     Type
  4471 ;;                  4   64[COMRAM] float 
  4472 ;; Registers used:
  4473 ;;		wreg, status,2, status,0
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4479 ;;      Params:         4       0       0       0       0       0       0       0       0
  4480 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4481 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4482 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4483 ;;Total ram usage:       20 bytes
  4484 ;; Hardware stack levels used:    1
  4485 ;; This function calls:
  4486 ;;		Nothing
  4487 ;; This function is called by:
  4488 ;;		_efgtoa
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           	psect	text14
  4493  0024F0                     __ptext14:
  4494                           	opt callstack 0
  4495  0024F0                     _floorf:
  4496                           	opt callstack 26
  4497  0024F0  C0CB  F051         	movff	floorf@F524,floorf@u
  4498  0024F4  C0CC  F052         	movff	floorf@F524+1,floorf@u+1
  4499  0024F8  C0CD  F053         	movff	floorf@F524+2,floorf@u+2
  4500  0024FC  C0CE  F054         	movff	floorf@F524+3,floorf@u+3
  4501  002500  C041  F051         	movff	floorf@x,floorf@u
  4502  002504  C042  F052         	movff	floorf@x+1,floorf@u+1
  4503  002508  C043  F053         	movff	floorf@x+2,floorf@u+2
  4504  00250C  C044  F054         	movff	floorf@x+3,floorf@u+3
  4505  002510  0E81               	movlw	129
  4506  002512  6E45               	movwf	??_floorf^0,c
  4507  002514  0EFF               	movlw	255
  4508  002516  6E46               	movwf	(??_floorf+1)^0,c
  4509  002518  C051  F047         	movff	floorf@u,??_floorf+2
  4510  00251C  C052  F048         	movff	floorf@u+1,??_floorf+3
  4511  002520  C053  F049         	movff	floorf@u+2,??_floorf+4
  4512  002524  C054  F04A         	movff	floorf@u+3,??_floorf+5
  4513  002528  0E18               	movlw	24
  4514  00252A  EF9C  F012         	goto	u3230
  4515  00252E                     u3235:
  4516  00252E  90D8               	bcf	status,0,c
  4517  002530  324A               	rrcf	(??_floorf+5)^0,f,c
  4518  002532  3249               	rrcf	(??_floorf+4)^0,f,c
  4519  002534  3248               	rrcf	(??_floorf+3)^0,f,c
  4520  002536  3247               	rrcf	(??_floorf+2)^0,f,c
  4521  002538                     u3230:
  4522  002538  2EE8               	decfsz	wreg,f,c
  4523  00253A  EF97  F012         	goto	u3235
  4524  00253E  5047               	movf	(??_floorf+2)^0,w,c
  4525  002540  2445               	addwf	??_floorf^0,w,c
  4526  002542  6E4F               	movwf	floorf@e^0,c
  4527  002544  0E00               	movlw	0
  4528  002546  2046               	addwfc	(??_floorf+1)^0,w,c
  4529  002548  6E50               	movwf	(floorf@e+1)^0,c
  4530  00254A  BE50               	btfsc	(floorf@e+1)^0,7,c
  4531  00254C  EFB1  F012         	goto	u3241
  4532  002550  5050               	movf	(floorf@e+1)^0,w,c
  4533  002552  E109               	bnz	u3240
  4534  002554  0E17               	movlw	23
  4535  002556  5C4F               	subwf	floorf@e^0,w,c
  4536  002558  A0D8               	btfss	status,0,c
  4537  00255A  EFB1  F012         	goto	u3241
  4538  00255E  EFB3  F012         	goto	u3240
  4539  002562                     u3241:
  4540  002562  EFBD  F012         	goto	l3145
  4541  002566                     u3240:
  4542  002566                     l3143:
  4543  002566  C041  F041         	movff	floorf@x,?_floorf
  4544  00256A  C042  F042         	movff	floorf@x+1,?_floorf+1
  4545  00256E  C043  F043         	movff	floorf@x+2,?_floorf+2
  4546  002572  C044  F044         	movff	floorf@x+3,?_floorf+3
  4547  002576  EF80  F013         	goto	l1062
  4548  00257A                     l3145:
  4549  00257A  BE50               	btfsc	(floorf@e+1)^0,7,c
  4550  00257C  EFC2  F012         	goto	u3251
  4551  002580  EFC4  F012         	goto	u3250
  4552  002584                     u3251:
  4553  002584  EF34  F013         	goto	l3155
  4554  002588                     u3250:
  4555  002588  C04F  F045         	movff	floorf@e,??_floorf
  4556  00258C  0EFF               	movlw	255
  4557  00258E  6E46               	movwf	(??_floorf+1)^0,c
  4558  002590  0EFF               	movlw	255
  4559  002592  6E47               	movwf	(??_floorf+2)^0,c
  4560  002594  0E7F               	movlw	127
  4561  002596  6E48               	movwf	(??_floorf+3)^0,c
  4562  002598  0E00               	movlw	0
  4563  00259A  6E49               	movwf	(??_floorf+4)^0,c
  4564  00259C                     u3265:
  4565  00259C  6645               	tstfsz	??_floorf^0,c
  4566  00259E  EFD3  F012         	goto	u3266
  4567  0025A2  EFDB  F012         	goto	u3267
  4568  0025A6                     u3266:
  4569  0025A6  3449               	rlcf	(??_floorf+4)^0,w,c
  4570  0025A8  3249               	rrcf	(??_floorf+4)^0,f,c
  4571  0025AA  3248               	rrcf	(??_floorf+3)^0,f,c
  4572  0025AC  3247               	rrcf	(??_floorf+2)^0,f,c
  4573  0025AE  3246               	rrcf	(??_floorf+1)^0,f,c
  4574  0025B0  2E45               	decfsz	??_floorf^0,f,c
  4575  0025B2  EFCE  F012         	goto	u3265
  4576  0025B6                     u3267:
  4577  0025B6  C046  F04B         	movff	??_floorf+1,floorf@m
  4578  0025BA  C047  F04C         	movff	??_floorf+2,floorf@m+1
  4579  0025BE  C048  F04D         	movff	??_floorf+3,floorf@m+2
  4580  0025C2  C049  F04E         	movff	??_floorf+4,floorf@m+3
  4581  0025C6  504B               	movf	floorf@m^0,w,c
  4582  0025C8  1451               	andwf	floorf@u^0,w,c
  4583  0025CA  6E45               	movwf	??_floorf^0,c
  4584  0025CC  504C               	movf	(floorf@m+1)^0,w,c
  4585  0025CE  1452               	andwf	(floorf@u+1)^0,w,c
  4586  0025D0  6E46               	movwf	(??_floorf+1)^0,c
  4587  0025D2  504D               	movf	(floorf@m+2)^0,w,c
  4588  0025D4  1453               	andwf	(floorf@u+2)^0,w,c
  4589  0025D6  6E47               	movwf	(??_floorf+2)^0,c
  4590  0025D8  504E               	movf	(floorf@m+3)^0,w,c
  4591  0025DA  1454               	andwf	(floorf@u+3)^0,w,c
  4592  0025DC  6E48               	movwf	(??_floorf+3)^0,c
  4593  0025DE  5045               	movf	??_floorf^0,w,c
  4594  0025E0  1046               	iorwf	(??_floorf+1)^0,w,c
  4595  0025E2  1047               	iorwf	(??_floorf+2)^0,w,c
  4596  0025E4  1048               	iorwf	(??_floorf+3)^0,w,c
  4597  0025E6  A4D8               	btfss	status,2,c
  4598  0025E8  EFF8  F012         	goto	u3271
  4599  0025EC  EFFA  F012         	goto	u3270
  4600  0025F0                     u3271:
  4601  0025F0  EFFC  F012         	goto	l3151
  4602  0025F4                     u3270:
  4603  0025F4  EFB3  F012         	goto	l3143
  4604  0025F8                     l3151:
  4605  0025F8  C051  F045         	movff	floorf@u,??_floorf
  4606  0025FC  C052  F046         	movff	floorf@u+1,??_floorf+1
  4607  002600  C053  F047         	movff	floorf@u+2,??_floorf+2
  4608  002604  C054  F048         	movff	floorf@u+3,??_floorf+3
  4609  002608  0E20               	movlw	32
  4610  00260A  EF0C  F013         	goto	u3280
  4611  00260E                     u3285:
  4612  00260E  90D8               	bcf	status,0,c
  4613  002610  3248               	rrcf	(??_floorf+3)^0,f,c
  4614  002612  3247               	rrcf	(??_floorf+2)^0,f,c
  4615  002614  3246               	rrcf	(??_floorf+1)^0,f,c
  4616  002616  3245               	rrcf	??_floorf^0,f,c
  4617  002618                     u3280:
  4618  002618  2EE8               	decfsz	wreg,f,c
  4619  00261A  EF07  F013         	goto	u3285
  4620  00261E  5045               	movf	??_floorf^0,w,c
  4621  002620  1046               	iorwf	(??_floorf+1)^0,w,c
  4622  002622  1047               	iorwf	(??_floorf+2)^0,w,c
  4623  002624  1048               	iorwf	(??_floorf+3)^0,w,c
  4624  002626  B4D8               	btfsc	status,2,c
  4625  002628  EF18  F013         	goto	u3291
  4626  00262C  EF1A  F013         	goto	u3290
  4627  002630                     u3291:
  4628  002630  EF22  F013         	goto	l1065
  4629  002634                     u3290:
  4630  002634  504B               	movf	floorf@m^0,w,c
  4631  002636  2651               	addwf	floorf@u^0,f,c
  4632  002638  504C               	movf	(floorf@m+1)^0,w,c
  4633  00263A  2252               	addwfc	(floorf@u+1)^0,f,c
  4634  00263C  504D               	movf	(floorf@m+2)^0,w,c
  4635  00263E  2253               	addwfc	(floorf@u+2)^0,f,c
  4636  002640  504E               	movf	(floorf@m+3)^0,w,c
  4637  002642  2254               	addwfc	(floorf@u+3)^0,f,c
  4638  002644                     l1065:
  4639  002644  1C4B               	comf	floorf@m^0,w,c
  4640  002646  6E45               	movwf	??_floorf^0,c
  4641  002648  1C4C               	comf	(floorf@m+1)^0,w,c
  4642  00264A  6E46               	movwf	(??_floorf+1)^0,c
  4643  00264C  1C4D               	comf	(floorf@m+2)^0,w,c
  4644  00264E  6E47               	movwf	(??_floorf+2)^0,c
  4645  002650  1C4E               	comf	(floorf@m+3)^0,w,c
  4646  002652  6E48               	movwf	(??_floorf+3)^0,c
  4647  002654  5045               	movf	??_floorf^0,w,c
  4648  002656  1651               	andwf	floorf@u^0,f,c
  4649  002658  5046               	movf	(??_floorf+1)^0,w,c
  4650  00265A  1652               	andwf	(floorf@u+1)^0,f,c
  4651  00265C  5047               	movf	(??_floorf+2)^0,w,c
  4652  00265E  1653               	andwf	(floorf@u+2)^0,f,c
  4653  002660  5048               	movf	(??_floorf+3)^0,w,c
  4654  002662  1654               	andwf	(floorf@u+3)^0,f,c
  4655  002664  EF78  F013         	goto	l3163
  4656  002668                     l3155:
  4657  002668  C051  F045         	movff	floorf@u,??_floorf
  4658  00266C  C052  F046         	movff	floorf@u+1,??_floorf+1
  4659  002670  C053  F047         	movff	floorf@u+2,??_floorf+2
  4660  002674  C054  F048         	movff	floorf@u+3,??_floorf+3
  4661  002678  0E20               	movlw	32
  4662  00267A  EF44  F013         	goto	u3300
  4663  00267E                     u3305:
  4664  00267E  90D8               	bcf	status,0,c
  4665  002680  3248               	rrcf	(??_floorf+3)^0,f,c
  4666  002682  3247               	rrcf	(??_floorf+2)^0,f,c
  4667  002684  3246               	rrcf	(??_floorf+1)^0,f,c
  4668  002686  3245               	rrcf	??_floorf^0,f,c
  4669  002688                     u3300:
  4670  002688  2EE8               	decfsz	wreg,f,c
  4671  00268A  EF3F  F013         	goto	u3305
  4672  00268E  5045               	movf	??_floorf^0,w,c
  4673  002690  1046               	iorwf	(??_floorf+1)^0,w,c
  4674  002692  1047               	iorwf	(??_floorf+2)^0,w,c
  4675  002694  1048               	iorwf	(??_floorf+3)^0,w,c
  4676  002696  A4D8               	btfss	status,2,c
  4677  002698  EF50  F013         	goto	u3311
  4678  00269C  EF52  F013         	goto	u3310
  4679  0026A0                     u3311:
  4680  0026A0  EF5C  F013         	goto	l3159
  4681  0026A4                     u3310:
  4682  0026A4  0E00               	movlw	0
  4683  0026A6  6E51               	movwf	floorf@u^0,c
  4684  0026A8  0E00               	movlw	0
  4685  0026AA  6E52               	movwf	(floorf@u+1)^0,c
  4686  0026AC  0E00               	movlw	0
  4687  0026AE  6E53               	movwf	(floorf@u+2)^0,c
  4688  0026B0  0E00               	movlw	0
  4689  0026B2  6E54               	movwf	(floorf@u+3)^0,c
  4690  0026B4  EF78  F013         	goto	l3163
  4691  0026B8                     l3159:
  4692  0026B8  90D8               	bcf	status,0,c
  4693  0026BA  3451               	rlcf	floorf@u^0,w,c
  4694  0026BC  6E45               	movwf	??_floorf^0,c
  4695  0026BE  3452               	rlcf	(floorf@u+1)^0,w,c
  4696  0026C0  6E46               	movwf	(??_floorf+1)^0,c
  4697  0026C2  3453               	rlcf	(floorf@u+2)^0,w,c
  4698  0026C4  6E47               	movwf	(??_floorf+2)^0,c
  4699  0026C6  3454               	rlcf	(floorf@u+3)^0,w,c
  4700  0026C8  6E48               	movwf	(??_floorf+3)^0,c
  4701  0026CA  5045               	movf	??_floorf^0,w,c
  4702  0026CC  1046               	iorwf	(??_floorf+1)^0,w,c
  4703  0026CE  1047               	iorwf	(??_floorf+2)^0,w,c
  4704  0026D0  1048               	iorwf	(??_floorf+3)^0,w,c
  4705  0026D2  B4D8               	btfsc	status,2,c
  4706  0026D4  EF6E  F013         	goto	u3321
  4707  0026D8  EF70  F013         	goto	u3320
  4708  0026DC                     u3321:
  4709  0026DC  EF78  F013         	goto	l3163
  4710  0026E0                     u3320:
  4711  0026E0  0E00               	movlw	0
  4712  0026E2  6E51               	movwf	floorf@u^0,c
  4713  0026E4  0E00               	movlw	0
  4714  0026E6  6E52               	movwf	(floorf@u+1)^0,c
  4715  0026E8  0E80               	movlw	128
  4716  0026EA  6E53               	movwf	(floorf@u+2)^0,c
  4717  0026EC  0EBF               	movlw	191
  4718  0026EE  6E54               	movwf	(floorf@u+3)^0,c
  4719  0026F0                     l3163:
  4720  0026F0  C051  F041         	movff	floorf@u,?_floorf
  4721  0026F4  C052  F042         	movff	floorf@u+1,?_floorf+1
  4722  0026F8  C053  F043         	movff	floorf@u+2,?_floorf+2
  4723  0026FC  C054  F044         	movff	floorf@u+3,?_floorf+3
  4724  002700                     l1062:
  4725  002700  0012               	return		;funcret
  4726  002702                     __end_of_floorf:
  4727                           	opt callstack 0
  4728                           
  4729 ;; *************** function ___fpclassifyf *****************
  4730 ;; Defined at:
  4731 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;  x               4    0[COMRAM] float 
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;  u               4   10[COMRAM] struct .
  4736 ;;  e               2    8[COMRAM] int 
  4737 ;; Return value:  Size  Location     Type
  4738 ;;                  2    0[COMRAM] int 
  4739 ;; Registers used:
  4740 ;;		wreg, status,2, status,0
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4746 ;;      Params:         4       0       0       0       0       0       0       0       0
  4747 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4748 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4749 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4750 ;;Total ram usage:       14 bytes
  4751 ;; Hardware stack levels used:    1
  4752 ;; This function calls:
  4753 ;;		Nothing
  4754 ;; This function is called by:
  4755 ;;		_efgtoa
  4756 ;; This function uses a non-reentrant model
  4757 ;;
  4758                           
  4759                           	psect	text15
  4760  002DF0                     __ptext15:
  4761                           	opt callstack 0
  4762  002DF0                     ___fpclassifyf:
  4763                           	opt callstack 26
  4764  002DF0  C0CF  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  4765  002DF4  C0D0  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  4766  002DF8  C0D1  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  4767  002DFC  C0D2  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  4768  002E00  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4769  002E04  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4770  002E08  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4771  002E0C  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4772  002E10  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4773  002E14  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4774  002E18  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4775  002E1C  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4776  002E20  0E18               	movlw	24
  4777  002E22  EF18  F017         	goto	u3110
  4778  002E26                     u3115:
  4779  002E26  90D8               	bcf	status,0,c
  4780  002E28  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4781  002E2A  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4782  002E2C  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4783  002E2E  3205               	rrcf	??___fpclassifyf^0,f,c
  4784  002E30                     u3110:
  4785  002E30  2EE8               	decfsz	wreg,f,c
  4786  002E32  EF13  F017         	goto	u3115
  4787  002E36  5005               	movf	??___fpclassifyf^0,w,c
  4788  002E38  6E09               	movwf	___fpclassifyf@e^0,c
  4789  002E3A  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4790  002E3C  5009               	movf	___fpclassifyf@e^0,w,c
  4791  002E3E  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4792  002E40  A4D8               	btfss	status,2,c
  4793  002E42  EF25  F017         	goto	u3121
  4794  002E46  EF27  F017         	goto	u3120
  4795  002E4A                     u3121:
  4796  002E4A  EF47  F017         	goto	l3115
  4797  002E4E                     u3120:
  4798  002E4E  90D8               	bcf	status,0,c
  4799  002E50  340B               	rlcf	___fpclassifyf@u^0,w,c
  4800  002E52  6E05               	movwf	??___fpclassifyf^0,c
  4801  002E54  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4802  002E56  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4803  002E58  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4804  002E5A  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4805  002E5C  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4806  002E5E  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4807  002E60  5005               	movf	??___fpclassifyf^0,w,c
  4808  002E62  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4809  002E64  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4810  002E66  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4811  002E68  A4D8               	btfss	status,2,c
  4812  002E6A  EF39  F017         	goto	u3131
  4813  002E6E  EF3B  F017         	goto	u3130
  4814  002E72                     u3131:
  4815  002E72  EF41  F017         	goto	l3111
  4816  002E76                     u3130:
  4817  002E76  0E00               	movlw	0
  4818  002E78  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4819  002E7A  0E02               	movlw	2
  4820  002E7C  6E01               	movwf	?___fpclassifyf^0,c
  4821  002E7E  EF76  F017         	goto	l1024
  4822  002E82                     l3111:
  4823  002E82  0E00               	movlw	0
  4824  002E84  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4825  002E86  0E03               	movlw	3
  4826  002E88  6E01               	movwf	?___fpclassifyf^0,c
  4827  002E8A  EF76  F017         	goto	l1024
  4828  002E8E                     l3115:
  4829  002E8E  2809               	incf	___fpclassifyf@e^0,w,c
  4830  002E90  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4831  002E92  A4D8               	btfss	status,2,c
  4832  002E94  EF4E  F017         	goto	u3141
  4833  002E98  EF50  F017         	goto	u3140
  4834  002E9C                     u3141:
  4835  002E9C  EF72  F017         	goto	l3121
  4836  002EA0                     u3140:
  4837  002EA0  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4838  002EA4  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4839  002EA8  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4840  002EAC  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4841  002EB0  0E09               	movlw	9
  4842  002EB2                     u3155:
  4843  002EB2  90D8               	bcf	status,0,c
  4844  002EB4  3605               	rlcf	??___fpclassifyf^0,f,c
  4845  002EB6  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4846  002EB8  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4847  002EBA  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4848  002EBC  2EE8               	decfsz	wreg,f,c
  4849  002EBE  EF59  F017         	goto	u3155
  4850  002EC2  5005               	movf	??___fpclassifyf^0,w,c
  4851  002EC4  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4852  002EC6  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4853  002EC8  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4854  002ECA  B4D8               	btfsc	status,2,c
  4855  002ECC  EF6A  F017         	goto	u3161
  4856  002ED0  EF6D  F017         	goto	u3160
  4857  002ED4                     u3161:
  4858  002ED4  0E01               	movlw	1
  4859  002ED6  EF6E  F017         	goto	u3170
  4860  002EDA                     u3160:
  4861  002EDA  0E00               	movlw	0
  4862  002EDC                     u3170:
  4863  002EDC  6E01               	movwf	?___fpclassifyf^0,c
  4864  002EDE  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4865  002EE0  EF76  F017         	goto	l1024
  4866  002EE4                     l3121:
  4867  002EE4  0E00               	movlw	0
  4868  002EE6  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4869  002EE8  0E04               	movlw	4
  4870  002EEA  6E01               	movwf	?___fpclassifyf^0,c
  4871  002EEC                     l1024:
  4872  002EEC  0012               	return		;funcret
  4873  002EEE                     __end_of___fpclassifyf:
  4874                           	opt callstack 0
  4875                           
  4876 ;; *************** function ___fltol *****************
  4877 ;; Defined at:
  4878 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  4879 ;; Parameters:    Size  Location     Type
  4880 ;;  f1              4    0[COMRAM] int 
  4881 ;; Auto vars:     Size  Location     Type
  4882 ;;  exp1            1    9[COMRAM] unsigned char 
  4883 ;;  sign1           1    8[COMRAM] unsigned char 
  4884 ;; Return value:  Size  Location     Type
  4885 ;;                  4    0[COMRAM] long 
  4886 ;; Registers used:
  4887 ;;		wreg, status,2, status,0
  4888 ;; Tracked objects:
  4889 ;;		On entry : 0/0
  4890 ;;		On exit  : 0/0
  4891 ;;		Unchanged: 0/0
  4892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4893 ;;      Params:         4       0       0       0       0       0       0       0       0
  4894 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4895 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4896 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4897 ;;Total ram usage:       10 bytes
  4898 ;; Hardware stack levels used:    1
  4899 ;; This function calls:
  4900 ;;		Nothing
  4901 ;; This function is called by:
  4902 ;;		_efgtoa
  4903 ;; This function uses a non-reentrant model
  4904 ;;
  4905                           
  4906                           	psect	text16
  4907  002BE6                     __ptext16:
  4908                           	opt callstack 0
  4909  002BE6                     ___fltol:
  4910                           	opt callstack 26
  4911  002BE6  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4912  002BE8  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4913  002BEA  6E0A               	movwf	___fltol@exp1^0,c
  4914  002BEC  500A               	movf	___fltol@exp1^0,w,c
  4915  002BEE  A4D8               	btfss	status,2,c
  4916  002BF0  EFFC  F015         	goto	u3981
  4917  002BF4  EFFE  F015         	goto	u3980
  4918  002BF8                     u3981:
  4919  002BF8  EF08  F016         	goto	l3583
  4920  002BFC                     u3980:
  4921  002BFC                     l3579:
  4922  002BFC  0E00               	movlw	0
  4923  002BFE  6E01               	movwf	?___fltol^0,c
  4924  002C00  0E00               	movlw	0
  4925  002C02  6E02               	movwf	(?___fltol+1)^0,c
  4926  002C04  0E00               	movlw	0
  4927  002C06  6E03               	movwf	(?___fltol+2)^0,c
  4928  002C08  0E00               	movlw	0
  4929  002C0A  6E04               	movwf	(?___fltol+3)^0,c
  4930  002C0C  EF75  F016         	goto	l640
  4931  002C10                     l3583:
  4932  002C10  C001  F005         	movff	___fltol@f1,??___fltol
  4933  002C14  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4934  002C18  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4935  002C1C  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4936  002C20  0E20               	movlw	32
  4937  002C22  EF18  F016         	goto	u3990
  4938  002C26                     u3995:
  4939  002C26  90D8               	bcf	status,0,c
  4940  002C28  3208               	rrcf	(??___fltol+3)^0,f,c
  4941  002C2A  3207               	rrcf	(??___fltol+2)^0,f,c
  4942  002C2C  3206               	rrcf	(??___fltol+1)^0,f,c
  4943  002C2E  3205               	rrcf	??___fltol^0,f,c
  4944  002C30                     u3990:
  4945  002C30  2EE8               	decfsz	wreg,f,c
  4946  002C32  EF13  F016         	goto	u3995
  4947  002C36  5005               	movf	??___fltol^0,w,c
  4948  002C38  6E09               	movwf	___fltol@sign1^0,c
  4949  002C3A  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4950  002C3C  0EFF               	movlw	255
  4951  002C3E  1601               	andwf	___fltol@f1^0,f,c
  4952  002C40  0EFF               	movlw	255
  4953  002C42  1602               	andwf	(___fltol@f1+1)^0,f,c
  4954  002C44  0EFF               	movlw	255
  4955  002C46  1603               	andwf	(___fltol@f1+2)^0,f,c
  4956  002C48  0E00               	movlw	0
  4957  002C4A  1604               	andwf	(___fltol@f1+3)^0,f,c
  4958  002C4C  0E96               	movlw	150
  4959  002C4E  5E0A               	subwf	___fltol@exp1^0,f,c
  4960  002C50  BE0A               	btfsc	___fltol@exp1^0,7,c
  4961  002C52  EF2F  F016         	goto	u4000
  4962  002C56  EF2D  F016         	goto	u4001
  4963  002C5A                     u4001:
  4964  002C5A  EF45  F016         	goto	l3603
  4965  002C5E                     u4000:
  4966  002C5E  500A               	movf	___fltol@exp1^0,w,c
  4967  002C60  0A80               	xorlw	128
  4968  002C62  0F97               	addlw	151
  4969  002C64  B0D8               	btfsc	status,0,c
  4970  002C66  EF37  F016         	goto	u4011
  4971  002C6A  EF39  F016         	goto	u4010
  4972  002C6E                     u4011:
  4973  002C6E  EF3B  F016         	goto	l3599
  4974  002C72                     u4010:
  4975  002C72  EFFE  F015         	goto	l3579
  4976  002C76                     l3599:
  4977  002C76  90D8               	bcf	status,0,c
  4978  002C78  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4979  002C7A  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4980  002C7C  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4981  002C7E  3201               	rrcf	___fltol@f1^0,f,c
  4982  002C80  3E0A               	incfsz	___fltol@exp1^0,f,c
  4983  002C82  EF3B  F016         	goto	l3599
  4984  002C86  EF5D  F016         	goto	l3613
  4985  002C8A                     l3603:
  4986  002C8A  0E1F               	movlw	31
  4987  002C8C  640A               	cpfsgt	___fltol@exp1^0,c
  4988  002C8E  EF4B  F016         	goto	u4021
  4989  002C92  EF4D  F016         	goto	u4020
  4990  002C96                     u4021:
  4991  002C96  EF55  F016         	goto	l3611
  4992  002C9A                     u4020:
  4993  002C9A  EFFE  F015         	goto	l3579
  4994  002C9E                     l3609:
  4995  002C9E  90D8               	bcf	status,0,c
  4996  002CA0  3601               	rlcf	___fltol@f1^0,f,c
  4997  002CA2  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4998  002CA4  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4999  002CA6  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5000  002CA8  060A               	decf	___fltol@exp1^0,f,c
  5001  002CAA                     l3611:
  5002  002CAA  500A               	movf	___fltol@exp1^0,w,c
  5003  002CAC  A4D8               	btfss	status,2,c
  5004  002CAE  EF5B  F016         	goto	u4031
  5005  002CB2  EF5D  F016         	goto	u4030
  5006  002CB6                     u4031:
  5007  002CB6  EF4F  F016         	goto	l3609
  5008  002CBA                     u4030:
  5009  002CBA                     l3613:
  5010  002CBA  5009               	movf	___fltol@sign1^0,w,c
  5011  002CBC  B4D8               	btfsc	status,2,c
  5012  002CBE  EF63  F016         	goto	u4041
  5013  002CC2  EF65  F016         	goto	u4040
  5014  002CC6                     u4041:
  5015  002CC6  EF6D  F016         	goto	l3617
  5016  002CCA                     u4040:
  5017  002CCA  1E04               	comf	(___fltol@f1+3)^0,f,c
  5018  002CCC  1E03               	comf	(___fltol@f1+2)^0,f,c
  5019  002CCE  1E02               	comf	(___fltol@f1+1)^0,f,c
  5020  002CD0  6C01               	negf	___fltol@f1^0,c
  5021  002CD2  0E00               	movlw	0
  5022  002CD4  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5023  002CD6  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5024  002CD8  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5025  002CDA                     l3617:
  5026  002CDA  C001  F001         	movff	___fltol@f1,?___fltol
  5027  002CDE  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5028  002CE2  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5029  002CE6  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5030  002CEA                     l640:
  5031  002CEA  0012               	return		;funcret
  5032  002CEC                     __end_of___fltol:
  5033                           	opt callstack 0
  5034                           
  5035 ;; *************** function ___flsub *****************
  5036 ;; Defined at:
  5037 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  5038 ;; Parameters:    Size  Location     Type
  5039 ;;  b               4   39[COMRAM] long 
  5040 ;;  a               4   43[COMRAM] long 
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;		None
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  4   39[COMRAM] long 
  5045 ;; Registers used:
  5046 ;;		wreg, status,2, status,0, cstack
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5052 ;;      Params:         8       0       0       0       0       0       0       0       0
  5053 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5054 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5055 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5056 ;;Total ram usage:        8 bytes
  5057 ;; Hardware stack levels used:    1
  5058 ;; Hardware stack levels required when called:    1
  5059 ;; This function calls:
  5060 ;;		___fladd
  5061 ;; This function is called by:
  5062 ;;		_efgtoa
  5063 ;; This function uses a non-reentrant model
  5064 ;;
  5065                           
  5066                           	psect	text17
  5067  003784                     __ptext17:
  5068                           	opt callstack 0
  5069  003784                     ___flsub:
  5070                           	opt callstack 25
  5071  003784  0E00               	movlw	0
  5072  003786  1A2C               	xorwf	___flsub@a^0,f,c
  5073  003788  0E00               	movlw	0
  5074  00378A  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  5075  00378C  0E00               	movlw	0
  5076  00378E  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  5077  003790  0E80               	movlw	128
  5078  003792  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  5079  003794  C028  F001         	movff	___flsub@b,___fladd@b
  5080  003798  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  5081  00379C  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  5082  0037A0  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  5083  0037A4  C02C  F005         	movff	___flsub@a,___fladd@a
  5084  0037A8  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  5085  0037AC  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  5086  0037B0  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  5087  0037B4  ECFF  F009         	call	___fladd	;wreg free
  5088  0037B8  C001  F028         	movff	?___fladd,?___flsub
  5089  0037BC  C002  F029         	movff	?___fladd+1,?___flsub+1
  5090  0037C0  C003  F02A         	movff	?___fladd+2,?___flsub+2
  5091  0037C4  C004  F02B         	movff	?___fladd+3,?___flsub+3
  5092  0037C8  0012               	return		;funcret
  5093  0037CA                     __end_of___flsub:
  5094                           	opt callstack 0
  5095                           
  5096 ;; *************** function ___fladd *****************
  5097 ;; Defined at:
  5098 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  5099 ;; Parameters:    Size  Location     Type
  5100 ;;  b               4    0[COMRAM] long 
  5101 ;;  a               4    4[COMRAM] long 
  5102 ;; Auto vars:     Size  Location     Type
  5103 ;;  grs             1   15[COMRAM] unsigned char 
  5104 ;;  bexp            1   14[COMRAM] unsigned char 
  5105 ;;  aexp            1   13[COMRAM] unsigned char 
  5106 ;;  signs           1   12[COMRAM] unsigned char 
  5107 ;; Return value:  Size  Location     Type
  5108 ;;                  4    0[COMRAM] unsigned char 
  5109 ;; Registers used:
  5110 ;;		wreg, status,2, status,0
  5111 ;; Tracked objects:
  5112 ;;		On entry : 0/0
  5113 ;;		On exit  : 0/0
  5114 ;;		Unchanged: 0/0
  5115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5116 ;;      Params:         8       0       0       0       0       0       0       0       0
  5117 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5118 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5119 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5120 ;;Total ram usage:       16 bytes
  5121 ;; Hardware stack levels used:    1
  5122 ;; This function calls:
  5123 ;;		Nothing
  5124 ;; This function is called by:
  5125 ;;		_efgtoa
  5126 ;;		___flsub
  5127 ;; This function uses a non-reentrant model
  5128 ;;
  5129                           
  5130                           	psect	text18
  5131  0013FE                     __ptext18:
  5132                           	opt callstack 0
  5133  0013FE                     ___fladd:
  5134                           	opt callstack 25
  5135  0013FE  5004               	movf	(___fladd@b+3)^0,w,c
  5136  001400  0B80               	andlw	128
  5137  001402  6E0D               	movwf	___fladd@signs^0,c
  5138  001404  5004               	movf	(___fladd@b+3)^0,w,c
  5139  001406  2404               	addwf	(___fladd@b+3)^0,w,c
  5140  001408  6E0F               	movwf	___fladd@bexp^0,c
  5141  00140A  AE03               	btfss	(___fladd@b+2)^0,7,c
  5142  00140C  EF0A  F00A         	goto	u2681
  5143  001410  EF0C  F00A         	goto	u2680
  5144  001414                     u2681:
  5145  001414  EF0D  F00A         	goto	l2885
  5146  001418                     u2680:
  5147  001418  800F               	bsf	___fladd@bexp^0,0,c
  5148  00141A                     l2885:
  5149  00141A  500F               	movf	___fladd@bexp^0,w,c
  5150  00141C  B4D8               	btfsc	status,2,c
  5151  00141E  EF13  F00A         	goto	u2691
  5152  001422  EF15  F00A         	goto	u2690
  5153  001426                     u2691:
  5154  001426  EF2A  F00A         	goto	l2895
  5155  00142A                     u2690:
  5156  00142A  280F               	incf	___fladd@bexp^0,w,c
  5157  00142C  A4D8               	btfss	status,2,c
  5158  00142E  EF1B  F00A         	goto	u2701
  5159  001432  EF1D  F00A         	goto	u2700
  5160  001436                     u2701:
  5161  001436  EF25  F00A         	goto	l2891
  5162  00143A                     u2700:
  5163  00143A  0E00               	movlw	0
  5164  00143C  6E01               	movwf	___fladd@b^0,c
  5165  00143E  0E00               	movlw	0
  5166  001440  6E02               	movwf	(___fladd@b+1)^0,c
  5167  001442  0E00               	movlw	0
  5168  001444  6E03               	movwf	(___fladd@b+2)^0,c
  5169  001446  0E00               	movlw	0
  5170  001448  6E04               	movwf	(___fladd@b+3)^0,c
  5171  00144A                     l2891:
  5172  00144A  8E03               	bsf	(___fladd@b+2)^0,7,c
  5173  00144C  0E00               	movlw	0
  5174  00144E  6E04               	movwf	(___fladd@b+3)^0,c
  5175  001450  EF32  F00A         	goto	l2897
  5176  001454                     l2895:
  5177  001454  0E00               	movlw	0
  5178  001456  6E01               	movwf	___fladd@b^0,c
  5179  001458  0E00               	movlw	0
  5180  00145A  6E02               	movwf	(___fladd@b+1)^0,c
  5181  00145C  0E00               	movlw	0
  5182  00145E  6E03               	movwf	(___fladd@b+2)^0,c
  5183  001460  0E00               	movlw	0
  5184  001462  6E04               	movwf	(___fladd@b+3)^0,c
  5185  001464                     l2897:
  5186  001464  5008               	movf	(___fladd@a+3)^0,w,c
  5187  001466  0B80               	andlw	128
  5188  001468  6E0E               	movwf	___fladd@aexp^0,c
  5189  00146A  500D               	movf	___fladd@signs^0,w,c
  5190  00146C  180E               	xorwf	___fladd@aexp^0,w,c
  5191  00146E  B4D8               	btfsc	status,2,c
  5192  001470  EF3C  F00A         	goto	u2711
  5193  001474  EF3E  F00A         	goto	u2710
  5194  001478                     u2711:
  5195  001478  EF3F  F00A         	goto	l2903
  5196  00147C                     u2710:
  5197  00147C  8C0D               	bsf	___fladd@signs^0,6,c
  5198  00147E                     l2903:
  5199  00147E  5008               	movf	(___fladd@a+3)^0,w,c
  5200  001480  2408               	addwf	(___fladd@a+3)^0,w,c
  5201  001482  6E0E               	movwf	___fladd@aexp^0,c
  5202  001484  AE07               	btfss	(___fladd@a+2)^0,7,c
  5203  001486  EF47  F00A         	goto	u2721
  5204  00148A  EF49  F00A         	goto	u2720
  5205  00148E                     u2721:
  5206  00148E  EF4A  F00A         	goto	l2909
  5207  001492                     u2720:
  5208  001492  800E               	bsf	___fladd@aexp^0,0,c
  5209  001494                     l2909:
  5210  001494  500E               	movf	___fladd@aexp^0,w,c
  5211  001496  B4D8               	btfsc	status,2,c
  5212  001498  EF50  F00A         	goto	u2731
  5213  00149C  EF52  F00A         	goto	u2730
  5214  0014A0                     u2731:
  5215  0014A0  EF67  F00A         	goto	l2919
  5216  0014A4                     u2730:
  5217  0014A4  280E               	incf	___fladd@aexp^0,w,c
  5218  0014A6  A4D8               	btfss	status,2,c
  5219  0014A8  EF58  F00A         	goto	u2741
  5220  0014AC  EF5A  F00A         	goto	u2740
  5221  0014B0                     u2741:
  5222  0014B0  EF62  F00A         	goto	l2915
  5223  0014B4                     u2740:
  5224  0014B4  0E00               	movlw	0
  5225  0014B6  6E05               	movwf	___fladd@a^0,c
  5226  0014B8  0E00               	movlw	0
  5227  0014BA  6E06               	movwf	(___fladd@a+1)^0,c
  5228  0014BC  0E00               	movlw	0
  5229  0014BE  6E07               	movwf	(___fladd@a+2)^0,c
  5230  0014C0  0E00               	movlw	0
  5231  0014C2  6E08               	movwf	(___fladd@a+3)^0,c
  5232  0014C4                     l2915:
  5233  0014C4  8E07               	bsf	(___fladd@a+2)^0,7,c
  5234  0014C6  0E00               	movlw	0
  5235  0014C8  6E08               	movwf	(___fladd@a+3)^0,c
  5236  0014CA  EF6F  F00A         	goto	l2921
  5237  0014CE                     l2919:
  5238  0014CE  0E00               	movlw	0
  5239  0014D0  6E05               	movwf	___fladd@a^0,c
  5240  0014D2  0E00               	movlw	0
  5241  0014D4  6E06               	movwf	(___fladd@a+1)^0,c
  5242  0014D6  0E00               	movlw	0
  5243  0014D8  6E07               	movwf	(___fladd@a+2)^0,c
  5244  0014DA  0E00               	movlw	0
  5245  0014DC  6E08               	movwf	(___fladd@a+3)^0,c
  5246  0014DE                     l2921:
  5247  0014DE  500F               	movf	___fladd@bexp^0,w,c
  5248  0014E0  5C0E               	subwf	___fladd@aexp^0,w,c
  5249  0014E2  B0D8               	btfsc	status,0,c
  5250  0014E4  EF76  F00A         	goto	u2751
  5251  0014E8  EF78  F00A         	goto	u2750
  5252  0014EC                     u2751:
  5253  0014EC  EF9F  F00A         	goto	l2957
  5254  0014F0                     u2750:
  5255  0014F0  AC0D               	btfss	___fladd@signs^0,6,c
  5256  0014F2  EF7D  F00A         	goto	u2761
  5257  0014F6  EF7F  F00A         	goto	u2760
  5258  0014FA                     u2761:
  5259  0014FA  EF81  F00A         	goto	l2927
  5260  0014FE                     u2760:
  5261  0014FE  0E80               	movlw	128
  5262  001500  1A0D               	xorwf	___fladd@signs^0,f,c
  5263  001502                     l2927:
  5264  001502  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5265  001506  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5266  00150A  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5267  00150E  C001  F010         	movff	___fladd@b,___fladd@grs
  5268  001512  C005  F001         	movff	___fladd@a,___fladd@b
  5269  001516  C010  F005         	movff	___fladd@grs,___fladd@a
  5270  00151A  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5271  00151E  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5272  001522  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5273  001526  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5274  00152A  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5275  00152E  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5276  001532  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5277  001536  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5278  00153A  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5279  00153E                     l2957:
  5280  00153E  0E00               	movlw	0
  5281  001540  6E10               	movwf	___fladd@grs^0,c
  5282  001542  500F               	movf	___fladd@bexp^0,w,c
  5283  001544  C00E  F009         	movff	___fladd@aexp,??___fladd
  5284  001548  6A0A               	clrf	(??___fladd+1)^0,c
  5285  00154A  5E09               	subwf	??___fladd^0,f,c
  5286  00154C  0E00               	movlw	0
  5287  00154E  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5288  001550  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5289  001552  EFB4  F00A         	goto	u2771
  5290  001556  500A               	movf	(??___fladd+1)^0,w,c
  5291  001558  E109               	bnz	u2770
  5292  00155A  0E1A               	movlw	26
  5293  00155C  5C09               	subwf	??___fladd^0,w,c
  5294  00155E  A0D8               	btfss	status,0,c
  5295  001560  EFB4  F00A         	goto	u2771
  5296  001564  EFB6  F00A         	goto	u2770
  5297  001568                     u2771:
  5298  001568  EFED  F00A         	goto	l872
  5299  00156C                     u2770:
  5300  00156C  5001               	movf	___fladd@b^0,w,c
  5301  00156E  1002               	iorwf	(___fladd@b+1)^0,w,c
  5302  001570  1003               	iorwf	(___fladd@b+2)^0,w,c
  5303  001572  1004               	iorwf	(___fladd@b+3)^0,w,c
  5304  001574  A4D8               	btfss	status,2,c
  5305  001576  EFBF  F00A         	goto	u2781
  5306  00157A  EFC2  F00A         	goto	u2780
  5307  00157E                     u2781:
  5308  00157E  0E01               	movlw	1
  5309  001580  EFC3  F00A         	goto	u2790
  5310  001584                     u2780:
  5311  001584  0E00               	movlw	0
  5312  001586                     u2790:
  5313  001586  6E10               	movwf	___fladd@grs^0,c
  5314  001588  0E00               	movlw	0
  5315  00158A  6E01               	movwf	___fladd@b^0,c
  5316  00158C  0E00               	movlw	0
  5317  00158E  6E02               	movwf	(___fladd@b+1)^0,c
  5318  001590  0E00               	movlw	0
  5319  001592  6E03               	movwf	(___fladd@b+2)^0,c
  5320  001594  0E00               	movlw	0
  5321  001596  6E04               	movwf	(___fladd@b+3)^0,c
  5322  001598  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5323  00159C  EFF6  F00A         	goto	l871
  5324  0015A0                     l873:
  5325  0015A0  A010               	btfss	___fladd@grs^0,0,c
  5326  0015A2  EFD5  F00A         	goto	u2801
  5327  0015A6  EFD7  F00A         	goto	u2800
  5328  0015AA                     u2801:
  5329  0015AA  EFDD  F00A         	goto	l2969
  5330  0015AE                     u2800:
  5331  0015AE  90D8               	bcf	status,0,c
  5332  0015B0  3010               	rrcf	___fladd@grs^0,w,c
  5333  0015B2  0901               	iorlw	1
  5334  0015B4  6E10               	movwf	___fladd@grs^0,c
  5335  0015B6  EFDF  F00A         	goto	l2971
  5336  0015BA                     l2969:
  5337  0015BA  90D8               	bcf	status,0,c
  5338  0015BC  3210               	rrcf	___fladd@grs^0,f,c
  5339  0015BE                     l2971:
  5340  0015BE  A001               	btfss	___fladd@b^0,0,c
  5341  0015C0  EFE4  F00A         	goto	u2811
  5342  0015C4  EFE6  F00A         	goto	u2810
  5343  0015C8                     u2811:
  5344  0015C8  EFE7  F00A         	goto	l2975
  5345  0015CC                     u2810:
  5346  0015CC  8E10               	bsf	___fladd@grs^0,7,c
  5347  0015CE                     l2975:
  5348  0015CE  3404               	rlcf	(___fladd@b+3)^0,w,c
  5349  0015D0  3204               	rrcf	(___fladd@b+3)^0,f,c
  5350  0015D2  3203               	rrcf	(___fladd@b+2)^0,f,c
  5351  0015D4  3202               	rrcf	(___fladd@b+1)^0,f,c
  5352  0015D6  3201               	rrcf	___fladd@b^0,f,c
  5353  0015D8  2A0F               	incf	___fladd@bexp^0,f,c
  5354  0015DA                     l872:
  5355  0015DA  500E               	movf	___fladd@aexp^0,w,c
  5356  0015DC  5C0F               	subwf	___fladd@bexp^0,w,c
  5357  0015DE  A0D8               	btfss	status,0,c
  5358  0015E0  EFF4  F00A         	goto	u2821
  5359  0015E4  EFF6  F00A         	goto	u2820
  5360  0015E8                     u2821:
  5361  0015E8  EFD0  F00A         	goto	l873
  5362  0015EC                     u2820:
  5363  0015EC                     l871:
  5364  0015EC  BC0D               	btfsc	___fladd@signs^0,6,c
  5365  0015EE  EFFB  F00A         	goto	u2831
  5366  0015F2  EFFD  F00A         	goto	u2830
  5367  0015F6                     u2831:
  5368  0015F6  EF3D  F00B         	goto	l3003
  5369  0015FA                     u2830:
  5370  0015FA  500F               	movf	___fladd@bexp^0,w,c
  5371  0015FC  A4D8               	btfss	status,2,c
  5372  0015FE  EF03  F00B         	goto	u2841
  5373  001602  EF05  F00B         	goto	u2840
  5374  001606                     u2841:
  5375  001606  EF0F  F00B         	goto	l2985
  5376  00160A                     u2840:
  5377  00160A  0E00               	movlw	0
  5378  00160C  6E01               	movwf	?___fladd^0,c
  5379  00160E  0E00               	movlw	0
  5380  001610  6E02               	movwf	(?___fladd+1)^0,c
  5381  001612  0E00               	movlw	0
  5382  001614  6E03               	movwf	(?___fladd+2)^0,c
  5383  001616  0E00               	movlw	0
  5384  001618  6E04               	movwf	(?___fladd+3)^0,c
  5385  00161A  EF5E  F00C         	goto	l880
  5386  00161E                     l2985:
  5387  00161E  5005               	movf	___fladd@a^0,w,c
  5388  001620  2601               	addwf	___fladd@b^0,f,c
  5389  001622  5006               	movf	(___fladd@a+1)^0,w,c
  5390  001624  2202               	addwfc	(___fladd@b+1)^0,f,c
  5391  001626  5007               	movf	(___fladd@a+2)^0,w,c
  5392  001628  2203               	addwfc	(___fladd@b+2)^0,f,c
  5393  00162A  5008               	movf	(___fladd@a+3)^0,w,c
  5394  00162C  2204               	addwfc	(___fladd@b+3)^0,f,c
  5395  00162E  A004               	btfss	(___fladd@b+3)^0,0,c
  5396  001630  EF1C  F00B         	goto	u2851
  5397  001634  EF1E  F00B         	goto	u2850
  5398  001638                     u2851:
  5399  001638  EFCA  F00B         	goto	l3039
  5400  00163C                     u2850:
  5401  00163C  A010               	btfss	___fladd@grs^0,0,c
  5402  00163E  EF23  F00B         	goto	u2861
  5403  001642  EF25  F00B         	goto	u2860
  5404  001646                     u2861:
  5405  001646  EF2B  F00B         	goto	l2993
  5406  00164A                     u2860:
  5407  00164A  90D8               	bcf	status,0,c
  5408  00164C  3010               	rrcf	___fladd@grs^0,w,c
  5409  00164E  0901               	iorlw	1
  5410  001650  6E10               	movwf	___fladd@grs^0,c
  5411  001652  EF2D  F00B         	goto	l2995
  5412  001656                     l2993:
  5413  001656  90D8               	bcf	status,0,c
  5414  001658  3210               	rrcf	___fladd@grs^0,f,c
  5415  00165A                     l2995:
  5416  00165A  A001               	btfss	___fladd@b^0,0,c
  5417  00165C  EF32  F00B         	goto	u2871
  5418  001660  EF34  F00B         	goto	u2870
  5419  001664                     u2871:
  5420  001664  EF35  F00B         	goto	l2999
  5421  001668                     u2870:
  5422  001668  8E10               	bsf	___fladd@grs^0,7,c
  5423  00166A                     l2999:
  5424  00166A  3404               	rlcf	(___fladd@b+3)^0,w,c
  5425  00166C  3204               	rrcf	(___fladd@b+3)^0,f,c
  5426  00166E  3203               	rrcf	(___fladd@b+2)^0,f,c
  5427  001670  3202               	rrcf	(___fladd@b+1)^0,f,c
  5428  001672  3201               	rrcf	___fladd@b^0,f,c
  5429  001674  2A0F               	incf	___fladd@bexp^0,f,c
  5430  001676  EFCA  F00B         	goto	l3039
  5431  00167A                     l3003:
  5432  00167A  5005               	movf	___fladd@a^0,w,c
  5433  00167C  5C01               	subwf	___fladd@b^0,w,c
  5434  00167E  5006               	movf	(___fladd@a+1)^0,w,c
  5435  001680  5802               	subwfb	(___fladd@b+1)^0,w,c
  5436  001682  5007               	movf	(___fladd@a+2)^0,w,c
  5437  001684  5803               	subwfb	(___fladd@b+2)^0,w,c
  5438  001686  5004               	movf	(___fladd@b+3)^0,w,c
  5439  001688  0A80               	xorlw	128
  5440  00168A  6E09               	movwf	??___fladd^0,c
  5441  00168C  5008               	movf	(___fladd@a+3)^0,w,c
  5442  00168E  0A80               	xorlw	128
  5443  001690  5809               	subwfb	??___fladd^0,w,c
  5444  001692  B0D8               	btfsc	status,0,c
  5445  001694  EF4E  F00B         	goto	u2881
  5446  001698  EF50  F00B         	goto	u2880
  5447  00169C                     u2881:
  5448  00169C  EF7B  F00B         	goto	l3013
  5449  0016A0                     u2880:
  5450  0016A0  5001               	movf	___fladd@b^0,w,c
  5451  0016A2  5C05               	subwf	___fladd@a^0,w,c
  5452  0016A4  6E09               	movwf	??___fladd^0,c
  5453  0016A6  5002               	movf	(___fladd@b+1)^0,w,c
  5454  0016A8  5806               	subwfb	(___fladd@a+1)^0,w,c
  5455  0016AA  6E0A               	movwf	(??___fladd+1)^0,c
  5456  0016AC  5003               	movf	(___fladd@b+2)^0,w,c
  5457  0016AE  5807               	subwfb	(___fladd@a+2)^0,w,c
  5458  0016B0  6E0B               	movwf	(??___fladd+2)^0,c
  5459  0016B2  5004               	movf	(___fladd@b+3)^0,w,c
  5460  0016B4  5808               	subwfb	(___fladd@a+3)^0,w,c
  5461  0016B6  6E0C               	movwf	(??___fladd+3)^0,c
  5462  0016B8  0EFF               	movlw	255
  5463  0016BA  2409               	addwf	??___fladd^0,w,c
  5464  0016BC  6E01               	movwf	___fladd@b^0,c
  5465  0016BE  0EFF               	movlw	255
  5466  0016C0  200A               	addwfc	(??___fladd+1)^0,w,c
  5467  0016C2  6E02               	movwf	(___fladd@b+1)^0,c
  5468  0016C4  0EFF               	movlw	255
  5469  0016C6  200B               	addwfc	(??___fladd+2)^0,w,c
  5470  0016C8  6E03               	movwf	(___fladd@b+2)^0,c
  5471  0016CA  0EFF               	movlw	255
  5472  0016CC  200C               	addwfc	(??___fladd+3)^0,w,c
  5473  0016CE  6E04               	movwf	(___fladd@b+3)^0,c
  5474  0016D0  0E80               	movlw	128
  5475  0016D2  1A0D               	xorwf	___fladd@signs^0,f,c
  5476  0016D4  6C10               	negf	___fladd@grs^0,c
  5477  0016D6  5010               	movf	___fladd@grs^0,w,c
  5478  0016D8  A4D8               	btfss	status,2,c
  5479  0016DA  EF71  F00B         	goto	u2891
  5480  0016DE  EF73  F00B         	goto	u2890
  5481  0016E2                     u2891:
  5482  0016E2  EF83  F00B         	goto	l888
  5483  0016E6                     u2890:
  5484  0016E6  0E01               	movlw	1
  5485  0016E8  2601               	addwf	___fladd@b^0,f,c
  5486  0016EA  0E00               	movlw	0
  5487  0016EC  2202               	addwfc	(___fladd@b+1)^0,f,c
  5488  0016EE  2203               	addwfc	(___fladd@b+2)^0,f,c
  5489  0016F0  2204               	addwfc	(___fladd@b+3)^0,f,c
  5490  0016F2  EF83  F00B         	goto	l888
  5491  0016F6                     l3013:
  5492  0016F6  5005               	movf	___fladd@a^0,w,c
  5493  0016F8  5E01               	subwf	___fladd@b^0,f,c
  5494  0016FA  5006               	movf	(___fladd@a+1)^0,w,c
  5495  0016FC  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5496  0016FE  5007               	movf	(___fladd@a+2)^0,w,c
  5497  001700  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5498  001702  5008               	movf	(___fladd@a+3)^0,w,c
  5499  001704  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5500  001706                     l888:
  5501  001706  5001               	movf	___fladd@b^0,w,c
  5502  001708  1002               	iorwf	(___fladd@b+1)^0,w,c
  5503  00170A  1003               	iorwf	(___fladd@b+2)^0,w,c
  5504  00170C  1004               	iorwf	(___fladd@b+3)^0,w,c
  5505  00170E  A4D8               	btfss	status,2,c
  5506  001710  EF8C  F00B         	goto	u2901
  5507  001714  EF8E  F00B         	goto	u2900
  5508  001718                     u2901:
  5509  001718  EFC3  F00B         	goto	l3037
  5510  00171C                     u2900:
  5511  00171C  5010               	movf	___fladd@grs^0,w,c
  5512  00171E  A4D8               	btfss	status,2,c
  5513  001720  EF94  F00B         	goto	u2911
  5514  001724  EF96  F00B         	goto	u2910
  5515  001728                     u2911:
  5516  001728  EFC3  F00B         	goto	l3037
  5517  00172C                     u2910:
  5518  00172C  0E00               	movlw	0
  5519  00172E  6E01               	movwf	?___fladd^0,c
  5520  001730  0E00               	movlw	0
  5521  001732  6E02               	movwf	(?___fladd+1)^0,c
  5522  001734  0E00               	movlw	0
  5523  001736  6E03               	movwf	(?___fladd+2)^0,c
  5524  001738  0E00               	movlw	0
  5525  00173A  6E04               	movwf	(?___fladd+3)^0,c
  5526  00173C  EF5E  F00C         	goto	l880
  5527  001740                     l3021:
  5528  001740  90D8               	bcf	status,0,c
  5529  001742  3601               	rlcf	___fladd@b^0,f,c
  5530  001744  3602               	rlcf	(___fladd@b+1)^0,f,c
  5531  001746  3603               	rlcf	(___fladd@b+2)^0,f,c
  5532  001748  3604               	rlcf	(___fladd@b+3)^0,f,c
  5533  00174A  AE10               	btfss	___fladd@grs^0,7,c
  5534  00174C  EFAA  F00B         	goto	u2921
  5535  001750  EFAC  F00B         	goto	u2920
  5536  001754                     u2921:
  5537  001754  EFAD  F00B         	goto	l3027
  5538  001758                     u2920:
  5539  001758  8001               	bsf	___fladd@b^0,0,c
  5540  00175A                     l3027:
  5541  00175A  A010               	btfss	___fladd@grs^0,0,c
  5542  00175C  EFB2  F00B         	goto	u2931
  5543  001760  EFB4  F00B         	goto	u2930
  5544  001764                     u2931:
  5545  001764  EFB8  F00B         	goto	l3031
  5546  001768                     u2930:
  5547  001768  80D8               	bsf	status,0,c
  5548  00176A  3610               	rlcf	___fladd@grs^0,f,c
  5549  00176C  EFBA  F00B         	goto	l3033
  5550  001770                     l3031:
  5551  001770  90D8               	bcf	status,0,c
  5552  001772  3610               	rlcf	___fladd@grs^0,f,c
  5553  001774                     l3033:
  5554  001774  500F               	movf	___fladd@bexp^0,w,c
  5555  001776  B4D8               	btfsc	status,2,c
  5556  001778  EFC0  F00B         	goto	u2941
  5557  00177C  EFC2  F00B         	goto	u2940
  5558  001780                     u2941:
  5559  001780  EFC3  F00B         	goto	l3037
  5560  001784                     u2940:
  5561  001784  060F               	decf	___fladd@bexp^0,f,c
  5562  001786                     l3037:
  5563  001786  AE03               	btfss	(___fladd@b+2)^0,7,c
  5564  001788  EFC8  F00B         	goto	u2951
  5565  00178C  EFCA  F00B         	goto	u2950
  5566  001790                     u2951:
  5567  001790  EFA0  F00B         	goto	l3021
  5568  001794                     u2950:
  5569  001794                     l3039:
  5570  001794  0E00               	movlw	0
  5571  001796  6E0E               	movwf	___fladd@aexp^0,c
  5572  001798  AE10               	btfss	___fladd@grs^0,7,c
  5573  00179A  EFD1  F00B         	goto	u2961
  5574  00179E  EFD3  F00B         	goto	u2960
  5575  0017A2                     u2961:
  5576  0017A2  EFEB  F00B         	goto	l897
  5577  0017A6                     u2960:
  5578  0017A6  C010  F009         	movff	___fladd@grs,??___fladd
  5579  0017AA  0E7F               	movlw	127
  5580  0017AC  1609               	andwf	??___fladd^0,f,c
  5581  0017AE  B4D8               	btfsc	status,2,c
  5582  0017B0  EFDC  F00B         	goto	u2971
  5583  0017B4  EFDE  F00B         	goto	u2970
  5584  0017B8                     u2971:
  5585  0017B8  EFE2  F00B         	goto	l898
  5586  0017BC                     u2970:
  5587  0017BC                     l3045:
  5588  0017BC  0E01               	movlw	1
  5589  0017BE  6E0E               	movwf	___fladd@aexp^0,c
  5590  0017C0  EFEB  F00B         	goto	l897
  5591  0017C4                     l898:
  5592  0017C4  A001               	btfss	___fladd@b^0,0,c
  5593  0017C6  EFE7  F00B         	goto	u2981
  5594  0017CA  EFE9  F00B         	goto	u2980
  5595  0017CE                     u2981:
  5596  0017CE  EFEB  F00B         	goto	l897
  5597  0017D2                     u2980:
  5598  0017D2  EFDE  F00B         	goto	l3045
  5599  0017D6                     l897:
  5600  0017D6  500E               	movf	___fladd@aexp^0,w,c
  5601  0017D8  B4D8               	btfsc	status,2,c
  5602  0017DA  EFF1  F00B         	goto	u2991
  5603  0017DE  EFF3  F00B         	goto	u2990
  5604  0017E2                     u2991:
  5605  0017E2  EF1E  F00C         	goto	l3057
  5606  0017E6                     u2990:
  5607  0017E6  0E01               	movlw	1
  5608  0017E8  2601               	addwf	___fladd@b^0,f,c
  5609  0017EA  0E00               	movlw	0
  5610  0017EC  2202               	addwfc	(___fladd@b+1)^0,f,c
  5611  0017EE  2203               	addwfc	(___fladd@b+2)^0,f,c
  5612  0017F0  2204               	addwfc	(___fladd@b+3)^0,f,c
  5613  0017F2  A004               	btfss	(___fladd@b+3)^0,0,c
  5614  0017F4  EFFE  F00B         	goto	u3001
  5615  0017F8  EF00  F00C         	goto	u3000
  5616  0017FC                     u3001:
  5617  0017FC  EF1E  F00C         	goto	l3057
  5618  001800                     u3000:
  5619  001800  C001  F009         	movff	___fladd@b,??___fladd
  5620  001804  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5621  001808  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5622  00180C  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5623  001810  340C               	rlcf	(??___fladd+3)^0,w,c
  5624  001812  320C               	rrcf	(??___fladd+3)^0,f,c
  5625  001814  320B               	rrcf	(??___fladd+2)^0,f,c
  5626  001816  320A               	rrcf	(??___fladd+1)^0,f,c
  5627  001818  3209               	rrcf	??___fladd^0,f,c
  5628  00181A  C009  F001         	movff	??___fladd,___fladd@b
  5629  00181E  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5630  001822  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5631  001826  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5632  00182A  280F               	incf	___fladd@bexp^0,w,c
  5633  00182C  B4D8               	btfsc	status,2,c
  5634  00182E  EF1B  F00C         	goto	u3011
  5635  001832  EF1D  F00C         	goto	u3010
  5636  001836                     u3011:
  5637  001836  EF1E  F00C         	goto	l3057
  5638  00183A                     u3010:
  5639  00183A  2A0F               	incf	___fladd@bexp^0,f,c
  5640  00183C                     l3057:
  5641  00183C  280F               	incf	___fladd@bexp^0,w,c
  5642  00183E  B4D8               	btfsc	status,2,c
  5643  001840  EF24  F00C         	goto	u3021
  5644  001844  EF26  F00C         	goto	u3020
  5645  001848                     u3021:
  5646  001848  EF2E  F00C         	goto	l3061
  5647  00184C                     u3020:
  5648  00184C  500F               	movf	___fladd@bexp^0,w,c
  5649  00184E  A4D8               	btfss	status,2,c
  5650  001850  EF2C  F00C         	goto	u3031
  5651  001854  EF2E  F00C         	goto	u3030
  5652  001858                     u3031:
  5653  001858  EF40  F00C         	goto	l3065
  5654  00185C                     u3030:
  5655  00185C                     l3061:
  5656  00185C  0E00               	movlw	0
  5657  00185E  6E01               	movwf	___fladd@b^0,c
  5658  001860  0E00               	movlw	0
  5659  001862  6E02               	movwf	(___fladd@b+1)^0,c
  5660  001864  0E00               	movlw	0
  5661  001866  6E03               	movwf	(___fladd@b+2)^0,c
  5662  001868  0E00               	movlw	0
  5663  00186A  6E04               	movwf	(___fladd@b+3)^0,c
  5664  00186C  500F               	movf	___fladd@bexp^0,w,c
  5665  00186E  A4D8               	btfss	status,2,c
  5666  001870  EF3C  F00C         	goto	u3041
  5667  001874  EF3E  F00C         	goto	u3040
  5668  001878                     u3041:
  5669  001878  EF40  F00C         	goto	l3065
  5670  00187C                     u3040:
  5671  00187C  0E00               	movlw	0
  5672  00187E  6E0D               	movwf	___fladd@signs^0,c
  5673  001880                     l3065:
  5674  001880  A00F               	btfss	___fladd@bexp^0,0,c
  5675  001882  EF45  F00C         	goto	u3051
  5676  001886  EF47  F00C         	goto	u3050
  5677  00188A                     u3051:
  5678  00188A  EF4A  F00C         	goto	l3069
  5679  00188E                     u3050:
  5680  00188E  8E03               	bsf	(___fladd@b+2)^0,7,c
  5681  001890  EF4B  F00C         	goto	l3071
  5682  001894                     l3069:
  5683  001894  9E03               	bcf	(___fladd@b+2)^0,7,c
  5684  001896                     l3071:
  5685  001896  90D8               	bcf	status,0,c
  5686  001898  300F               	rrcf	___fladd@bexp^0,w,c
  5687  00189A  6E04               	movwf	(___fladd@b+3)^0,c
  5688  00189C  AE0D               	btfss	___fladd@signs^0,7,c
  5689  00189E  EF53  F00C         	goto	u3061
  5690  0018A2  EF55  F00C         	goto	u3060
  5691  0018A6                     u3061:
  5692  0018A6  EF56  F00C         	goto	l3077
  5693  0018AA                     u3060:
  5694  0018AA  8E04               	bsf	(___fladd@b+3)^0,7,c
  5695  0018AC                     l3077:
  5696  0018AC  C001  F001         	movff	___fladd@b,?___fladd
  5697  0018B0  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5698  0018B4  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5699  0018B8  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5700  0018BC                     l880:
  5701  0018BC  0012               	return		;funcret
  5702  0018BE                     __end_of___fladd:
  5703                           	opt callstack 0
  5704                           
  5705 ;; *************** function ___flneg *****************
  5706 ;; Defined at:
  5707 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;  f1              4    0[COMRAM] unsigned char 
  5710 ;; Auto vars:     Size  Location     Type
  5711 ;;		None
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  4    0[COMRAM] unsigned char 
  5714 ;; Registers used:
  5715 ;;		wreg, status,2, status,0
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/0
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5721 ;;      Params:         4       0       0       0       0       0       0       0       0
  5722 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5723 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5724 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5725 ;;Total ram usage:        4 bytes
  5726 ;; Hardware stack levels used:    1
  5727 ;; This function calls:
  5728 ;;		Nothing
  5729 ;; This function is called by:
  5730 ;;		_efgtoa
  5731 ;; This function uses a non-reentrant model
  5732 ;;
  5733                           
  5734                           	psect	text19
  5735  0038CA                     __ptext19:
  5736                           	opt callstack 0
  5737  0038CA                     ___flneg:
  5738                           	opt callstack 26
  5739  0038CA  5001               	movf	___flneg@f1^0,w,c
  5740  0038CC  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5741  0038CE  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5742  0038D0  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5743  0038D2  B4D8               	btfsc	status,2,c
  5744  0038D4  EF6E  F01C         	goto	u3971
  5745  0038D8  EF70  F01C         	goto	u3970
  5746  0038DC                     u3971:
  5747  0038DC  EF78  F01C         	goto	l3573
  5748  0038E0                     u3970:
  5749  0038E0  0E00               	movlw	0
  5750  0038E2  1A01               	xorwf	___flneg@f1^0,f,c
  5751  0038E4  0E00               	movlw	0
  5752  0038E6  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5753  0038E8  0E00               	movlw	0
  5754  0038EA  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5755  0038EC  0E80               	movlw	128
  5756  0038EE  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5757  0038F0                     l3573:
  5758  0038F0  C001  F001         	movff	___flneg@f1,?___flneg
  5759  0038F4  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5760  0038F8  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5761  0038FC  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5762  003900  0012               	return		;funcret
  5763  003902                     __end_of___flneg:
  5764                           	opt callstack 0
  5765                           
  5766 ;; *************** function ___flmul *****************
  5767 ;; Defined at:
  5768 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  5769 ;; Parameters:    Size  Location     Type
  5770 ;;  b               4   14[COMRAM] unsigned char 
  5771 ;;  a               4   18[COMRAM] unsigned char 
  5772 ;; Auto vars:     Size  Location     Type
  5773 ;;  prod            4   33[COMRAM] struct .
  5774 ;;  grs             4   27[COMRAM] unsigned long 
  5775 ;;  temp            2   37[COMRAM] struct .
  5776 ;;  bexp            1   32[COMRAM] unsigned char 
  5777 ;;  aexp            1   31[COMRAM] unsigned char 
  5778 ;;  sign            1   26[COMRAM] unsigned char 
  5779 ;; Return value:  Size  Location     Type
  5780 ;;                  4   14[COMRAM] unsigned char 
  5781 ;; Registers used:
  5782 ;;		wreg, status,2, status,0, prodl, prodh
  5783 ;; Tracked objects:
  5784 ;;		On entry : 0/0
  5785 ;;		On exit  : 0/0
  5786 ;;		Unchanged: 0/0
  5787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5788 ;;      Params:         8       0       0       0       0       0       0       0       0
  5789 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5790 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5791 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5792 ;;Total ram usage:       25 bytes
  5793 ;; Hardware stack levels used:    1
  5794 ;; This function calls:
  5795 ;;		Nothing
  5796 ;; This function is called by:
  5797 ;;		_main
  5798 ;;		_efgtoa
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           	psect	text20
  5803  001D2C                     __ptext20:
  5804                           	opt callstack 0
  5805  001D2C                     ___flmul:
  5806                           	opt callstack 26
  5807  001D2C  5012               	movf	(___flmul@b+3)^0,w,c
  5808  001D2E  0B80               	andlw	128
  5809  001D30  6E1B               	movwf	___flmul@sign^0,c
  5810  001D32  5012               	movf	(___flmul@b+3)^0,w,c
  5811  001D34  2412               	addwf	(___flmul@b+3)^0,w,c
  5812  001D36  6E21               	movwf	___flmul@bexp^0,c
  5813  001D38  AE11               	btfss	(___flmul@b+2)^0,7,c
  5814  001D3A  EFA1  F00E         	goto	u3581
  5815  001D3E  EFA3  F00E         	goto	u3580
  5816  001D42                     u3581:
  5817  001D42  EFA4  F00E         	goto	l3321
  5818  001D46                     u3580:
  5819  001D46  8021               	bsf	___flmul@bexp^0,0,c
  5820  001D48                     l3321:
  5821  001D48  5021               	movf	___flmul@bexp^0,w,c
  5822  001D4A  B4D8               	btfsc	status,2,c
  5823  001D4C  EFAA  F00E         	goto	u3591
  5824  001D50  EFAC  F00E         	goto	u3590
  5825  001D54                     u3591:
  5826  001D54  EFBF  F00E         	goto	l3329
  5827  001D58                     u3590:
  5828  001D58  2821               	incf	___flmul@bexp^0,w,c
  5829  001D5A  A4D8               	btfss	status,2,c
  5830  001D5C  EFB2  F00E         	goto	u3601
  5831  001D60  EFB4  F00E         	goto	u3600
  5832  001D64                     u3601:
  5833  001D64  EFBC  F00E         	goto	l3327
  5834  001D68                     u3600:
  5835  001D68  0E00               	movlw	0
  5836  001D6A  6E0F               	movwf	___flmul@b^0,c
  5837  001D6C  0E00               	movlw	0
  5838  001D6E  6E10               	movwf	(___flmul@b+1)^0,c
  5839  001D70  0E00               	movlw	0
  5840  001D72  6E11               	movwf	(___flmul@b+2)^0,c
  5841  001D74  0E00               	movlw	0
  5842  001D76  6E12               	movwf	(___flmul@b+3)^0,c
  5843  001D78                     l3327:
  5844  001D78  8E11               	bsf	(___flmul@b+2)^0,7,c
  5845  001D7A  EFC7  F00E         	goto	l3331
  5846  001D7E                     l3329:
  5847  001D7E  0E00               	movlw	0
  5848  001D80  6E0F               	movwf	___flmul@b^0,c
  5849  001D82  0E00               	movlw	0
  5850  001D84  6E10               	movwf	(___flmul@b+1)^0,c
  5851  001D86  0E00               	movlw	0
  5852  001D88  6E11               	movwf	(___flmul@b+2)^0,c
  5853  001D8A  0E00               	movlw	0
  5854  001D8C  6E12               	movwf	(___flmul@b+3)^0,c
  5855  001D8E                     l3331:
  5856  001D8E  5016               	movf	(___flmul@a+3)^0,w,c
  5857  001D90  0B80               	andlw	128
  5858  001D92  1A1B               	xorwf	___flmul@sign^0,f,c
  5859  001D94  5016               	movf	(___flmul@a+3)^0,w,c
  5860  001D96  2416               	addwf	(___flmul@a+3)^0,w,c
  5861  001D98  6E20               	movwf	___flmul@aexp^0,c
  5862  001D9A  AE15               	btfss	(___flmul@a+2)^0,7,c
  5863  001D9C  EFD2  F00E         	goto	u3611
  5864  001DA0  EFD4  F00E         	goto	u3610
  5865  001DA4                     u3611:
  5866  001DA4  EFD5  F00E         	goto	l3339
  5867  001DA8                     u3610:
  5868  001DA8  8020               	bsf	___flmul@aexp^0,0,c
  5869  001DAA                     l3339:
  5870  001DAA  5020               	movf	___flmul@aexp^0,w,c
  5871  001DAC  B4D8               	btfsc	status,2,c
  5872  001DAE  EFDB  F00E         	goto	u3621
  5873  001DB2  EFDD  F00E         	goto	u3620
  5874  001DB6                     u3621:
  5875  001DB6  EFF0  F00E         	goto	l3347
  5876  001DBA                     u3620:
  5877  001DBA  2820               	incf	___flmul@aexp^0,w,c
  5878  001DBC  A4D8               	btfss	status,2,c
  5879  001DBE  EFE3  F00E         	goto	u3631
  5880  001DC2  EFE5  F00E         	goto	u3630
  5881  001DC6                     u3631:
  5882  001DC6  EFED  F00E         	goto	l3345
  5883  001DCA                     u3630:
  5884  001DCA  0E00               	movlw	0
  5885  001DCC  6E13               	movwf	___flmul@a^0,c
  5886  001DCE  0E00               	movlw	0
  5887  001DD0  6E14               	movwf	(___flmul@a+1)^0,c
  5888  001DD2  0E00               	movlw	0
  5889  001DD4  6E15               	movwf	(___flmul@a+2)^0,c
  5890  001DD6  0E00               	movlw	0
  5891  001DD8  6E16               	movwf	(___flmul@a+3)^0,c
  5892  001DDA                     l3345:
  5893  001DDA  8E15               	bsf	(___flmul@a+2)^0,7,c
  5894  001DDC  EFF8  F00E         	goto	l957
  5895  001DE0                     l3347:
  5896  001DE0  0E00               	movlw	0
  5897  001DE2  6E13               	movwf	___flmul@a^0,c
  5898  001DE4  0E00               	movlw	0
  5899  001DE6  6E14               	movwf	(___flmul@a+1)^0,c
  5900  001DE8  0E00               	movlw	0
  5901  001DEA  6E15               	movwf	(___flmul@a+2)^0,c
  5902  001DEC  0E00               	movlw	0
  5903  001DEE  6E16               	movwf	(___flmul@a+3)^0,c
  5904  001DF0                     l957:
  5905  001DF0  5020               	movf	___flmul@aexp^0,w,c
  5906  001DF2  B4D8               	btfsc	status,2,c
  5907  001DF4  EFFE  F00E         	goto	u3641
  5908  001DF8  EF00  F00F         	goto	u3640
  5909  001DFC                     u3641:
  5910  001DFC  EF08  F00F         	goto	l3351
  5911  001E00                     u3640:
  5912  001E00  5021               	movf	___flmul@bexp^0,w,c
  5913  001E02  A4D8               	btfss	status,2,c
  5914  001E04  EF06  F00F         	goto	u3651
  5915  001E08  EF08  F00F         	goto	u3650
  5916  001E0C                     u3651:
  5917  001E0C  EF12  F00F         	goto	l3355
  5918  001E10                     u3650:
  5919  001E10                     l3351:
  5920  001E10  0E00               	movlw	0
  5921  001E12  6E0F               	movwf	?___flmul^0,c
  5922  001E14  0E00               	movlw	0
  5923  001E16  6E10               	movwf	(?___flmul+1)^0,c
  5924  001E18  0E00               	movlw	0
  5925  001E1A  6E11               	movwf	(?___flmul+2)^0,c
  5926  001E1C  0E00               	movlw	0
  5927  001E1E  6E12               	movwf	(?___flmul+3)^0,c
  5928  001E20  EFAA  F010         	goto	l961
  5929  001E24                     l3355:
  5930  001E24  5015               	movf	(___flmul@a+2)^0,w,c
  5931  001E26  020F               	mulwf	___flmul@b^0,c
  5932  001E28  CFF3 F026          	movff	prodl,___flmul@temp
  5933  001E2C  CFF4 F027          	movff	prodh,___flmul@temp+1
  5934  001E30  5026               	movf	___flmul@temp^0,w,c
  5935  001E32  6E1C               	movwf	___flmul@grs^0,c
  5936  001E34  6A1D               	clrf	(___flmul@grs+1)^0,c
  5937  001E36  6A1E               	clrf	(___flmul@grs+2)^0,c
  5938  001E38  6A1F               	clrf	(___flmul@grs+3)^0,c
  5939  001E3A  5027               	movf	(___flmul@temp+1)^0,w,c
  5940  001E3C  6E22               	movwf	___flmul@prod^0,c
  5941  001E3E  6A23               	clrf	(___flmul@prod+1)^0,c
  5942  001E40  6A24               	clrf	(___flmul@prod+2)^0,c
  5943  001E42  6A25               	clrf	(___flmul@prod+3)^0,c
  5944  001E44  5014               	movf	(___flmul@a+1)^0,w,c
  5945  001E46  0210               	mulwf	(___flmul@b+1)^0,c
  5946  001E48  CFF3 F026          	movff	prodl,___flmul@temp
  5947  001E4C  CFF4 F027          	movff	prodh,___flmul@temp+1
  5948  001E50  5026               	movf	___flmul@temp^0,w,c
  5949  001E52  261C               	addwf	___flmul@grs^0,f,c
  5950  001E54  0E00               	movlw	0
  5951  001E56  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5952  001E58  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5953  001E5A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5954  001E5C  5027               	movf	(___flmul@temp+1)^0,w,c
  5955  001E5E  2622               	addwf	___flmul@prod^0,f,c
  5956  001E60  0E00               	movlw	0
  5957  001E62  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5958  001E64  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5959  001E66  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5960  001E68  5013               	movf	___flmul@a^0,w,c
  5961  001E6A  0211               	mulwf	(___flmul@b+2)^0,c
  5962  001E6C  CFF3 F026          	movff	prodl,___flmul@temp
  5963  001E70  CFF4 F027          	movff	prodh,___flmul@temp+1
  5964  001E74  5026               	movf	___flmul@temp^0,w,c
  5965  001E76  261C               	addwf	___flmul@grs^0,f,c
  5966  001E78  0E00               	movlw	0
  5967  001E7A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5968  001E7C  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5969  001E7E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5970  001E80  5027               	movf	(___flmul@temp+1)^0,w,c
  5971  001E82  2622               	addwf	___flmul@prod^0,f,c
  5972  001E84  0E00               	movlw	0
  5973  001E86  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5974  001E88  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5975  001E8A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5976  001E8C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5977  001E90  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5978  001E94  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5979  001E98  6A1C               	clrf	___flmul@grs^0,c
  5980  001E9A  5013               	movf	___flmul@a^0,w,c
  5981  001E9C  0210               	mulwf	(___flmul@b+1)^0,c
  5982  001E9E  CFF3 F026          	movff	prodl,___flmul@temp
  5983  001EA2  CFF4 F027          	movff	prodh,___flmul@temp+1
  5984  001EA6  5026               	movf	___flmul@temp^0,w,c
  5985  001EA8  261C               	addwf	___flmul@grs^0,f,c
  5986  001EAA  5027               	movf	(___flmul@temp+1)^0,w,c
  5987  001EAC  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5988  001EAE  0E00               	movlw	0
  5989  001EB0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5990  001EB2  0E00               	movlw	0
  5991  001EB4  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5992  001EB6  5014               	movf	(___flmul@a+1)^0,w,c
  5993  001EB8  020F               	mulwf	___flmul@b^0,c
  5994  001EBA  CFF3 F026          	movff	prodl,___flmul@temp
  5995  001EBE  CFF4 F027          	movff	prodh,___flmul@temp+1
  5996  001EC2  5026               	movf	___flmul@temp^0,w,c
  5997  001EC4  261C               	addwf	___flmul@grs^0,f,c
  5998  001EC6  5027               	movf	(___flmul@temp+1)^0,w,c
  5999  001EC8  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6000  001ECA  0E00               	movlw	0
  6001  001ECC  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6002  001ECE  0E00               	movlw	0
  6003  001ED0  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6004  001ED2  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6005  001ED6  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6006  001EDA  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6007  001EDE  6A1C               	clrf	___flmul@grs^0,c
  6008  001EE0  5013               	movf	___flmul@a^0,w,c
  6009  001EE2  020F               	mulwf	___flmul@b^0,c
  6010  001EE4  CFF3 F026          	movff	prodl,___flmul@temp
  6011  001EE8  CFF4 F027          	movff	prodh,___flmul@temp+1
  6012  001EEC  5026               	movf	___flmul@temp^0,w,c
  6013  001EEE  261C               	addwf	___flmul@grs^0,f,c
  6014  001EF0  5027               	movf	(___flmul@temp+1)^0,w,c
  6015  001EF2  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6016  001EF4  0E00               	movlw	0
  6017  001EF6  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6018  001EF8  0E00               	movlw	0
  6019  001EFA  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6020  001EFC  5015               	movf	(___flmul@a+2)^0,w,c
  6021  001EFE  0210               	mulwf	(___flmul@b+1)^0,c
  6022  001F00  CFF3 F026          	movff	prodl,___flmul@temp
  6023  001F04  CFF4 F027          	movff	prodh,___flmul@temp+1
  6024  001F08  5026               	movf	___flmul@temp^0,w,c
  6025  001F0A  2622               	addwf	___flmul@prod^0,f,c
  6026  001F0C  5027               	movf	(___flmul@temp+1)^0,w,c
  6027  001F0E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6028  001F10  0E00               	movlw	0
  6029  001F12  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6030  001F14  0E00               	movlw	0
  6031  001F16  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6032  001F18  5014               	movf	(___flmul@a+1)^0,w,c
  6033  001F1A  0211               	mulwf	(___flmul@b+2)^0,c
  6034  001F1C  CFF3 F026          	movff	prodl,___flmul@temp
  6035  001F20  CFF4 F027          	movff	prodh,___flmul@temp+1
  6036  001F24  5026               	movf	___flmul@temp^0,w,c
  6037  001F26  2622               	addwf	___flmul@prod^0,f,c
  6038  001F28  5027               	movf	(___flmul@temp+1)^0,w,c
  6039  001F2A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6040  001F2C  0E00               	movlw	0
  6041  001F2E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6042  001F30  0E00               	movlw	0
  6043  001F32  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6044  001F34  5015               	movf	(___flmul@a+2)^0,w,c
  6045  001F36  0211               	mulwf	(___flmul@b+2)^0,c
  6046  001F38  CFF3 F026          	movff	prodl,___flmul@temp
  6047  001F3C  CFF4 F027          	movff	prodh,___flmul@temp+1
  6048  001F40  5026               	movf	___flmul@temp^0,w,c
  6049  001F42  6E17               	movwf	??___flmul^0,c
  6050  001F44  5027               	movf	(___flmul@temp+1)^0,w,c
  6051  001F46  6E18               	movwf	(??___flmul+1)^0,c
  6052  001F48  6A19               	clrf	(??___flmul+2)^0,c
  6053  001F4A  6A1A               	clrf	(??___flmul+3)^0,c
  6054  001F4C  C019  F01A         	movff	??___flmul+2,??___flmul+3
  6055  001F50  C018  F019         	movff	??___flmul+1,??___flmul+2
  6056  001F54  C017  F018         	movff	??___flmul,??___flmul+1
  6057  001F58  6A17               	clrf	??___flmul^0,c
  6058  001F5A  5017               	movf	??___flmul^0,w,c
  6059  001F5C  2622               	addwf	___flmul@prod^0,f,c
  6060  001F5E  5018               	movf	(??___flmul+1)^0,w,c
  6061  001F60  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6062  001F62  5019               	movf	(??___flmul+2)^0,w,c
  6063  001F64  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6064  001F66  501A               	movf	(??___flmul+3)^0,w,c
  6065  001F68  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6066  001F6A  C01C  F017         	movff	___flmul@grs,??___flmul
  6067  001F6E  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  6068  001F72  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  6069  001F76  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  6070  001F7A  0E19               	movlw	25
  6071  001F7C  EFC5  F00F         	goto	u3660
  6072  001F80                     u3665:
  6073  001F80  90D8               	bcf	status,0,c
  6074  001F82  321A               	rrcf	(??___flmul+3)^0,f,c
  6075  001F84  3219               	rrcf	(??___flmul+2)^0,f,c
  6076  001F86  3218               	rrcf	(??___flmul+1)^0,f,c
  6077  001F88  3217               	rrcf	??___flmul^0,f,c
  6078  001F8A                     u3660:
  6079  001F8A  2EE8               	decfsz	wreg,f,c
  6080  001F8C  EFC0  F00F         	goto	u3665
  6081  001F90  5017               	movf	??___flmul^0,w,c
  6082  001F92  2622               	addwf	___flmul@prod^0,f,c
  6083  001F94  5018               	movf	(??___flmul+1)^0,w,c
  6084  001F96  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6085  001F98  5019               	movf	(??___flmul+2)^0,w,c
  6086  001F9A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6087  001F9C  501A               	movf	(??___flmul+3)^0,w,c
  6088  001F9E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6089  001FA0  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6090  001FA4  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6091  001FA8  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6092  001FAC  6A1C               	clrf	___flmul@grs^0,c
  6093  001FAE  5020               	movf	___flmul@aexp^0,w,c
  6094  001FB0  C021  F017         	movff	___flmul@bexp,??___flmul
  6095  001FB4  6A18               	clrf	(??___flmul+1)^0,c
  6096  001FB6  2617               	addwf	??___flmul^0,f,c
  6097  001FB8  0E00               	movlw	0
  6098  001FBA  2218               	addwfc	(??___flmul+1)^0,f,c
  6099  001FBC  0E82               	movlw	130
  6100  001FBE  2417               	addwf	??___flmul^0,w,c
  6101  001FC0  6E26               	movwf	___flmul@temp^0,c
  6102  001FC2  0EFF               	movlw	255
  6103  001FC4  2018               	addwfc	(??___flmul+1)^0,w,c
  6104  001FC6  6E27               	movwf	(___flmul@temp+1)^0,c
  6105  001FC8  EFFB  F00F         	goto	l3403
  6106  001FCC                     l3397:
  6107  001FCC  90D8               	bcf	status,0,c
  6108  001FCE  3622               	rlcf	___flmul@prod^0,f,c
  6109  001FD0  3623               	rlcf	(___flmul@prod+1)^0,f,c
  6110  001FD2  3624               	rlcf	(___flmul@prod+2)^0,f,c
  6111  001FD4  3625               	rlcf	(___flmul@prod+3)^0,f,c
  6112  001FD6  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  6113  001FD8  EFF0  F00F         	goto	u3671
  6114  001FDC  EFF2  F00F         	goto	u3670
  6115  001FE0                     u3671:
  6116  001FE0  EFF3  F00F         	goto	l964
  6117  001FE4                     u3670:
  6118  001FE4  8022               	bsf	___flmul@prod^0,0,c
  6119  001FE6                     l964:
  6120  001FE6  90D8               	bcf	status,0,c
  6121  001FE8  361C               	rlcf	___flmul@grs^0,f,c
  6122  001FEA  361D               	rlcf	(___flmul@grs+1)^0,f,c
  6123  001FEC  361E               	rlcf	(___flmul@grs+2)^0,f,c
  6124  001FEE  361F               	rlcf	(___flmul@grs+3)^0,f,c
  6125  001FF0  0626               	decf	___flmul@temp^0,f,c
  6126  001FF2  A0D8               	btfss	status,0,c
  6127  001FF4  0627               	decf	(___flmul@temp+1)^0,f,c
  6128  001FF6                     l3403:
  6129  001FF6  AE24               	btfss	(___flmul@prod+2)^0,7,c
  6130  001FF8  EF00  F010         	goto	u3681
  6131  001FFC  EF02  F010         	goto	u3680
  6132  002000                     u3681:
  6133  002000  EFE6  F00F         	goto	l3397
  6134  002004                     u3680:
  6135  002004  0E00               	movlw	0
  6136  002006  6E20               	movwf	___flmul@aexp^0,c
  6137  002008  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  6138  00200A  EF09  F010         	goto	u3691
  6139  00200E  EF0B  F010         	goto	u3690
  6140  002012                     u3691:
  6141  002012  EF2F  F010         	goto	l966
  6142  002016                     u3690:
  6143  002016  0EFF               	movlw	255
  6144  002018  141C               	andwf	___flmul@grs^0,w,c
  6145  00201A  6E17               	movwf	??___flmul^0,c
  6146  00201C  0EFF               	movlw	255
  6147  00201E  141D               	andwf	(___flmul@grs+1)^0,w,c
  6148  002020  6E18               	movwf	(??___flmul+1)^0,c
  6149  002022  0EFF               	movlw	255
  6150  002024  141E               	andwf	(___flmul@grs+2)^0,w,c
  6151  002026  6E19               	movwf	(??___flmul+2)^0,c
  6152  002028  0E7F               	movlw	127
  6153  00202A  141F               	andwf	(___flmul@grs+3)^0,w,c
  6154  00202C  6E1A               	movwf	(??___flmul+3)^0,c
  6155  00202E  5017               	movf	??___flmul^0,w,c
  6156  002030  1018               	iorwf	(??___flmul+1)^0,w,c
  6157  002032  1019               	iorwf	(??___flmul+2)^0,w,c
  6158  002034  101A               	iorwf	(??___flmul+3)^0,w,c
  6159  002036  B4D8               	btfsc	status,2,c
  6160  002038  EF20  F010         	goto	u3701
  6161  00203C  EF22  F010         	goto	u3700
  6162  002040                     u3701:
  6163  002040  EF26  F010         	goto	l967
  6164  002044                     u3700:
  6165  002044                     l3411:
  6166  002044  0E01               	movlw	1
  6167  002046  6E20               	movwf	___flmul@aexp^0,c
  6168  002048  EF2F  F010         	goto	l966
  6169  00204C                     l967:
  6170  00204C  A022               	btfss	___flmul@prod^0,0,c
  6171  00204E  EF2B  F010         	goto	u3711
  6172  002052  EF2D  F010         	goto	u3710
  6173  002056                     u3711:
  6174  002056  EF2F  F010         	goto	l966
  6175  00205A                     u3710:
  6176  00205A  EF22  F010         	goto	l3411
  6177  00205E                     l966:
  6178  00205E  5020               	movf	___flmul@aexp^0,w,c
  6179  002060  B4D8               	btfsc	status,2,c
  6180  002062  EF35  F010         	goto	u3721
  6181  002066  EF37  F010         	goto	u3720
  6182  00206A                     u3721:
  6183  00206A  EF5B  F010         	goto	l3423
  6184  00206E                     u3720:
  6185  00206E  0E01               	movlw	1
  6186  002070  2622               	addwf	___flmul@prod^0,f,c
  6187  002072  0E00               	movlw	0
  6188  002074  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6189  002076  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6190  002078  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6191  00207A  A025               	btfss	(___flmul@prod+3)^0,0,c
  6192  00207C  EF42  F010         	goto	u3731
  6193  002080  EF44  F010         	goto	u3730
  6194  002084                     u3731:
  6195  002084  EF5B  F010         	goto	l3423
  6196  002088                     u3730:
  6197  002088  C022  F017         	movff	___flmul@prod,??___flmul
  6198  00208C  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  6199  002090  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  6200  002094  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  6201  002098  341A               	rlcf	(??___flmul+3)^0,w,c
  6202  00209A  321A               	rrcf	(??___flmul+3)^0,f,c
  6203  00209C  3219               	rrcf	(??___flmul+2)^0,f,c
  6204  00209E  3218               	rrcf	(??___flmul+1)^0,f,c
  6205  0020A0  3217               	rrcf	??___flmul^0,f,c
  6206  0020A2  C017  F022         	movff	??___flmul,___flmul@prod
  6207  0020A6  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  6208  0020AA  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  6209  0020AE  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  6210  0020B2  4A26               	infsnz	___flmul@temp^0,f,c
  6211  0020B4  2A27               	incf	(___flmul@temp+1)^0,f,c
  6212  0020B6                     l3423:
  6213  0020B6  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6214  0020B8  EF66  F010         	goto	u3741
  6215  0020BC  5027               	movf	(___flmul@temp+1)^0,w,c
  6216  0020BE  E108               	bnz	u3740
  6217  0020C0  2826               	incf	___flmul@temp^0,w,c
  6218  0020C2  A0D8               	btfss	status,0,c
  6219  0020C4  EF66  F010         	goto	u3741
  6220  0020C8  EF68  F010         	goto	u3740
  6221  0020CC                     u3741:
  6222  0020CC  EF72  F010         	goto	l3427
  6223  0020D0                     u3740:
  6224  0020D0  0E00               	movlw	0
  6225  0020D2  6E22               	movwf	___flmul@prod^0,c
  6226  0020D4  0E00               	movlw	0
  6227  0020D6  6E23               	movwf	(___flmul@prod+1)^0,c
  6228  0020D8  0E80               	movlw	128
  6229  0020DA  6E24               	movwf	(___flmul@prod+2)^0,c
  6230  0020DC  0E7F               	movlw	127
  6231  0020DE  6E25               	movwf	(___flmul@prod+3)^0,c
  6232  0020E0  EFA0  F010         	goto	l3439
  6233  0020E4                     l3427:
  6234  0020E4  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6235  0020E6  EF7F  F010         	goto	u3750
  6236  0020EA  5027               	movf	(___flmul@temp+1)^0,w,c
  6237  0020EC  E106               	bnz	u3751
  6238  0020EE  0426               	decf	___flmul@temp^0,w,c
  6239  0020F0  B0D8               	btfsc	status,0,c
  6240  0020F2  EF7D  F010         	goto	u3751
  6241  0020F6  EF7F  F010         	goto	u3750
  6242  0020FA                     u3751:
  6243  0020FA  EF8B  F010         	goto	l974
  6244  0020FE                     u3750:
  6245  0020FE  0E00               	movlw	0
  6246  002100  6E22               	movwf	___flmul@prod^0,c
  6247  002102  0E00               	movlw	0
  6248  002104  6E23               	movwf	(___flmul@prod+1)^0,c
  6249  002106  0E00               	movlw	0
  6250  002108  6E24               	movwf	(___flmul@prod+2)^0,c
  6251  00210A  0E00               	movlw	0
  6252  00210C  6E25               	movwf	(___flmul@prod+3)^0,c
  6253  00210E  0E00               	movlw	0
  6254  002110  6E1B               	movwf	___flmul@sign^0,c
  6255  002112  EFA0  F010         	goto	l3439
  6256  002116                     l974:
  6257  002116  C026  F021         	movff	___flmul@temp,___flmul@bexp
  6258  00211A  0EFF               	movlw	255
  6259  00211C  1622               	andwf	___flmul@prod^0,f,c
  6260  00211E  0EFF               	movlw	255
  6261  002120  1623               	andwf	(___flmul@prod+1)^0,f,c
  6262  002122  0E7F               	movlw	127
  6263  002124  1624               	andwf	(___flmul@prod+2)^0,f,c
  6264  002126  0E00               	movlw	0
  6265  002128  1625               	andwf	(___flmul@prod+3)^0,f,c
  6266  00212A  A021               	btfss	___flmul@bexp^0,0,c
  6267  00212C  EF9A  F010         	goto	u3761
  6268  002130  EF9C  F010         	goto	u3760
  6269  002134                     u3761:
  6270  002134  EF9D  F010         	goto	l3437
  6271  002138                     u3760:
  6272  002138  8E24               	bsf	(___flmul@prod+2)^0,7,c
  6273  00213A                     l3437:
  6274  00213A  90D8               	bcf	status,0,c
  6275  00213C  3021               	rrcf	___flmul@bexp^0,w,c
  6276  00213E  6E25               	movwf	(___flmul@prod+3)^0,c
  6277  002140                     l3439:
  6278  002140  501B               	movf	___flmul@sign^0,w,c
  6279  002142  1225               	iorwf	(___flmul@prod+3)^0,f,c
  6280  002144  C022  F00F         	movff	___flmul@prod,?___flmul
  6281  002148  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  6282  00214C  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  6283  002150  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  6284  002154                     l961:
  6285  002154  0012               	return		;funcret
  6286  002156                     __end_of___flmul:
  6287                           	opt callstack 0
  6288                           
  6289 ;; *************** function ___flge *****************
  6290 ;; Defined at:
  6291 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  6292 ;; Parameters:    Size  Location     Type
  6293 ;;  ff1             4   39[COMRAM] unsigned char 
  6294 ;;  ff2             4   43[COMRAM] unsigned char 
  6295 ;; Auto vars:     Size  Location     Type
  6296 ;;		None
  6297 ;; Return value:  Size  Location     Type
  6298 ;;		None               void
  6299 ;; Registers used:
  6300 ;;		wreg, status,2, status,0
  6301 ;; Tracked objects:
  6302 ;;		On entry : 0/0
  6303 ;;		On exit  : 0/0
  6304 ;;		Unchanged: 0/0
  6305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6306 ;;      Params:         8       0       0       0       0       0       0       0       0
  6307 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6308 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6309 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6310 ;;Total ram usage:       12 bytes
  6311 ;; Hardware stack levels used:    1
  6312 ;; This function calls:
  6313 ;;		Nothing
  6314 ;; This function is called by:
  6315 ;;		_efgtoa
  6316 ;; This function uses a non-reentrant model
  6317 ;;
  6318                           
  6319                           	psect	text21
  6320  002CEC                     __ptext21:
  6321                           	opt callstack 0
  6322  002CEC                     ___flge:
  6323                           	opt callstack 26
  6324  002CEC  0E00               	movlw	0
  6325  002CEE  1428               	andwf	___flge@ff1^0,w,c
  6326  002CF0  6E30               	movwf	??___flge^0,c
  6327  002CF2  0E00               	movlw	0
  6328  002CF4  1429               	andwf	(___flge@ff1+1)^0,w,c
  6329  002CF6  6E31               	movwf	(??___flge+1)^0,c
  6330  002CF8  0E80               	movlw	128
  6331  002CFA  142A               	andwf	(___flge@ff1+2)^0,w,c
  6332  002CFC  6E32               	movwf	(??___flge+2)^0,c
  6333  002CFE  0E7F               	movlw	127
  6334  002D00  142B               	andwf	(___flge@ff1+3)^0,w,c
  6335  002D02  6E33               	movwf	(??___flge+3)^0,c
  6336  002D04  5030               	movf	??___flge^0,w,c
  6337  002D06  1031               	iorwf	(??___flge+1)^0,w,c
  6338  002D08  1032               	iorwf	(??___flge+2)^0,w,c
  6339  002D0A  1033               	iorwf	(??___flge+3)^0,w,c
  6340  002D0C  A4D8               	btfss	status,2,c
  6341  002D0E  EF8B  F016         	goto	u3921
  6342  002D12  EF8D  F016         	goto	u3920
  6343  002D16                     u3921:
  6344  002D16  EF95  F016         	goto	l3551
  6345  002D1A                     u3920:
  6346  002D1A  0E00               	movlw	0
  6347  002D1C  6E28               	movwf	___flge@ff1^0,c
  6348  002D1E  0E00               	movlw	0
  6349  002D20  6E29               	movwf	(___flge@ff1+1)^0,c
  6350  002D22  0E00               	movlw	0
  6351  002D24  6E2A               	movwf	(___flge@ff1+2)^0,c
  6352  002D26  0E00               	movlw	0
  6353  002D28  6E2B               	movwf	(___flge@ff1+3)^0,c
  6354  002D2A                     l3551:
  6355  002D2A  0E00               	movlw	0
  6356  002D2C  142C               	andwf	___flge@ff2^0,w,c
  6357  002D2E  6E30               	movwf	??___flge^0,c
  6358  002D30  0E00               	movlw	0
  6359  002D32  142D               	andwf	(___flge@ff2+1)^0,w,c
  6360  002D34  6E31               	movwf	(??___flge+1)^0,c
  6361  002D36  0E80               	movlw	128
  6362  002D38  142E               	andwf	(___flge@ff2+2)^0,w,c
  6363  002D3A  6E32               	movwf	(??___flge+2)^0,c
  6364  002D3C  0E7F               	movlw	127
  6365  002D3E  142F               	andwf	(___flge@ff2+3)^0,w,c
  6366  002D40  6E33               	movwf	(??___flge+3)^0,c
  6367  002D42  5030               	movf	??___flge^0,w,c
  6368  002D44  1031               	iorwf	(??___flge+1)^0,w,c
  6369  002D46  1032               	iorwf	(??___flge+2)^0,w,c
  6370  002D48  1033               	iorwf	(??___flge+3)^0,w,c
  6371  002D4A  A4D8               	btfss	status,2,c
  6372  002D4C  EFAA  F016         	goto	u3931
  6373  002D50  EFAC  F016         	goto	u3930
  6374  002D54                     u3931:
  6375  002D54  EFB4  F016         	goto	l3555
  6376  002D58                     u3930:
  6377  002D58  0E00               	movlw	0
  6378  002D5A  6E2C               	movwf	___flge@ff2^0,c
  6379  002D5C  0E00               	movlw	0
  6380  002D5E  6E2D               	movwf	(___flge@ff2+1)^0,c
  6381  002D60  0E00               	movlw	0
  6382  002D62  6E2E               	movwf	(___flge@ff2+2)^0,c
  6383  002D64  0E00               	movlw	0
  6384  002D66  6E2F               	movwf	(___flge@ff2+3)^0,c
  6385  002D68                     l3555:
  6386  002D68  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  6387  002D6A  EFB9  F016         	goto	u3941
  6388  002D6E  EFBB  F016         	goto	u3940
  6389  002D72                     u3941:
  6390  002D72  EFC4  F016         	goto	l3559
  6391  002D76                     u3940:
  6392  002D76  6C28               	negf	___flge@ff1^0,c
  6393  002D78  1E29               	comf	(___flge@ff1+1)^0,f,c
  6394  002D7A  B0D8               	btfsc	status,0,c
  6395  002D7C  2A29               	incf	(___flge@ff1+1)^0,f,c
  6396  002D7E  1E2A               	comf	(___flge@ff1+2)^0,f,c
  6397  002D80  B0D8               	btfsc	status,0,c
  6398  002D82  2A2A               	incf	(___flge@ff1+2)^0,f,c
  6399  002D84  0E80               	movlw	128
  6400  002D86  562B               	subfwb	(___flge@ff1+3)^0,f,c
  6401  002D88                     l3559:
  6402  002D88  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  6403  002D8A  EFC9  F016         	goto	u3951
  6404  002D8E  EFCB  F016         	goto	u3950
  6405  002D92                     u3951:
  6406  002D92  EFD4  F016         	goto	l608
  6407  002D96                     u3950:
  6408  002D96  6C2C               	negf	___flge@ff2^0,c
  6409  002D98  1E2D               	comf	(___flge@ff2+1)^0,f,c
  6410  002D9A  B0D8               	btfsc	status,0,c
  6411  002D9C  2A2D               	incf	(___flge@ff2+1)^0,f,c
  6412  002D9E  1E2E               	comf	(___flge@ff2+2)^0,f,c
  6413  002DA0  B0D8               	btfsc	status,0,c
  6414  002DA2  2A2E               	incf	(___flge@ff2+2)^0,f,c
  6415  002DA4  0E80               	movlw	128
  6416  002DA6  562F               	subfwb	(___flge@ff2+3)^0,f,c
  6417  002DA8                     l608:
  6418  002DA8  0E00               	movlw	0
  6419  002DAA  1A28               	xorwf	___flge@ff1^0,f,c
  6420  002DAC  0E00               	movlw	0
  6421  002DAE  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  6422  002DB0  0E00               	movlw	0
  6423  002DB2  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  6424  002DB4  0E80               	movlw	128
  6425  002DB6  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  6426  002DB8  0E00               	movlw	0
  6427  002DBA  1A2C               	xorwf	___flge@ff2^0,f,c
  6428  002DBC  0E00               	movlw	0
  6429  002DBE  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  6430  002DC0  0E00               	movlw	0
  6431  002DC2  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  6432  002DC4  0E80               	movlw	128
  6433  002DC6  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  6434  002DC8  502C               	movf	___flge@ff2^0,w,c
  6435  002DCA  5C28               	subwf	___flge@ff1^0,w,c
  6436  002DCC  502D               	movf	(___flge@ff2+1)^0,w,c
  6437  002DCE  5829               	subwfb	(___flge@ff1+1)^0,w,c
  6438  002DD0  502E               	movf	(___flge@ff2+2)^0,w,c
  6439  002DD2  582A               	subwfb	(___flge@ff1+2)^0,w,c
  6440  002DD4  502F               	movf	(___flge@ff2+3)^0,w,c
  6441  002DD6  582B               	subwfb	(___flge@ff1+3)^0,w,c
  6442  002DD8  B0D8               	btfsc	status,0,c
  6443  002DDA  EFF1  F016         	goto	u3961
  6444  002DDE  EFF3  F016         	goto	u3960
  6445  002DE2                     u3961:
  6446  002DE2  EFF6  F016         	goto	l3565
  6447  002DE6                     u3960:
  6448  002DE6  90D8               	bcf	status,0,c
  6449  002DE8  EFF7  F016         	goto	l613
  6450  002DEC                     l3565:
  6451  002DEC  80D8               	bsf	status,0,c
  6452  002DEE                     l613:
  6453  002DEE  0012               	return		;funcret
  6454  002DF0                     __end_of___flge:
  6455                           	opt callstack 0
  6456                           
  6457 ;; *************** function ___fleq *****************
  6458 ;; Defined at:
  6459 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  6460 ;; Parameters:    Size  Location     Type
  6461 ;;  ff1             4    0[COMRAM] unsigned char 
  6462 ;;  ff2             4    4[COMRAM] unsigned char 
  6463 ;; Auto vars:     Size  Location     Type
  6464 ;;		None
  6465 ;; Return value:  Size  Location     Type
  6466 ;;		None               void
  6467 ;; Registers used:
  6468 ;;		wreg, status,2, status,0
  6469 ;; Tracked objects:
  6470 ;;		On entry : 0/0
  6471 ;;		On exit  : 0/0
  6472 ;;		Unchanged: 0/0
  6473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6474 ;;      Params:         8       0       0       0       0       0       0       0       0
  6475 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6476 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6477 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6478 ;;Total ram usage:       12 bytes
  6479 ;; Hardware stack levels used:    1
  6480 ;; This function calls:
  6481 ;;		Nothing
  6482 ;; This function is called by:
  6483 ;;		_efgtoa
  6484 ;; This function uses a non-reentrant model
  6485 ;;
  6486                           
  6487                           	psect	text22
  6488  0033B2                     __ptext22:
  6489                           	opt callstack 0
  6490  0033B2                     ___fleq:
  6491                           	opt callstack 26
  6492  0033B2  0E00               	movlw	0
  6493  0033B4  1401               	andwf	___fleq@ff1^0,w,c
  6494  0033B6  6E09               	movwf	??___fleq^0,c
  6495  0033B8  0E00               	movlw	0
  6496  0033BA  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6497  0033BC  6E0A               	movwf	(??___fleq+1)^0,c
  6498  0033BE  0E80               	movlw	128
  6499  0033C0  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6500  0033C2  6E0B               	movwf	(??___fleq+2)^0,c
  6501  0033C4  0E7F               	movlw	127
  6502  0033C6  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6503  0033C8  6E0C               	movwf	(??___fleq+3)^0,c
  6504  0033CA  5009               	movf	??___fleq^0,w,c
  6505  0033CC  100A               	iorwf	(??___fleq+1)^0,w,c
  6506  0033CE  100B               	iorwf	(??___fleq+2)^0,w,c
  6507  0033D0  100C               	iorwf	(??___fleq+3)^0,w,c
  6508  0033D2  A4D8               	btfss	status,2,c
  6509  0033D4  EFEE  F019         	goto	u3891
  6510  0033D8  EFF0  F019         	goto	u3890
  6511  0033DC                     u3891:
  6512  0033DC  EFF8  F019         	goto	l3535
  6513  0033E0                     u3890:
  6514  0033E0  0E00               	movlw	0
  6515  0033E2  6E01               	movwf	___fleq@ff1^0,c
  6516  0033E4  0E00               	movlw	0
  6517  0033E6  6E02               	movwf	(___fleq@ff1+1)^0,c
  6518  0033E8  0E00               	movlw	0
  6519  0033EA  6E03               	movwf	(___fleq@ff1+2)^0,c
  6520  0033EC  0E00               	movlw	0
  6521  0033EE  6E04               	movwf	(___fleq@ff1+3)^0,c
  6522  0033F0                     l3535:
  6523  0033F0  0E00               	movlw	0
  6524  0033F2  1405               	andwf	___fleq@ff2^0,w,c
  6525  0033F4  6E09               	movwf	??___fleq^0,c
  6526  0033F6  0E00               	movlw	0
  6527  0033F8  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6528  0033FA  6E0A               	movwf	(??___fleq+1)^0,c
  6529  0033FC  0E80               	movlw	128
  6530  0033FE  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6531  003400  6E0B               	movwf	(??___fleq+2)^0,c
  6532  003402  0E7F               	movlw	127
  6533  003404  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6534  003406  6E0C               	movwf	(??___fleq+3)^0,c
  6535  003408  5009               	movf	??___fleq^0,w,c
  6536  00340A  100A               	iorwf	(??___fleq+1)^0,w,c
  6537  00340C  100B               	iorwf	(??___fleq+2)^0,w,c
  6538  00340E  100C               	iorwf	(??___fleq+3)^0,w,c
  6539  003410  A4D8               	btfss	status,2,c
  6540  003412  EF0D  F01A         	goto	u3901
  6541  003416  EF0F  F01A         	goto	u3900
  6542  00341A                     u3901:
  6543  00341A  EF17  F01A         	goto	l3539
  6544  00341E                     u3900:
  6545  00341E  0E00               	movlw	0
  6546  003420  6E05               	movwf	___fleq@ff2^0,c
  6547  003422  0E00               	movlw	0
  6548  003424  6E06               	movwf	(___fleq@ff2+1)^0,c
  6549  003426  0E00               	movlw	0
  6550  003428  6E07               	movwf	(___fleq@ff2+2)^0,c
  6551  00342A  0E00               	movlw	0
  6552  00342C  6E08               	movwf	(___fleq@ff2+3)^0,c
  6553  00342E                     l3539:
  6554  00342E  5005               	movf	___fleq@ff2^0,w,c
  6555  003430  1801               	xorwf	___fleq@ff1^0,w,c
  6556  003432  E10F               	bnz	u3910
  6557  003434  5006               	movf	(___fleq@ff2+1)^0,w,c
  6558  003436  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6559  003438  E10C               	bnz	u3910
  6560  00343A  5007               	movf	(___fleq@ff2+2)^0,w,c
  6561  00343C  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6562  00343E  E109               	bnz	u3910
  6563  003440  5008               	movf	(___fleq@ff2+3)^0,w,c
  6564  003442  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6565  003444  B4D8               	btfsc	status,2,c
  6566  003446  EF27  F01A         	goto	u3911
  6567  00344A  EF29  F01A         	goto	u3910
  6568  00344E                     u3911:
  6569  00344E  EF2C  F01A         	goto	l3543
  6570  003452                     u3910:
  6571  003452  90D8               	bcf	status,0,c
  6572  003454  EF2D  F01A         	goto	l602
  6573  003458                     l3543:
  6574  003458  80D8               	bsf	status,0,c
  6575  00345A                     l602:
  6576  00345A  0012               	return		;funcret
  6577  00345C                     __end_of___fleq:
  6578                           	opt callstack 0
  6579                           
  6580 ;; *************** function ___fldiv *****************
  6581 ;; Defined at:
  6582 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  6583 ;; Parameters:    Size  Location     Type
  6584 ;;  b               4   39[COMRAM] unsigned char 
  6585 ;;  a               4   43[COMRAM] unsigned char 
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;  grs             4   58[COMRAM] unsigned long 
  6588 ;;  rem             4   51[COMRAM] unsigned long 
  6589 ;;  new_exp         2   56[COMRAM] short 
  6590 ;;  aexp            1   63[COMRAM] unsigned char 
  6591 ;;  bexp            1   62[COMRAM] unsigned char 
  6592 ;;  sign            1   55[COMRAM] unsigned char 
  6593 ;; Return value:  Size  Location     Type
  6594 ;;                  4   39[COMRAM] unsigned char 
  6595 ;; Registers used:
  6596 ;;		wreg, status,2, status,0
  6597 ;; Tracked objects:
  6598 ;;		On entry : 0/0
  6599 ;;		On exit  : 0/0
  6600 ;;		Unchanged: 0/0
  6601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6602 ;;      Params:         8       0       0       0       0       0       0       0       0
  6603 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6604 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6605 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6606 ;;Total ram usage:       25 bytes
  6607 ;; Hardware stack levels used:    1
  6608 ;; This function calls:
  6609 ;;		Nothing
  6610 ;; This function is called by:
  6611 ;;		_main
  6612 ;;		_efgtoa
  6613 ;; This function uses a non-reentrant model
  6614 ;;
  6615                           
  6616                           	psect	text23
  6617  002156                     __ptext23:
  6618                           	opt callstack 0
  6619  002156                     ___fldiv:
  6620                           	opt callstack 26
  6621  002156  502B               	movf	(___fldiv@b+3)^0,w,c
  6622  002158  0B80               	andlw	128
  6623  00215A  6E38               	movwf	___fldiv@sign^0,c
  6624  00215C  502B               	movf	(___fldiv@b+3)^0,w,c
  6625  00215E  242B               	addwf	(___fldiv@b+3)^0,w,c
  6626  002160  6E3F               	movwf	___fldiv@bexp^0,c
  6627  002162  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  6628  002164  EFB6  F010         	goto	u3351
  6629  002168  EFB8  F010         	goto	u3350
  6630  00216C                     u3351:
  6631  00216C  EFB9  F010         	goto	l3183
  6632  002170                     u3350:
  6633  002170  803F               	bsf	___fldiv@bexp^0,0,c
  6634  002172                     l3183:
  6635  002172  503F               	movf	___fldiv@bexp^0,w,c
  6636  002174  B4D8               	btfsc	status,2,c
  6637  002176  EFBF  F010         	goto	u3361
  6638  00217A  EFC1  F010         	goto	u3360
  6639  00217E                     u3361:
  6640  00217E  EFD6  F010         	goto	l3193
  6641  002182                     u3360:
  6642  002182  283F               	incf	___fldiv@bexp^0,w,c
  6643  002184  A4D8               	btfss	status,2,c
  6644  002186  EFC7  F010         	goto	u3371
  6645  00218A  EFC9  F010         	goto	u3370
  6646  00218E                     u3371:
  6647  00218E  EFD1  F010         	goto	l3189
  6648  002192                     u3370:
  6649  002192  0E00               	movlw	0
  6650  002194  6E28               	movwf	___fldiv@b^0,c
  6651  002196  0E00               	movlw	0
  6652  002198  6E29               	movwf	(___fldiv@b+1)^0,c
  6653  00219A  0E00               	movlw	0
  6654  00219C  6E2A               	movwf	(___fldiv@b+2)^0,c
  6655  00219E  0E00               	movlw	0
  6656  0021A0  6E2B               	movwf	(___fldiv@b+3)^0,c
  6657  0021A2                     l3189:
  6658  0021A2  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  6659  0021A4  0E00               	movlw	0
  6660  0021A6  6E2B               	movwf	(___fldiv@b+3)^0,c
  6661  0021A8  EFDE  F010         	goto	l3195
  6662  0021AC                     l3193:
  6663  0021AC  0E00               	movlw	0
  6664  0021AE  6E28               	movwf	___fldiv@b^0,c
  6665  0021B0  0E00               	movlw	0
  6666  0021B2  6E29               	movwf	(___fldiv@b+1)^0,c
  6667  0021B4  0E00               	movlw	0
  6668  0021B6  6E2A               	movwf	(___fldiv@b+2)^0,c
  6669  0021B8  0E00               	movlw	0
  6670  0021BA  6E2B               	movwf	(___fldiv@b+3)^0,c
  6671  0021BC                     l3195:
  6672  0021BC  502F               	movf	(___fldiv@a+3)^0,w,c
  6673  0021BE  0B80               	andlw	128
  6674  0021C0  1A38               	xorwf	___fldiv@sign^0,f,c
  6675  0021C2  502F               	movf	(___fldiv@a+3)^0,w,c
  6676  0021C4  242F               	addwf	(___fldiv@a+3)^0,w,c
  6677  0021C6  6E40               	movwf	___fldiv@aexp^0,c
  6678  0021C8  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  6679  0021CA  EFE9  F010         	goto	u3381
  6680  0021CE  EFEB  F010         	goto	u3380
  6681  0021D2                     u3381:
  6682  0021D2  EFEC  F010         	goto	l3203
  6683  0021D6                     u3380:
  6684  0021D6  8040               	bsf	___fldiv@aexp^0,0,c
  6685  0021D8                     l3203:
  6686  0021D8  5040               	movf	___fldiv@aexp^0,w,c
  6687  0021DA  B4D8               	btfsc	status,2,c
  6688  0021DC  EFF2  F010         	goto	u3391
  6689  0021E0  EFF4  F010         	goto	u3390
  6690  0021E4                     u3391:
  6691  0021E4  EF09  F011         	goto	l3213
  6692  0021E8                     u3390:
  6693  0021E8  2840               	incf	___fldiv@aexp^0,w,c
  6694  0021EA  A4D8               	btfss	status,2,c
  6695  0021EC  EFFA  F010         	goto	u3401
  6696  0021F0  EFFC  F010         	goto	u3400
  6697  0021F4                     u3401:
  6698  0021F4  EF04  F011         	goto	l3209
  6699  0021F8                     u3400:
  6700  0021F8  0E00               	movlw	0
  6701  0021FA  6E2C               	movwf	___fldiv@a^0,c
  6702  0021FC  0E00               	movlw	0
  6703  0021FE  6E2D               	movwf	(___fldiv@a+1)^0,c
  6704  002200  0E00               	movlw	0
  6705  002202  6E2E               	movwf	(___fldiv@a+2)^0,c
  6706  002204  0E00               	movlw	0
  6707  002206  6E2F               	movwf	(___fldiv@a+3)^0,c
  6708  002208                     l3209:
  6709  002208  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  6710  00220A  0E00               	movlw	0
  6711  00220C  6E2F               	movwf	(___fldiv@a+3)^0,c
  6712  00220E  EF11  F011         	goto	l3215
  6713  002212                     l3213:
  6714  002212  0E00               	movlw	0
  6715  002214  6E2C               	movwf	___fldiv@a^0,c
  6716  002216  0E00               	movlw	0
  6717  002218  6E2D               	movwf	(___fldiv@a+1)^0,c
  6718  00221A  0E00               	movlw	0
  6719  00221C  6E2E               	movwf	(___fldiv@a+2)^0,c
  6720  00221E  0E00               	movlw	0
  6721  002220  6E2F               	movwf	(___fldiv@a+3)^0,c
  6722  002222                     l3215:
  6723  002222  502C               	movf	___fldiv@a^0,w,c
  6724  002224  102D               	iorwf	(___fldiv@a+1)^0,w,c
  6725  002226  102E               	iorwf	(___fldiv@a+2)^0,w,c
  6726  002228  102F               	iorwf	(___fldiv@a+3)^0,w,c
  6727  00222A  A4D8               	btfss	status,2,c
  6728  00222C  EF1A  F011         	goto	u3411
  6729  002230  EF1C  F011         	goto	u3410
  6730  002234                     u3411:
  6731  002234  EF34  F011         	goto	l3227
  6732  002238                     u3410:
  6733  002238  0E00               	movlw	0
  6734  00223A  6E28               	movwf	___fldiv@b^0,c
  6735  00223C  0E00               	movlw	0
  6736  00223E  6E29               	movwf	(___fldiv@b+1)^0,c
  6737  002240  0E00               	movlw	0
  6738  002242  6E2A               	movwf	(___fldiv@b+2)^0,c
  6739  002244  0E00               	movlw	0
  6740  002246  6E2B               	movwf	(___fldiv@b+3)^0,c
  6741  002248  0E80               	movlw	128
  6742  00224A  122A               	iorwf	(___fldiv@b+2)^0,f,c
  6743  00224C  0E7F               	movlw	127
  6744  00224E  122B               	iorwf	(___fldiv@b+3)^0,f,c
  6745  002250                     l3221:
  6746  002250  5038               	movf	___fldiv@sign^0,w,c
  6747  002252  122B               	iorwf	(___fldiv@b+3)^0,f,c
  6748  002254  C028  F028         	movff	___fldiv@b,?___fldiv
  6749  002258  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  6750  00225C  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  6751  002260  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  6752  002264  EF77  F012         	goto	l925
  6753  002268                     l3227:
  6754  002268  503F               	movf	___fldiv@bexp^0,w,c
  6755  00226A  A4D8               	btfss	status,2,c
  6756  00226C  EF3A  F011         	goto	u3421
  6757  002270  EF3C  F011         	goto	u3420
  6758  002274                     u3421:
  6759  002274  EF46  F011         	goto	l3235
  6760  002278                     u3420:
  6761  002278  0E00               	movlw	0
  6762  00227A  6E28               	movwf	?___fldiv^0,c
  6763  00227C  0E00               	movlw	0
  6764  00227E  6E29               	movwf	(?___fldiv+1)^0,c
  6765  002280  0E00               	movlw	0
  6766  002282  6E2A               	movwf	(?___fldiv+2)^0,c
  6767  002284  0E00               	movlw	0
  6768  002286  6E2B               	movwf	(?___fldiv+3)^0,c
  6769  002288  EF77  F012         	goto	l925
  6770  00228C                     l3235:
  6771  00228C  5040               	movf	___fldiv@aexp^0,w,c
  6772  00228E  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  6773  002292  6A31               	clrf	(??___fldiv+1)^0,c
  6774  002294  5E30               	subwf	??___fldiv^0,f,c
  6775  002296  0E00               	movlw	0
  6776  002298  5A31               	subwfb	(??___fldiv+1)^0,f,c
  6777  00229A  0E7F               	movlw	127
  6778  00229C  2430               	addwf	??___fldiv^0,w,c
  6779  00229E  6E39               	movwf	___fldiv@new_exp^0,c
  6780  0022A0  0E00               	movlw	0
  6781  0022A2  2031               	addwfc	(??___fldiv+1)^0,w,c
  6782  0022A4  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6783  0022A6  C028  F034         	movff	___fldiv@b,___fldiv@rem
  6784  0022AA  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  6785  0022AE  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  6786  0022B2  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  6787  0022B6  0E00               	movlw	0
  6788  0022B8  6E28               	movwf	___fldiv@b^0,c
  6789  0022BA  0E00               	movlw	0
  6790  0022BC  6E29               	movwf	(___fldiv@b+1)^0,c
  6791  0022BE  0E00               	movlw	0
  6792  0022C0  6E2A               	movwf	(___fldiv@b+2)^0,c
  6793  0022C2  0E00               	movlw	0
  6794  0022C4  6E2B               	movwf	(___fldiv@b+3)^0,c
  6795  0022C6  0E00               	movlw	0
  6796  0022C8  6E3B               	movwf	___fldiv@grs^0,c
  6797  0022CA  0E00               	movlw	0
  6798  0022CC  6E3C               	movwf	(___fldiv@grs+1)^0,c
  6799  0022CE  0E00               	movlw	0
  6800  0022D0  6E3D               	movwf	(___fldiv@grs+2)^0,c
  6801  0022D2  0E00               	movlw	0
  6802  0022D4  6E3E               	movwf	(___fldiv@grs+3)^0,c
  6803  0022D6  0E00               	movlw	0
  6804  0022D8  6E40               	movwf	___fldiv@aexp^0,c
  6805  0022DA  EFA7  F011         	goto	l927
  6806  0022DE                     l3245:
  6807  0022DE  5040               	movf	___fldiv@aexp^0,w,c
  6808  0022E0  B4D8               	btfsc	status,2,c
  6809  0022E2  EF75  F011         	goto	u3431
  6810  0022E6  EF77  F011         	goto	u3430
  6811  0022EA                     u3431:
  6812  0022EA  EF8E  F011         	goto	l3253
  6813  0022EE                     u3430:
  6814  0022EE  90D8               	bcf	status,0,c
  6815  0022F0  3634               	rlcf	___fldiv@rem^0,f,c
  6816  0022F2  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  6817  0022F4  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  6818  0022F6  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  6819  0022F8  90D8               	bcf	status,0,c
  6820  0022FA  3628               	rlcf	___fldiv@b^0,f,c
  6821  0022FC  3629               	rlcf	(___fldiv@b+1)^0,f,c
  6822  0022FE  362A               	rlcf	(___fldiv@b+2)^0,f,c
  6823  002300  362B               	rlcf	(___fldiv@b+3)^0,f,c
  6824  002302  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6825  002304  EF86  F011         	goto	u3441
  6826  002308  EF88  F011         	goto	u3440
  6827  00230C                     u3441:
  6828  00230C  EF89  F011         	goto	l930
  6829  002310                     u3440:
  6830  002310  8028               	bsf	___fldiv@b^0,0,c
  6831  002312                     l930:
  6832  002312  90D8               	bcf	status,0,c
  6833  002314  363B               	rlcf	___fldiv@grs^0,f,c
  6834  002316  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  6835  002318  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  6836  00231A  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  6837  00231C                     l3253:
  6838  00231C  502C               	movf	___fldiv@a^0,w,c
  6839  00231E  5C34               	subwf	___fldiv@rem^0,w,c
  6840  002320  502D               	movf	(___fldiv@a+1)^0,w,c
  6841  002322  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  6842  002324  502E               	movf	(___fldiv@a+2)^0,w,c
  6843  002326  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  6844  002328  502F               	movf	(___fldiv@a+3)^0,w,c
  6845  00232A  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  6846  00232C  A0D8               	btfss	status,0,c
  6847  00232E  EF9B  F011         	goto	u3451
  6848  002332  EF9D  F011         	goto	u3450
  6849  002336                     u3451:
  6850  002336  EFA6  F011         	goto	l3259
  6851  00233A                     u3450:
  6852  00233A  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  6853  00233C  502C               	movf	___fldiv@a^0,w,c
  6854  00233E  5E34               	subwf	___fldiv@rem^0,f,c
  6855  002340  502D               	movf	(___fldiv@a+1)^0,w,c
  6856  002342  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  6857  002344  502E               	movf	(___fldiv@a+2)^0,w,c
  6858  002346  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  6859  002348  502F               	movf	(___fldiv@a+3)^0,w,c
  6860  00234A  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  6861  00234C                     l3259:
  6862  00234C  2A40               	incf	___fldiv@aexp^0,f,c
  6863  00234E                     l927:
  6864  00234E  0E19               	movlw	25
  6865  002350  6440               	cpfsgt	___fldiv@aexp^0,c
  6866  002352  EFAD  F011         	goto	u3461
  6867  002356  EFAF  F011         	goto	u3460
  6868  00235A                     u3461:
  6869  00235A  EF6F  F011         	goto	l3245
  6870  00235E                     u3460:
  6871  00235E  5034               	movf	___fldiv@rem^0,w,c
  6872  002360  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  6873  002362  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  6874  002364  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  6875  002366  B4D8               	btfsc	status,2,c
  6876  002368  EFB8  F011         	goto	u3471
  6877  00236C  EFBA  F011         	goto	u3470
  6878  002370                     u3471:
  6879  002370  EFD2  F011         	goto	l3271
  6880  002374                     u3470:
  6881  002374  803B               	bsf	___fldiv@grs^0,0,c
  6882  002376  EFD2  F011         	goto	l3271
  6883  00237A                     l3265:
  6884  00237A  90D8               	bcf	status,0,c
  6885  00237C  3628               	rlcf	___fldiv@b^0,f,c
  6886  00237E  3629               	rlcf	(___fldiv@b+1)^0,f,c
  6887  002380  362A               	rlcf	(___fldiv@b+2)^0,f,c
  6888  002382  362B               	rlcf	(___fldiv@b+3)^0,f,c
  6889  002384  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6890  002386  EFC7  F011         	goto	u3481
  6891  00238A  EFC9  F011         	goto	u3480
  6892  00238E                     u3481:
  6893  00238E  EFCA  F011         	goto	l936
  6894  002392                     u3480:
  6895  002392  8028               	bsf	___fldiv@b^0,0,c
  6896  002394                     l936:
  6897  002394  90D8               	bcf	status,0,c
  6898  002396  363B               	rlcf	___fldiv@grs^0,f,c
  6899  002398  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  6900  00239A  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  6901  00239C  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  6902  00239E  0639               	decf	___fldiv@new_exp^0,f,c
  6903  0023A0  A0D8               	btfss	status,0,c
  6904  0023A2  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  6905  0023A4                     l3271:
  6906  0023A4  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  6907  0023A6  EFD7  F011         	goto	u3491
  6908  0023AA  EFD9  F011         	goto	u3490
  6909  0023AE                     u3491:
  6910  0023AE  EFBD  F011         	goto	l3265
  6911  0023B2                     u3490:
  6912  0023B2  0E00               	movlw	0
  6913  0023B4  6E40               	movwf	___fldiv@aexp^0,c
  6914  0023B6  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6915  0023B8  EFE0  F011         	goto	u3501
  6916  0023BC  EFE2  F011         	goto	u3500
  6917  0023C0                     u3501:
  6918  0023C0  EF06  F012         	goto	l938
  6919  0023C4                     u3500:
  6920  0023C4  0EFF               	movlw	255
  6921  0023C6  143B               	andwf	___fldiv@grs^0,w,c
  6922  0023C8  6E30               	movwf	??___fldiv^0,c
  6923  0023CA  0EFF               	movlw	255
  6924  0023CC  143C               	andwf	(___fldiv@grs+1)^0,w,c
  6925  0023CE  6E31               	movwf	(??___fldiv+1)^0,c
  6926  0023D0  0EFF               	movlw	255
  6927  0023D2  143D               	andwf	(___fldiv@grs+2)^0,w,c
  6928  0023D4  6E32               	movwf	(??___fldiv+2)^0,c
  6929  0023D6  0E7F               	movlw	127
  6930  0023D8  143E               	andwf	(___fldiv@grs+3)^0,w,c
  6931  0023DA  6E33               	movwf	(??___fldiv+3)^0,c
  6932  0023DC  5030               	movf	??___fldiv^0,w,c
  6933  0023DE  1031               	iorwf	(??___fldiv+1)^0,w,c
  6934  0023E0  1032               	iorwf	(??___fldiv+2)^0,w,c
  6935  0023E2  1033               	iorwf	(??___fldiv+3)^0,w,c
  6936  0023E4  B4D8               	btfsc	status,2,c
  6937  0023E6  EFF7  F011         	goto	u3511
  6938  0023EA  EFF9  F011         	goto	u3510
  6939  0023EE                     u3511:
  6940  0023EE  EFFD  F011         	goto	l939
  6941  0023F2                     u3510:
  6942  0023F2                     l3279:
  6943  0023F2  0E01               	movlw	1
  6944  0023F4  6E40               	movwf	___fldiv@aexp^0,c
  6945  0023F6  EF06  F012         	goto	l938
  6946  0023FA                     l939:
  6947  0023FA  A028               	btfss	___fldiv@b^0,0,c
  6948  0023FC  EF02  F012         	goto	u3521
  6949  002400  EF04  F012         	goto	u3520
  6950  002404                     u3521:
  6951  002404  EF06  F012         	goto	l938
  6952  002408                     u3520:
  6953  002408  EFF9  F011         	goto	l3279
  6954  00240C                     l938:
  6955  00240C  5040               	movf	___fldiv@aexp^0,w,c
  6956  00240E  B4D8               	btfsc	status,2,c
  6957  002410  EF0C  F012         	goto	u3531
  6958  002414  EF0E  F012         	goto	u3530
  6959  002418                     u3531:
  6960  002418  EF32  F012         	goto	l3291
  6961  00241C                     u3530:
  6962  00241C  0E01               	movlw	1
  6963  00241E  2628               	addwf	___fldiv@b^0,f,c
  6964  002420  0E00               	movlw	0
  6965  002422  2229               	addwfc	(___fldiv@b+1)^0,f,c
  6966  002424  222A               	addwfc	(___fldiv@b+2)^0,f,c
  6967  002426  222B               	addwfc	(___fldiv@b+3)^0,f,c
  6968  002428  A02B               	btfss	(___fldiv@b+3)^0,0,c
  6969  00242A  EF19  F012         	goto	u3541
  6970  00242E  EF1B  F012         	goto	u3540
  6971  002432                     u3541:
  6972  002432  EF32  F012         	goto	l3291
  6973  002436                     u3540:
  6974  002436  C028  F030         	movff	___fldiv@b,??___fldiv
  6975  00243A  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  6976  00243E  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  6977  002442  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  6978  002446  3433               	rlcf	(??___fldiv+3)^0,w,c
  6979  002448  3233               	rrcf	(??___fldiv+3)^0,f,c
  6980  00244A  3232               	rrcf	(??___fldiv+2)^0,f,c
  6981  00244C  3231               	rrcf	(??___fldiv+1)^0,f,c
  6982  00244E  3230               	rrcf	??___fldiv^0,f,c
  6983  002450  C030  F028         	movff	??___fldiv,___fldiv@b
  6984  002454  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  6985  002458  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  6986  00245C  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  6987  002460  4A39               	infsnz	___fldiv@new_exp^0,f,c
  6988  002462  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  6989  002464                     l3291:
  6990  002464  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6991  002466  EF3D  F012         	goto	u3551
  6992  00246A  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  6993  00246C  E108               	bnz	u3550
  6994  00246E  2839               	incf	___fldiv@new_exp^0,w,c
  6995  002470  A0D8               	btfss	status,0,c
  6996  002472  EF3D  F012         	goto	u3551
  6997  002476  EF3F  F012         	goto	u3550
  6998  00247A                     u3551:
  6999  00247A  EF4A  F012         	goto	l3295
  7000  00247E                     u3550:
  7001  00247E  0E00               	movlw	0
  7002  002480  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7003  002482  6839               	setf	___fldiv@new_exp^0,c
  7004  002484  0E00               	movlw	0
  7005  002486  6E28               	movwf	___fldiv@b^0,c
  7006  002488  0E00               	movlw	0
  7007  00248A  6E29               	movwf	(___fldiv@b+1)^0,c
  7008  00248C  0E00               	movlw	0
  7009  00248E  6E2A               	movwf	(___fldiv@b+2)^0,c
  7010  002490  0E00               	movlw	0
  7011  002492  6E2B               	movwf	(___fldiv@b+3)^0,c
  7012  002494                     l3295:
  7013  002494  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7014  002496  EF57  F012         	goto	u3560
  7015  00249A  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  7016  00249C  E106               	bnz	u3561
  7017  00249E  0439               	decf	___fldiv@new_exp^0,w,c
  7018  0024A0  B0D8               	btfsc	status,0,c
  7019  0024A2  EF55  F012         	goto	u3561
  7020  0024A6  EF57  F012         	goto	u3560
  7021  0024AA                     u3561:
  7022  0024AA  EF65  F012         	goto	l3299
  7023  0024AE                     u3560:
  7024  0024AE  0E00               	movlw	0
  7025  0024B0  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7026  0024B2  0E00               	movlw	0
  7027  0024B4  6E39               	movwf	___fldiv@new_exp^0,c
  7028  0024B6  0E00               	movlw	0
  7029  0024B8  6E28               	movwf	___fldiv@b^0,c
  7030  0024BA  0E00               	movlw	0
  7031  0024BC  6E29               	movwf	(___fldiv@b+1)^0,c
  7032  0024BE  0E00               	movlw	0
  7033  0024C0  6E2A               	movwf	(___fldiv@b+2)^0,c
  7034  0024C2  0E00               	movlw	0
  7035  0024C4  6E2B               	movwf	(___fldiv@b+3)^0,c
  7036  0024C6  0E00               	movlw	0
  7037  0024C8  6E38               	movwf	___fldiv@sign^0,c
  7038  0024CA                     l3299:
  7039  0024CA  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  7040  0024CE  A03F               	btfss	___fldiv@bexp^0,0,c
  7041  0024D0  EF6C  F012         	goto	u3571
  7042  0024D4  EF6E  F012         	goto	u3570
  7043  0024D8                     u3571:
  7044  0024D8  EF71  F012         	goto	l3305
  7045  0024DC                     u3570:
  7046  0024DC  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  7047  0024DE  EF72  F012         	goto	l3307
  7048  0024E2                     l3305:
  7049  0024E2  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  7050  0024E4                     l3307:
  7051  0024E4  90D8               	bcf	status,0,c
  7052  0024E6  303F               	rrcf	___fldiv@bexp^0,w,c
  7053  0024E8  6E2B               	movwf	(___fldiv@b+3)^0,c
  7054  0024EA  EF28  F011         	goto	l3221
  7055  0024EE                     l925:
  7056  0024EE  0012               	return		;funcret
  7057  0024F0                     __end_of___fldiv:
  7058                           	opt callstack 0
  7059                           
  7060 ;; *************** function ___awmod *****************
  7061 ;; Defined at:
  7062 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  7063 ;; Parameters:    Size  Location     Type
  7064 ;;  dividend        2    0[COMRAM] int 
  7065 ;;  divisor         2    2[COMRAM] int 
  7066 ;; Auto vars:     Size  Location     Type
  7067 ;;  sign            1    5[COMRAM] unsigned char 
  7068 ;;  counter         1    4[COMRAM] unsigned char 
  7069 ;; Return value:  Size  Location     Type
  7070 ;;                  2    0[COMRAM] int 
  7071 ;; Registers used:
  7072 ;;		wreg, status,2, status,0
  7073 ;; Tracked objects:
  7074 ;;		On entry : 0/0
  7075 ;;		On exit  : 0/0
  7076 ;;		Unchanged: 0/0
  7077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7078 ;;      Params:         4       0       0       0       0       0       0       0       0
  7079 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7080 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7081 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7082 ;;Total ram usage:        6 bytes
  7083 ;; Hardware stack levels used:    1
  7084 ;; This function calls:
  7085 ;;		Nothing
  7086 ;; This function is called by:
  7087 ;;		_efgtoa
  7088 ;; This function uses a non-reentrant model
  7089 ;;
  7090                           
  7091                           	psect	text24
  7092  003302                     __ptext24:
  7093                           	opt callstack 0
  7094  003302                     ___awmod:
  7095                           	opt callstack 26
  7096  003302  0E00               	movlw	0
  7097  003304  6E06               	movwf	___awmod@sign^0,c
  7098  003306  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7099  003308  EF8A  F019         	goto	u3830
  7100  00330C  EF88  F019         	goto	u3831
  7101  003310                     u3831:
  7102  003310  EF90  F019         	goto	l3503
  7103  003314                     u3830:
  7104  003314  6C01               	negf	___awmod@dividend^0,c
  7105  003316  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7106  003318  B0D8               	btfsc	status,0,c
  7107  00331A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7108  00331C  0E01               	movlw	1
  7109  00331E  6E06               	movwf	___awmod@sign^0,c
  7110  003320                     l3503:
  7111  003320  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7112  003322  EF97  F019         	goto	u3840
  7113  003326  EF95  F019         	goto	u3841
  7114  00332A                     u3841:
  7115  00332A  EF9B  F019         	goto	l3507
  7116  00332E                     u3840:
  7117  00332E  6C03               	negf	___awmod@divisor^0,c
  7118  003330  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7119  003332  B0D8               	btfsc	status,0,c
  7120  003334  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7121  003336                     l3507:
  7122  003336  5003               	movf	___awmod@divisor^0,w,c
  7123  003338  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7124  00333A  B4D8               	btfsc	status,2,c
  7125  00333C  EFA2  F019         	goto	u3851
  7126  003340  EFA4  F019         	goto	u3850
  7127  003344                     u3851:
  7128  003344  EFC8  F019         	goto	l3523
  7129  003348                     u3850:
  7130  003348  0E01               	movlw	1
  7131  00334A  6E05               	movwf	___awmod@counter^0,c
  7132  00334C  EFAC  F019         	goto	l3513
  7133  003350                     l3511:
  7134  003350  90D8               	bcf	status,0,c
  7135  003352  3603               	rlcf	___awmod@divisor^0,f,c
  7136  003354  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7137  003356  2A05               	incf	___awmod@counter^0,f,c
  7138  003358                     l3513:
  7139  003358  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7140  00335A  EFB1  F019         	goto	u3861
  7141  00335E  EFB3  F019         	goto	u3860
  7142  003362                     u3861:
  7143  003362  EFA8  F019         	goto	l3511
  7144  003366                     u3860:
  7145  003366                     l3515:
  7146  003366  5003               	movf	___awmod@divisor^0,w,c
  7147  003368  5C01               	subwf	___awmod@dividend^0,w,c
  7148  00336A  5004               	movf	(___awmod@divisor+1)^0,w,c
  7149  00336C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7150  00336E  A0D8               	btfss	status,0,c
  7151  003370  EFBC  F019         	goto	u3871
  7152  003374  EFBE  F019         	goto	u3870
  7153  003378                     u3871:
  7154  003378  EFC2  F019         	goto	l3519
  7155  00337C                     u3870:
  7156  00337C  5003               	movf	___awmod@divisor^0,w,c
  7157  00337E  5E01               	subwf	___awmod@dividend^0,f,c
  7158  003380  5004               	movf	(___awmod@divisor+1)^0,w,c
  7159  003382  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7160  003384                     l3519:
  7161  003384  90D8               	bcf	status,0,c
  7162  003386  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7163  003388  3203               	rrcf	___awmod@divisor^0,f,c
  7164  00338A  2E05               	decfsz	___awmod@counter^0,f,c
  7165  00338C  EFB3  F019         	goto	l3515
  7166  003390                     l3523:
  7167  003390  5006               	movf	___awmod@sign^0,w,c
  7168  003392  B4D8               	btfsc	status,2,c
  7169  003394  EFCE  F019         	goto	u3881
  7170  003398  EFD0  F019         	goto	u3880
  7171  00339C                     u3881:
  7172  00339C  EFD4  F019         	goto	l3527
  7173  0033A0                     u3880:
  7174  0033A0  6C01               	negf	___awmod@dividend^0,c
  7175  0033A2  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7176  0033A4  B0D8               	btfsc	status,0,c
  7177  0033A6  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7178  0033A8                     l3527:
  7179  0033A8  C001  F001         	movff	___awmod@dividend,?___awmod
  7180  0033AC  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7181  0033B0  0012               	return		;funcret
  7182  0033B2                     __end_of___awmod:
  7183                           	opt callstack 0
  7184                           
  7185 ;; *************** function ___awdiv *****************
  7186 ;; Defined at:
  7187 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  7188 ;; Parameters:    Size  Location     Type
  7189 ;;  dividend        2    0[COMRAM] int 
  7190 ;;  divisor         2    2[COMRAM] int 
  7191 ;; Auto vars:     Size  Location     Type
  7192 ;;  quotient        2    6[COMRAM] int 
  7193 ;;  sign            1    5[COMRAM] unsigned char 
  7194 ;;  counter         1    4[COMRAM] unsigned char 
  7195 ;; Return value:  Size  Location     Type
  7196 ;;                  2    0[COMRAM] int 
  7197 ;; Registers used:
  7198 ;;		wreg, status,2, status,0
  7199 ;; Tracked objects:
  7200 ;;		On entry : 0/0
  7201 ;;		On exit  : 0/0
  7202 ;;		Unchanged: 0/0
  7203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7204 ;;      Params:         4       0       0       0       0       0       0       0       0
  7205 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7206 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7207 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7208 ;;Total ram usage:        8 bytes
  7209 ;; Hardware stack levels used:    1
  7210 ;; This function calls:
  7211 ;;		Nothing
  7212 ;; This function is called by:
  7213 ;;		_efgtoa
  7214 ;; This function uses a non-reentrant model
  7215 ;;
  7216                           
  7217                           	psect	text25
  7218  00323E                     __ptext25:
  7219                           	opt callstack 0
  7220  00323E                     ___awdiv:
  7221                           	opt callstack 26
  7222  00323E  0E00               	movlw	0
  7223  003240  6E06               	movwf	___awdiv@sign^0,c
  7224  003242  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7225  003244  EF28  F019         	goto	u3770
  7226  003248  EF26  F019         	goto	u3771
  7227  00324C                     u3771:
  7228  00324C  EF2E  F019         	goto	l3459
  7229  003250                     u3770:
  7230  003250  6C03               	negf	___awdiv@divisor^0,c
  7231  003252  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7232  003254  B0D8               	btfsc	status,0,c
  7233  003256  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7234  003258  0E01               	movlw	1
  7235  00325A  6E06               	movwf	___awdiv@sign^0,c
  7236  00325C                     l3459:
  7237  00325C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7238  00325E  EF35  F019         	goto	u3780
  7239  003262  EF33  F019         	goto	u3781
  7240  003266                     u3781:
  7241  003266  EF3B  F019         	goto	l3465
  7242  00326A                     u3780:
  7243  00326A  6C01               	negf	___awdiv@dividend^0,c
  7244  00326C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7245  00326E  B0D8               	btfsc	status,0,c
  7246  003270  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7247  003272  0E01               	movlw	1
  7248  003274  1A06               	xorwf	___awdiv@sign^0,f,c
  7249  003276                     l3465:
  7250  003276  0E00               	movlw	0
  7251  003278  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7252  00327A  0E00               	movlw	0
  7253  00327C  6E07               	movwf	___awdiv@quotient^0,c
  7254  00327E  5003               	movf	___awdiv@divisor^0,w,c
  7255  003280  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7256  003282  B4D8               	btfsc	status,2,c
  7257  003284  EF46  F019         	goto	u3791
  7258  003288  EF48  F019         	goto	u3790
  7259  00328C                     u3791:
  7260  00328C  EF70  F019         	goto	l3487
  7261  003290                     u3790:
  7262  003290  0E01               	movlw	1
  7263  003292  6E05               	movwf	___awdiv@counter^0,c
  7264  003294  EF50  F019         	goto	l3473
  7265  003298                     l3471:
  7266  003298  90D8               	bcf	status,0,c
  7267  00329A  3603               	rlcf	___awdiv@divisor^0,f,c
  7268  00329C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7269  00329E  2A05               	incf	___awdiv@counter^0,f,c
  7270  0032A0                     l3473:
  7271  0032A0  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7272  0032A2  EF55  F019         	goto	u3801
  7273  0032A6  EF57  F019         	goto	u3800
  7274  0032AA                     u3801:
  7275  0032AA  EF4C  F019         	goto	l3471
  7276  0032AE                     u3800:
  7277  0032AE                     l3475:
  7278  0032AE  90D8               	bcf	status,0,c
  7279  0032B0  3607               	rlcf	___awdiv@quotient^0,f,c
  7280  0032B2  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7281  0032B4  5003               	movf	___awdiv@divisor^0,w,c
  7282  0032B6  5C01               	subwf	___awdiv@dividend^0,w,c
  7283  0032B8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7284  0032BA  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7285  0032BC  A0D8               	btfss	status,0,c
  7286  0032BE  EF63  F019         	goto	u3811
  7287  0032C2  EF65  F019         	goto	u3810
  7288  0032C6                     u3811:
  7289  0032C6  EF6A  F019         	goto	l3483
  7290  0032CA                     u3810:
  7291  0032CA  5003               	movf	___awdiv@divisor^0,w,c
  7292  0032CC  5E01               	subwf	___awdiv@dividend^0,f,c
  7293  0032CE  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7294  0032D0  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7295  0032D2  8007               	bsf	___awdiv@quotient^0,0,c
  7296  0032D4                     l3483:
  7297  0032D4  90D8               	bcf	status,0,c
  7298  0032D6  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7299  0032D8  3203               	rrcf	___awdiv@divisor^0,f,c
  7300  0032DA  2E05               	decfsz	___awdiv@counter^0,f,c
  7301  0032DC  EF57  F019         	goto	l3475
  7302  0032E0                     l3487:
  7303  0032E0  5006               	movf	___awdiv@sign^0,w,c
  7304  0032E2  B4D8               	btfsc	status,2,c
  7305  0032E4  EF76  F019         	goto	u3821
  7306  0032E8  EF78  F019         	goto	u3820
  7307  0032EC                     u3821:
  7308  0032EC  EF7C  F019         	goto	l3491
  7309  0032F0                     u3820:
  7310  0032F0  6C07               	negf	___awdiv@quotient^0,c
  7311  0032F2  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7312  0032F4  B0D8               	btfsc	status,0,c
  7313  0032F6  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7314  0032F8                     l3491:
  7315  0032F8  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7316  0032FC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7317  003300  0012               	return		;funcret
  7318  003302                     __end_of___awdiv:
  7319                           	opt callstack 0
  7320                           
  7321 ;; *************** function _atoi *****************
  7322 ;; Defined at:
  7323 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7326 ;;		 -> STR_4(5), 
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;  n               2   20[COMRAM] int 
  7329 ;;  neg             2   13[COMRAM] int 
  7330 ;; Return value:  Size  Location     Type
  7331 ;;                  2    7[COMRAM] int 
  7332 ;; Registers used:
  7333 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7334 ;; Tracked objects:
  7335 ;;		On entry : 0/0
  7336 ;;		On exit  : 0/0
  7337 ;;		Unchanged: 0/0
  7338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7339 ;;      Params:         2       0       0       0       0       0       0       0       0
  7340 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7341 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7342 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7343 ;;Total ram usage:       15 bytes
  7344 ;; Hardware stack levels used:    1
  7345 ;; Hardware stack levels required when called:    1
  7346 ;; This function calls:
  7347 ;;		___wmul
  7348 ;;		_isdigit
  7349 ;;		_isspace
  7350 ;; This function is called by:
  7351 ;;		_vfpfcnvrt
  7352 ;; This function uses a non-reentrant model
  7353 ;;
  7354                           
  7355                           	psect	text26
  7356  002A56                     __ptext26:
  7357                           	opt callstack 0
  7358  002A56                     _atoi:
  7359                           	opt callstack 26
  7360  002A56  0E00               	movlw	0
  7361  002A58  6E16               	movwf	(atoi@n+1)^0,c
  7362  002A5A  0E00               	movlw	0
  7363  002A5C  6E15               	movwf	atoi@n^0,c
  7364  002A5E  0E00               	movlw	0
  7365  002A60  6E0F               	movwf	(atoi@neg+1)^0,c
  7366  002A62  0E00               	movlw	0
  7367  002A64  6E0E               	movwf	atoi@neg^0,c
  7368  002A66  EF37  F015         	goto	l3937
  7369  002A6A                     l3935:
  7370  002A6A  4A08               	infsnz	atoi@s^0,f,c
  7371  002A6C  2A09               	incf	(atoi@s+1)^0,f,c
  7372  002A6E                     l3937:
  7373  002A6E  0E01               	movlw	1
  7374  002A70  6E14               	movwf	_atoi$979^0,c
  7375  002A72  C008  FFF6         	movff	atoi@s,tblptrl
  7376  002A76  C009  FFF7         	movff	atoi@s+1,tblptrh
  7377  002A7A                     	if	0	;tblptru may be non-zero
  7378  002A7A                     	endif
  7379  002A7A                     	if	0	;tblptru may be non-zero
  7380  002A7A                     	endif
  7381  002A7A  0008               	tblrd		*
  7382  002A7C  50F5               	movf	tablat,w,c
  7383  002A7E  0A20               	xorlw	32
  7384  002A80  B4D8               	btfsc	status,2,c
  7385  002A82  EF45  F015         	goto	u4591
  7386  002A86  EF47  F015         	goto	u4590
  7387  002A8A                     u4591:
  7388  002A8A  EF64  F015         	goto	l3945
  7389  002A8E                     u4590:
  7390  002A8E  0EF7               	movlw	247
  7391  002A90  6E0A               	movwf	??_atoi^0,c
  7392  002A92  0EFF               	movlw	255
  7393  002A94  6E0B               	movwf	(??_atoi+1)^0,c
  7394  002A96  C008  FFF6         	movff	atoi@s,tblptrl
  7395  002A9A  C009  FFF7         	movff	atoi@s+1,tblptrh
  7396  002A9E                     	if	0	;tblptru may be non-zero
  7397  002A9E                     	endif
  7398  002A9E                     	if	0	;tblptru may be non-zero
  7399  002A9E                     	endif
  7400  002A9E  0008               	tblrd		*
  7401  002AA0  50F5               	movf	tablat,w,c
  7402  002AA2  6E0C               	movwf	(??_atoi+2)^0,c
  7403  002AA4  6A0D               	clrf	(??_atoi+3)^0,c
  7404  002AA6  500A               	movf	??_atoi^0,w,c
  7405  002AA8  260C               	addwf	(??_atoi+2)^0,f,c
  7406  002AAA  500B               	movf	(??_atoi+1)^0,w,c
  7407  002AAC  220D               	addwfc	(??_atoi+3)^0,f,c
  7408  002AAE  500D               	movf	(??_atoi+3)^0,w,c
  7409  002AB0  E109               	bnz	u4600
  7410  002AB2  0E05               	movlw	5
  7411  002AB4  5C0C               	subwf	(??_atoi+2)^0,w,c
  7412  002AB6  A0D8               	btfss	status,0,c
  7413  002AB8  EF60  F015         	goto	u4601
  7414  002ABC  EF62  F015         	goto	u4600
  7415  002AC0                     u4601:
  7416  002AC0  EF64  F015         	goto	l3945
  7417  002AC4                     u4600:
  7418  002AC4  0E00               	movlw	0
  7419  002AC6  6E14               	movwf	_atoi$979^0,c
  7420  002AC8                     l3945:
  7421  002AC8  C014  F010         	movff	_atoi$979,_atoi$978
  7422  002ACC  6A11               	clrf	(_atoi$978+1)^0,c
  7423  002ACE  5010               	movf	_atoi$978^0,w,c
  7424  002AD0  1011               	iorwf	(_atoi$978+1)^0,w,c
  7425  002AD2  A4D8               	btfss	status,2,c
  7426  002AD4  EF6E  F015         	goto	u4611
  7427  002AD8  EF70  F015         	goto	u4610
  7428  002ADC                     u4611:
  7429  002ADC  EF35  F015         	goto	l3935
  7430  002AE0                     u4610:
  7431  002AE0  EF7A  F015         	goto	l3955
  7432  002AE4                     l3951:
  7433  002AE4  0E00               	movlw	0
  7434  002AE6  6E0F               	movwf	(atoi@neg+1)^0,c
  7435  002AE8  0E01               	movlw	1
  7436  002AEA  6E0E               	movwf	atoi@neg^0,c
  7437  002AEC                     l3953:
  7438  002AEC  4A08               	infsnz	atoi@s^0,f,c
  7439  002AEE  2A09               	incf	(atoi@s+1)^0,f,c
  7440  002AF0  EFAF  F015         	goto	l3961
  7441  002AF4                     l3955:
  7442  002AF4  C008  FFF6         	movff	atoi@s,tblptrl
  7443  002AF8  C009  FFF7         	movff	atoi@s+1,tblptrh
  7444  002AFC                     	if	0	;tblptru may be non-zero
  7445  002AFC                     	endif
  7446  002AFC                     	if	0	;tblptru may be non-zero
  7447  002AFC                     	endif
  7448  002AFC  0008               	tblrd		*
  7449  002AFE  50F5               	movf	tablat,w,c
  7450  002B00  6E0A               	movwf	??_atoi^0,c
  7451  002B02  6A0B               	clrf	(??_atoi+1)^0,c
  7452                           
  7453                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7454                           ; Switch size 1, requested type "simple"
  7455                           ; Number of cases is 1, Range of values is 0 to 0
  7456                           ; switch strategies available:
  7457                           ; Name         Instructions Cycles
  7458                           ; simple_byte            4     3 (average)
  7459                           ;	Chosen strategy is simple_byte
  7460  002B04  500B               	movf	(??_atoi+1)^0,w,c
  7461  002B06  0A00               	xorlw	0	; case 0
  7462  002B08  B4D8               	btfsc	status,2,c
  7463  002B0A  EF89  F015         	goto	l4527
  7464  002B0E  EFAF  F015         	goto	l3961
  7465  002B12                     l4527:
  7466                           
  7467                           ; Switch size 1, requested type "simple"
  7468                           ; Number of cases is 2, Range of values is 43 to 45
  7469                           ; switch strategies available:
  7470                           ; Name         Instructions Cycles
  7471                           ; simple_byte            7     4 (average)
  7472                           ;	Chosen strategy is simple_byte
  7473  002B12  500A               	movf	??_atoi^0,w,c
  7474  002B14  0A2B               	xorlw	43	; case 43
  7475  002B16  B4D8               	btfsc	status,2,c
  7476  002B18  EF76  F015         	goto	l3953
  7477  002B1C  0A06               	xorlw	6	; case 45
  7478  002B1E  B4D8               	btfsc	status,2,c
  7479  002B20  EF72  F015         	goto	l3951
  7480  002B24  EFAF  F015         	goto	l3961
  7481  002B28                     l3957:
  7482  002B28  C015  F001         	movff	atoi@n,___wmul@multiplier
  7483  002B2C  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7484  002B30  0E00               	movlw	0
  7485  002B32  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7486  002B34  0E0A               	movlw	10
  7487  002B36  6E03               	movwf	___wmul@multiplicand^0,c
  7488  002B38  ECE4  F01C         	call	___wmul	;wreg free
  7489  002B3C  C008  FFF6         	movff	atoi@s,tblptrl
  7490  002B40  C009  FFF7         	movff	atoi@s+1,tblptrh
  7491  002B44                     	if	0	;tblptru may be non-zero
  7492  002B44                     	endif
  7493  002B44                     	if	0	;tblptru may be non-zero
  7494  002B44                     	endif
  7495  002B44  0008               	tblrd		*
  7496  002B46  50F5               	movf	tablat,w,c
  7497  002B48  5E01               	subwf	?___wmul^0,f,c
  7498  002B4A  0E00               	movlw	0
  7499  002B4C  5A02               	subwfb	(?___wmul+1)^0,f,c
  7500  002B4E  0E30               	movlw	48
  7501  002B50  2401               	addwf	?___wmul^0,w,c
  7502  002B52  6E15               	movwf	atoi@n^0,c
  7503  002B54  0E00               	movlw	0
  7504  002B56  2002               	addwfc	(?___wmul+1)^0,w,c
  7505  002B58  6E16               	movwf	(atoi@n+1)^0,c
  7506  002B5A  EF76  F015         	goto	l3953
  7507  002B5E                     l3961:
  7508  002B5E  0ED0               	movlw	208
  7509  002B60  6E0A               	movwf	??_atoi^0,c
  7510  002B62  0EFF               	movlw	255
  7511  002B64  6E0B               	movwf	(??_atoi+1)^0,c
  7512  002B66  C008  FFF6         	movff	atoi@s,tblptrl
  7513  002B6A  C009  FFF7         	movff	atoi@s+1,tblptrh
  7514  002B6E                     	if	0	;tblptru may be non-zero
  7515  002B6E                     	endif
  7516  002B6E                     	if	0	;tblptru may be non-zero
  7517  002B6E                     	endif
  7518  002B6E  0008               	tblrd		*
  7519  002B70  50F5               	movf	tablat,w,c
  7520  002B72  6E0C               	movwf	(??_atoi+2)^0,c
  7521  002B74  6A0D               	clrf	(??_atoi+3)^0,c
  7522  002B76  500A               	movf	??_atoi^0,w,c
  7523  002B78  260C               	addwf	(??_atoi+2)^0,f,c
  7524  002B7A  500B               	movf	(??_atoi+1)^0,w,c
  7525  002B7C  220D               	addwfc	(??_atoi+3)^0,f,c
  7526  002B7E  500D               	movf	(??_atoi+3)^0,w,c
  7527  002B80  E10A               	bnz	u4620
  7528  002B82  0E0A               	movlw	10
  7529  002B84  5C0C               	subwf	(??_atoi+2)^0,w,c
  7530  002B86  A0D8               	btfss	status,0,c
  7531  002B88  EFC8  F015         	goto	u4621
  7532  002B8C  EFCB  F015         	goto	u4620
  7533  002B90                     u4621:
  7534  002B90  0E01               	movlw	1
  7535  002B92  EFCC  F015         	goto	u4630
  7536  002B96                     u4620:
  7537  002B96  0E00               	movlw	0
  7538  002B98                     u4630:
  7539  002B98  6E12               	movwf	_atoi$980^0,c
  7540  002B9A  6A13               	clrf	(_atoi$980+1)^0,c
  7541  002B9C  5012               	movf	_atoi$980^0,w,c
  7542  002B9E  1013               	iorwf	(_atoi$980+1)^0,w,c
  7543  002BA0  A4D8               	btfss	status,2,c
  7544  002BA2  EFD5  F015         	goto	u4641
  7545  002BA6  EFD7  F015         	goto	u4640
  7546  002BAA                     u4641:
  7547  002BAA  EF94  F015         	goto	l3957
  7548  002BAE                     u4640:
  7549  002BAE  500E               	movf	atoi@neg^0,w,c
  7550  002BB0  100F               	iorwf	(atoi@neg+1)^0,w,c
  7551  002BB2  A4D8               	btfss	status,2,c
  7552  002BB4  EFDE  F015         	goto	u4651
  7553  002BB8  EFE0  F015         	goto	u4650
  7554  002BBC                     u4651:
  7555  002BBC  EFEE  F015         	goto	l1053
  7556  002BC0                     u4650:
  7557  002BC0  C015  F00A         	movff	atoi@n,??_atoi
  7558  002BC4  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7559  002BC8  1E0A               	comf	??_atoi^0,f,c
  7560  002BCA  1E0B               	comf	(??_atoi+1)^0,f,c
  7561  002BCC  4A0A               	infsnz	??_atoi^0,f,c
  7562  002BCE  2A0B               	incf	(??_atoi+1)^0,f,c
  7563  002BD0  C00A  F008         	movff	??_atoi,?_atoi
  7564  002BD4  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7565  002BD8  EFF2  F015         	goto	l1056
  7566  002BDC                     l1053:
  7567  002BDC  C015  F008         	movff	atoi@n,?_atoi
  7568  002BE0  C016  F009         	movff	atoi@n+1,?_atoi+1
  7569  002BE4                     l1056:
  7570  002BE4  0012               	return		;funcret
  7571  002BE6                     __end_of_atoi:
  7572                           	opt callstack 0
  7573                           
  7574 ;; *************** function _isspace *****************
  7575 ;; Defined at:
  7576 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  7577 ;; Parameters:    Size  Location     Type
  7578 ;;  c               2    0[COMRAM] int 
  7579 ;; Auto vars:     Size  Location     Type
  7580 ;;		None
  7581 ;; Return value:  Size  Location     Type
  7582 ;;                  2    0[COMRAM] int 
  7583 ;; Registers used:
  7584 ;;		wreg, status,2, status,0
  7585 ;; Tracked objects:
  7586 ;;		On entry : 0/0
  7587 ;;		On exit  : 0/0
  7588 ;;		Unchanged: 0/0
  7589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7590 ;;      Params:         2       0       0       0       0       0       0       0       0
  7591 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7592 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7593 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7594 ;;Total ram usage:        7 bytes
  7595 ;; Hardware stack levels used:    1
  7596 ;; This function calls:
  7597 ;;		Nothing
  7598 ;; This function is called by:
  7599 ;;		_atoi
  7600 ;; This function uses a non-reentrant model
  7601 ;;
  7602                           
  7603                           	psect	text27
  7604  003698                     __ptext27:
  7605                           	opt callstack 0
  7606  003698                     _isspace:
  7607                           	opt callstack 26
  7608  003698  0E01               	movlw	1
  7609  00369A  6E07               	movwf	_isspace$1009^0,c
  7610  00369C  0E20               	movlw	32
  7611  00369E  1801               	xorwf	isspace@c^0,w,c
  7612  0036A0  1002               	iorwf	(isspace@c+1)^0,w,c
  7613  0036A2  B4D8               	btfsc	status,2,c
  7614  0036A4  EF56  F01B         	goto	u4051
  7615  0036A8  EF58  F01B         	goto	u4050
  7616  0036AC                     u4051:
  7617  0036AC  EF71  F01B         	goto	l3629
  7618  0036B0                     u4050:
  7619  0036B0  0EF7               	movlw	247
  7620  0036B2  6E03               	movwf	??_isspace^0,c
  7621  0036B4  0EFF               	movlw	255
  7622  0036B6  6E04               	movwf	(??_isspace+1)^0,c
  7623  0036B8  C001  F005         	movff	isspace@c,??_isspace+2
  7624  0036BC  C002  F006         	movff	isspace@c+1,??_isspace+3
  7625  0036C0  5003               	movf	??_isspace^0,w,c
  7626  0036C2  2605               	addwf	(??_isspace+2)^0,f,c
  7627  0036C4  5004               	movf	(??_isspace+1)^0,w,c
  7628  0036C6  2206               	addwfc	(??_isspace+3)^0,f,c
  7629  0036C8  5006               	movf	(??_isspace+3)^0,w,c
  7630  0036CA  E109               	bnz	u4060
  7631  0036CC  0E05               	movlw	5
  7632  0036CE  5C05               	subwf	(??_isspace+2)^0,w,c
  7633  0036D0  A0D8               	btfss	status,0,c
  7634  0036D2  EF6D  F01B         	goto	u4061
  7635  0036D6  EF6F  F01B         	goto	u4060
  7636  0036DA                     u4061:
  7637  0036DA  EF71  F01B         	goto	l3629
  7638  0036DE                     u4060:
  7639  0036DE  0E00               	movlw	0
  7640  0036E0  6E07               	movwf	_isspace$1009^0,c
  7641  0036E2                     l3629:
  7642  0036E2  C007  F001         	movff	_isspace$1009,?_isspace
  7643  0036E6  6A02               	clrf	(?_isspace+1)^0,c
  7644  0036E8  0012               	return		;funcret
  7645  0036EA                     __end_of_isspace:
  7646                           	opt callstack 0
  7647                           
  7648 ;; *************** function _isdigit *****************
  7649 ;; Defined at:
  7650 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  7651 ;; Parameters:    Size  Location     Type
  7652 ;;  c               2    0[COMRAM] int 
  7653 ;; Auto vars:     Size  Location     Type
  7654 ;;		None
  7655 ;; Return value:  Size  Location     Type
  7656 ;;                  2    0[COMRAM] int 
  7657 ;; Registers used:
  7658 ;;		wreg, status,2, status,0
  7659 ;; Tracked objects:
  7660 ;;		On entry : 0/0
  7661 ;;		On exit  : 0/0
  7662 ;;		Unchanged: 0/0
  7663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7664 ;;      Params:         2       0       0       0       0       0       0       0       0
  7665 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7666 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7667 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7668 ;;Total ram usage:        6 bytes
  7669 ;; Hardware stack levels used:    1
  7670 ;; This function calls:
  7671 ;;		Nothing
  7672 ;; This function is called by:
  7673 ;;		_vfpfcnvrt
  7674 ;;		_atoi
  7675 ;; This function uses a non-reentrant model
  7676 ;;
  7677                           
  7678                           	psect	text28
  7679  003902                     __ptext28:
  7680                           	opt callstack 0
  7681  003902                     _isdigit:
  7682                           	opt callstack 27
  7683  003902  0ED0               	movlw	208
  7684  003904  6E03               	movwf	??_isdigit^0,c
  7685  003906  0EFF               	movlw	255
  7686  003908  6E04               	movwf	(??_isdigit+1)^0,c
  7687  00390A  C001  F005         	movff	isdigit@c,??_isdigit+2
  7688  00390E  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7689  003912  5003               	movf	??_isdigit^0,w,c
  7690  003914  2605               	addwf	(??_isdigit+2)^0,f,c
  7691  003916  5004               	movf	(??_isdigit+1)^0,w,c
  7692  003918  2206               	addwfc	(??_isdigit+3)^0,f,c
  7693  00391A  5006               	movf	(??_isdigit+3)^0,w,c
  7694  00391C  E10A               	bnz	u3330
  7695  00391E  0E0A               	movlw	10
  7696  003920  5C05               	subwf	(??_isdigit+2)^0,w,c
  7697  003922  A0D8               	btfss	status,0,c
  7698  003924  EF96  F01C         	goto	u3331
  7699  003928  EF99  F01C         	goto	u3330
  7700  00392C                     u3331:
  7701  00392C  0E01               	movlw	1
  7702  00392E  EF9A  F01C         	goto	u3340
  7703  003932                     u3330:
  7704  003932  0E00               	movlw	0
  7705  003934                     u3340:
  7706  003934  6E01               	movwf	?_isdigit^0,c
  7707  003936  6A02               	clrf	(?_isdigit+1)^0,c
  7708  003938  0012               	return		;funcret
  7709  00393A                     __end_of_isdigit:
  7710                           	opt callstack 0
  7711                           
  7712 ;; *************** function ___wmul *****************
  7713 ;; Defined at:
  7714 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  7715 ;; Parameters:    Size  Location     Type
  7716 ;;  multiplier      2    0[COMRAM] unsigned int 
  7717 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7718 ;; Auto vars:     Size  Location     Type
  7719 ;;  product         2    4[COMRAM] unsigned int 
  7720 ;; Return value:  Size  Location     Type
  7721 ;;                  2    0[COMRAM] unsigned int 
  7722 ;; Registers used:
  7723 ;;		wreg, status,2, status,0, prodl, prodh
  7724 ;; Tracked objects:
  7725 ;;		On entry : 0/0
  7726 ;;		On exit  : 0/0
  7727 ;;		Unchanged: 0/0
  7728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7729 ;;      Params:         4       0       0       0       0       0       0       0       0
  7730 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7731 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7732 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7733 ;;Total ram usage:        6 bytes
  7734 ;; Hardware stack levels used:    1
  7735 ;; This function calls:
  7736 ;;		Nothing
  7737 ;; This function is called by:
  7738 ;;		_atoi
  7739 ;; This function uses a non-reentrant model
  7740 ;;
  7741                           
  7742                           	psect	text29
  7743  0039C8                     __ptext29:
  7744                           	opt callstack 0
  7745  0039C8                     ___wmul:
  7746                           	opt callstack 26
  7747  0039C8  5001               	movf	___wmul@multiplier^0,w,c
  7748  0039CA  0203               	mulwf	___wmul@multiplicand^0,c
  7749  0039CC  CFF3 F005          	movff	prodl,___wmul@product
  7750  0039D0  CFF4 F006          	movff	prodh,___wmul@product+1
  7751  0039D4  5001               	movf	___wmul@multiplier^0,w,c
  7752  0039D6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7753  0039D8  50F3               	movf	243,w,c
  7754  0039DA  2606               	addwf	(___wmul@product+1)^0,f,c
  7755  0039DC  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7756  0039DE  0203               	mulwf	___wmul@multiplicand^0,c
  7757  0039E0  50F3               	movf	243,w,c
  7758  0039E2  2606               	addwf	(___wmul@product+1)^0,f,c
  7759  0039E4  C005  F001         	movff	___wmul@product,?___wmul
  7760  0039E8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7761  0039EC  0012               	return		;funcret
  7762  0039EE                     __end_of___wmul:
  7763                           	opt callstack 0
  7764                           
  7765 ;; *************** function _putrsXLCD *****************
  7766 ;; Defined at:
  7767 ;;		line 138 in file "LCD_libreria.c"
  7768 ;; Parameters:    Size  Location     Type
  7769 ;;  buffer          2    1[COMRAM] PTR const unsigned char 
  7770 ;;		 -> datos(20), STR_3(17), STR_2(17), STR_1(18), 
  7771 ;; Auto vars:     Size  Location     Type
  7772 ;;		None
  7773 ;; Return value:  Size  Location     Type
  7774 ;;                  1    wreg      void 
  7775 ;; Registers used:
  7776 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7777 ;; Tracked objects:
  7778 ;;		On entry : 0/0
  7779 ;;		On exit  : 0/0
  7780 ;;		Unchanged: 0/0
  7781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7782 ;;      Params:         2       0       0       0       0       0       0       0       0
  7783 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7784 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7785 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7786 ;;Total ram usage:        2 bytes
  7787 ;; Hardware stack levels used:    1
  7788 ;; Hardware stack levels required when called:    3
  7789 ;; This function calls:
  7790 ;;		_BusyXLCD
  7791 ;;		_WriteDataXLCD
  7792 ;; This function is called by:
  7793 ;;		_main
  7794 ;; This function uses a non-reentrant model
  7795 ;;
  7796                           
  7797                           	psect	text30
  7798  00345C                     __ptext30:
  7799                           	opt callstack 0
  7800  00345C                     _putrsXLCD:
  7801                           	opt callstack 27
  7802  00345C                     
  7803                           ;LCD_libreria.c: 138: void putrsXLCD(const char *buffer);LCD_libreria.c: 139: {;LCD_libr
      +                          eria.c: 140:         while(*buffer)
  7804  00345C  EF4E  F01A         	goto	l4279
  7805  003460                     l4273:
  7806  003460  ECE5  F01B         	call	_BusyXLCD	;wreg free
  7807  003464  0900               	iorlw	0
  7808  003466  A4D8               	btfss	status,2,c
  7809  003468  EF38  F01A         	goto	u4971
  7810  00346C  EF3A  F01A         	goto	u4970
  7811  003470                     u4971:
  7812  003470  EF30  F01A         	goto	l4273
  7813  003474                     u4970:
  7814  003474                     
  7815                           ;LCD_libreria.c: 143:                 WriteDataXLCD(*buffer);
  7816  003474  C002  FFF6         	movff	putrsXLCD@buffer,tblptrl
  7817  003478  C003  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  7818  00347C  6AF8               	clrf	tblptru,c
  7819  00347E  0E07               	movlw	(high __ramtop+-1)
  7820  003480  64F7               	cpfsgt	tblptrh,c
  7821  003482  D003               	bra	u4987
  7822  003484  0008               	tblrd		*
  7823  003486  50F5               	movf	tablat,w,c
  7824  003488  D005               	bra	u4980
  7825  00348A                     u4987:
  7826  00348A  CFF6 FFE9          	movff	tblptrl,fsr0l
  7827  00348E  CFF7 FFEA          	movff	tblptrh,fsr0h
  7828  003492  50EF               	movf	indf0,w,c
  7829  003494                     u4980:
  7830  003494  EC75  F01B         	call	_WriteDataXLCD
  7831  003498                     
  7832                           ;LCD_libreria.c: 144:                 buffer++;
  7833  003498  4A02               	infsnz	putrsXLCD@buffer^0,f,c
  7834  00349A  2A03               	incf	(putrsXLCD@buffer+1)^0,f,c
  7835  00349C                     l4279:
  7836                           
  7837                           ;LCD_libreria.c: 140:         while(*buffer)
  7838  00349C  C002  FFF6         	movff	putrsXLCD@buffer,tblptrl
  7839  0034A0  C003  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  7840  0034A4  6AF8               	clrf	tblptru,c
  7841  0034A6  0E07               	movlw	(high __ramtop+-1)
  7842  0034A8  64F7               	cpfsgt	tblptrh,c
  7843  0034AA  D003               	bra	u4997
  7844  0034AC  0008               	tblrd		*
  7845  0034AE  50F5               	movf	tablat,w,c
  7846  0034B0  D005               	bra	u4990
  7847  0034B2                     u4997:
  7848  0034B2  CFF6 FFE9          	movff	tblptrl,fsr0l
  7849  0034B6  CFF7 FFEA          	movff	tblptrh,fsr0h
  7850  0034BA  50EF               	movf	indf0,w,c
  7851  0034BC                     u4990:
  7852  0034BC  0900               	iorlw	0
  7853  0034BE  A4D8               	btfss	status,2,c
  7854  0034C0  EF64  F01A         	goto	u5001
  7855  0034C4  EF66  F01A         	goto	u5000
  7856  0034C8                     u5001:
  7857  0034C8  EF30  F01A         	goto	l4273
  7858  0034CC                     u5000:
  7859  0034CC  0012               	return		;funcret
  7860  0034CE                     __end_of_putrsXLCD:
  7861                           	opt callstack 0
  7862                           
  7863 ;; *************** function _WriteDataXLCD *****************
  7864 ;; Defined at:
  7865 ;;		line 395 in file "LCD_libreria.c"
  7866 ;; Parameters:    Size  Location     Type
  7867 ;;  data            1    wreg     unsigned char 
  7868 ;; Auto vars:     Size  Location     Type
  7869 ;;  data            1    0[COMRAM] unsigned char 
  7870 ;; Return value:  Size  Location     Type
  7871 ;;                  1    wreg      void 
  7872 ;; Registers used:
  7873 ;;		wreg, status,2, status,0, cstack
  7874 ;; Tracked objects:
  7875 ;;		On entry : 0/0
  7876 ;;		On exit  : 0/0
  7877 ;;		Unchanged: 0/0
  7878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7879 ;;      Params:         0       0       0       0       0       0       0       0       0
  7880 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7881 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7882 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7883 ;;Total ram usage:        1 bytes
  7884 ;; Hardware stack levels used:    1
  7885 ;; Hardware stack levels required when called:    2
  7886 ;; This function calls:
  7887 ;;		_BusyXLCD
  7888 ;;		_DelayFor18TCY
  7889 ;; This function is called by:
  7890 ;;		_putrsXLCD
  7891 ;;		_LCD_WriteChr_CGRAM
  7892 ;;		_putsXLCD
  7893 ;; This function uses a non-reentrant model
  7894 ;;
  7895                           
  7896                           	psect	text31
  7897  0036EA                     __ptext31:
  7898                           	opt callstack 0
  7899  0036EA                     _WriteDataXLCD:
  7900                           	opt callstack 27
  7901                           
  7902                           ;incstack = 0
  7903                           ;WriteDataXLCD@data stored from wreg
  7904  0036EA  6E01               	movwf	WriteDataXLCD@data^0,c
  7905  0036EC                     l4175:
  7906  0036EC  ECE5  F01B         	call	_BusyXLCD	;wreg free
  7907  0036F0  0900               	iorlw	0
  7908  0036F2  A4D8               	btfss	status,2,c
  7909  0036F4  EF7E  F01B         	goto	u4871
  7910  0036F8  EF80  F01B         	goto	u4870
  7911  0036FC                     u4871:
  7912  0036FC  EF76  F01B         	goto	l4175
  7913  003700                     u4870:
  7914  003700                     
  7915                           ;LCD_libreria.c: 415:         TRISD &= 0xf0;
  7916  003700  0EF0               	movlw	240
  7917  003702  1695               	andwf	149,f,c	;volatile
  7918                           
  7919                           ;LCD_libreria.c: 416:         PORTD &= 0xf0;
  7920  003704  0EF0               	movlw	240
  7921  003706  1683               	andwf	131,f,c	;volatile
  7922                           
  7923                           ;LCD_libreria.c: 417:         PORTD |= ((data>>4)&0x0f);
  7924  003708  3801               	swapf	WriteDataXLCD@data^0,w,c
  7925  00370A  0B0F               	andlw	15
  7926  00370C  0B0F               	andlw	15
  7927  00370E  1283               	iorwf	131,f,c	;volatile
  7928  003710                     
  7929                           ;LCD_libreria.c: 419:         LATDbits.LATD5 = 1;
  7930  003710  8A8C               	bsf	140,5,c	;volatile
  7931  003712                     
  7932                           ;LCD_libreria.c: 420:         LATDbits.LATD6 = 0;
  7933  003712  9C8C               	bcf	140,6,c	;volatile
  7934  003714                     
  7935                           ;LCD_libreria.c: 421:         DelayFor18TCY();
  7936  003714  EC18  F01D         	call	_DelayFor18TCY	;wreg free
  7937  003718                     
  7938                           ;LCD_libreria.c: 422:         LATDbits.LATD4 = 1;
  7939  003718  888C               	bsf	140,4,c	;volatile
  7940  00371A                     
  7941                           ;LCD_libreria.c: 423:         DelayFor18TCY();
  7942  00371A  EC18  F01D         	call	_DelayFor18TCY	;wreg free
  7943  00371E                     
  7944                           ;LCD_libreria.c: 424:         LATDbits.LATD4 = 0;
  7945  00371E  988C               	bcf	140,4,c	;volatile
  7946                           
  7947                           ;LCD_libreria.c: 429:         PORTD &= 0xf0;
  7948  003720  0EF0               	movlw	240
  7949  003722  1683               	andwf	131,f,c	;volatile
  7950                           
  7951                           ;LCD_libreria.c: 430:         PORTD |= (data&0x0f);
  7952  003724  5001               	movf	WriteDataXLCD@data^0,w,c
  7953  003726  0B0F               	andlw	15
  7954  003728  1283               	iorwf	131,f,c	;volatile
  7955  00372A                     
  7956                           ;LCD_libreria.c: 432:         DelayFor18TCY();
  7957  00372A  EC18  F01D         	call	_DelayFor18TCY	;wreg free
  7958  00372E                     
  7959                           ;LCD_libreria.c: 433:         LATDbits.LATD4 = 1;
  7960  00372E  888C               	bsf	140,4,c	;volatile
  7961  003730                     
  7962                           ;LCD_libreria.c: 434:         DelayFor18TCY();
  7963  003730  EC18  F01D         	call	_DelayFor18TCY	;wreg free
  7964  003734                     
  7965                           ;LCD_libreria.c: 435:         LATDbits.LATD4 = 0;
  7966  003734  988C               	bcf	140,4,c	;volatile
  7967                           
  7968                           ;LCD_libreria.c: 439:         TRISD |= 0x0f;
  7969  003736  0E0F               	movlw	15
  7970  003738  1295               	iorwf	149,f,c	;volatile
  7971  00373A  0012               	return		;funcret
  7972  00373C                     __end_of_WriteDataXLCD:
  7973                           	opt callstack 0
  7974                           
  7975 ;; *************** function ___xxtofl *****************
  7976 ;; Defined at:
  7977 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  7978 ;; Parameters:    Size  Location     Type
  7979 ;;  sign            1    wreg     unsigned char 
  7980 ;;  val             4    0[COMRAM] long 
  7981 ;; Auto vars:     Size  Location     Type
  7982 ;;  sign            1    8[COMRAM] unsigned char 
  7983 ;;  arg             4   10[COMRAM] unsigned long 
  7984 ;;  exp             1    9[COMRAM] unsigned char 
  7985 ;; Return value:  Size  Location     Type
  7986 ;;                  4    0[COMRAM] unsigned char 
  7987 ;; Registers used:
  7988 ;;		wreg, status,2, status,0
  7989 ;; Tracked objects:
  7990 ;;		On entry : 0/0
  7991 ;;		On exit  : 0/0
  7992 ;;		Unchanged: 0/0
  7993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7994 ;;      Params:         4       0       0       0       0       0       0       0       0
  7995 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7996 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7997 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7998 ;;Total ram usage:       14 bytes
  7999 ;; Hardware stack levels used:    1
  8000 ;; This function calls:
  8001 ;;		Nothing
  8002 ;; This function is called by:
  8003 ;;		_main
  8004 ;; This function uses a non-reentrant model
  8005 ;;
  8006                           
  8007                           	psect	text32
  8008  002702                     __ptext32:
  8009                           	opt callstack 0
  8010  002702                     ___xxtofl:
  8011                           	opt callstack 30
  8012                           
  8013                           ;incstack = 0
  8014                           ;___xxtofl@sign stored from wreg
  8015  002702  6E09               	movwf	___xxtofl@sign^0,c
  8016  002704  5009               	movf	___xxtofl@sign^0,w,c
  8017  002706  B4D8               	btfsc	status,2,c
  8018  002708  EF88  F013         	goto	u5041
  8019  00270C  EF8A  F013         	goto	u5040
  8020  002710                     u5041:
  8021  002710  EFAC  F013         	goto	l998
  8022  002714                     u5040:
  8023  002714  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8024  002716  EF91  F013         	goto	u5050
  8025  00271A  EF8F  F013         	goto	u5051
  8026  00271E                     u5051:
  8027  00271E  EFAC  F013         	goto	l998
  8028  002722                     u5050:
  8029  002722  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8030  002726  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8031  00272A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8032  00272E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8033  002732  1E05               	comf	??___xxtofl^0,f,c
  8034  002734  1E06               	comf	(??___xxtofl+1)^0,f,c
  8035  002736  1E07               	comf	(??___xxtofl+2)^0,f,c
  8036  002738  1E08               	comf	(??___xxtofl+3)^0,f,c
  8037  00273A  2A05               	incf	??___xxtofl^0,f,c
  8038  00273C  0E00               	movlw	0
  8039  00273E  2206               	addwfc	(??___xxtofl+1)^0,f,c
  8040  002740  2207               	addwfc	(??___xxtofl+2)^0,f,c
  8041  002742  2208               	addwfc	(??___xxtofl+3)^0,f,c
  8042  002744  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8043  002748  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8044  00274C  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8045  002750  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8046  002754  EFB4  F013         	goto	l4323
  8047  002758                     l998:
  8048  002758  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8049  00275C  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8050  002760  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8051  002764  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8052  002768                     l4323:
  8053  002768  5001               	movf	___xxtofl@val^0,w,c
  8054  00276A  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  8055  00276C  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  8056  00276E  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  8057  002770  A4D8               	btfss	status,2,c
  8058  002772  EFBD  F013         	goto	u5061
  8059  002776  EFBF  F013         	goto	u5060
  8060  00277A                     u5061:
  8061  00277A  EFC9  F013         	goto	l4329
  8062  00277E                     u5060:
  8063  00277E  0E00               	movlw	0
  8064  002780  6E01               	movwf	?___xxtofl^0,c
  8065  002782  0E00               	movlw	0
  8066  002784  6E02               	movwf	(?___xxtofl+1)^0,c
  8067  002786  0E00               	movlw	0
  8068  002788  6E03               	movwf	(?___xxtofl+2)^0,c
  8069  00278A  0E00               	movlw	0
  8070  00278C  6E04               	movwf	(?___xxtofl+3)^0,c
  8071  00278E  EF5A  F014         	goto	l1001
  8072  002792                     l4329:
  8073  002792  0E96               	movlw	150
  8074  002794  6E0A               	movwf	___xxtofl@exp^0,c
  8075  002796  EFD3  F013         	goto	l4333
  8076  00279A                     l4331:
  8077  00279A  2A0A               	incf	___xxtofl@exp^0,f,c
  8078  00279C  90D8               	bcf	status,0,c
  8079  00279E  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8080  0027A0  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8081  0027A2  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8082  0027A4  320B               	rrcf	___xxtofl@arg^0,f,c
  8083  0027A6                     l4333:
  8084  0027A6  0E00               	movlw	0
  8085  0027A8  140B               	andwf	___xxtofl@arg^0,w,c
  8086  0027AA  6E05               	movwf	??___xxtofl^0,c
  8087  0027AC  0E00               	movlw	0
  8088  0027AE  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8089  0027B0  6E06               	movwf	(??___xxtofl+1)^0,c
  8090  0027B2  0E00               	movlw	0
  8091  0027B4  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8092  0027B6  6E07               	movwf	(??___xxtofl+2)^0,c
  8093  0027B8  0EFE               	movlw	254
  8094  0027BA  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8095  0027BC  6E08               	movwf	(??___xxtofl+3)^0,c
  8096  0027BE  5005               	movf	??___xxtofl^0,w,c
  8097  0027C0  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8098  0027C2  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8099  0027C4  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8100  0027C6  A4D8               	btfss	status,2,c
  8101  0027C8  EFE8  F013         	goto	u5071
  8102  0027CC  EFEA  F013         	goto	u5070
  8103  0027D0                     u5071:
  8104  0027D0  EFCD  F013         	goto	l4331
  8105  0027D4                     u5070:
  8106  0027D4  EFF8  F013         	goto	l1005
  8107  0027D8                     l4335:
  8108  0027D8  2A0A               	incf	___xxtofl@exp^0,f,c
  8109  0027DA  0E01               	movlw	1
  8110  0027DC  260B               	addwf	___xxtofl@arg^0,f,c
  8111  0027DE  0E00               	movlw	0
  8112  0027E0  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  8113  0027E2  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  8114  0027E4  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  8115  0027E6  90D8               	bcf	status,0,c
  8116  0027E8  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8117  0027EA  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8118  0027EC  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8119  0027EE  320B               	rrcf	___xxtofl@arg^0,f,c
  8120  0027F0                     l1005:
  8121  0027F0  0E00               	movlw	0
  8122  0027F2  140B               	andwf	___xxtofl@arg^0,w,c
  8123  0027F4  6E05               	movwf	??___xxtofl^0,c
  8124  0027F6  0E00               	movlw	0
  8125  0027F8  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8126  0027FA  6E06               	movwf	(??___xxtofl+1)^0,c
  8127  0027FC  0E00               	movlw	0
  8128  0027FE  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8129  002800  6E07               	movwf	(??___xxtofl+2)^0,c
  8130  002802  0EFF               	movlw	255
  8131  002804  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8132  002806  6E08               	movwf	(??___xxtofl+3)^0,c
  8133  002808  5005               	movf	??___xxtofl^0,w,c
  8134  00280A  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8135  00280C  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8136  00280E  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8137  002810  A4D8               	btfss	status,2,c
  8138  002812  EF0D  F014         	goto	u5081
  8139  002816  EF0F  F014         	goto	u5080
  8140  00281A                     u5081:
  8141  00281A  EFEC  F013         	goto	l4335
  8142  00281E                     u5080:
  8143  00281E  EF17  F014         	goto	l4343
  8144  002822                     l4341:
  8145  002822  060A               	decf	___xxtofl@exp^0,f,c
  8146  002824  90D8               	bcf	status,0,c
  8147  002826  360B               	rlcf	___xxtofl@arg^0,f,c
  8148  002828  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  8149  00282A  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  8150  00282C  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  8151  00282E                     l4343:
  8152  00282E  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  8153  002830  EF1C  F014         	goto	u5091
  8154  002834  EF1E  F014         	goto	u5090
  8155  002838                     u5091:
  8156  002838  EF26  F014         	goto	l1012
  8157  00283C                     u5090:
  8158  00283C  0E02               	movlw	2
  8159  00283E  600A               	cpfslt	___xxtofl@exp^0,c
  8160  002840  EF24  F014         	goto	u5101
  8161  002844  EF26  F014         	goto	u5100
  8162  002848                     u5101:
  8163  002848  EF11  F014         	goto	l4341
  8164  00284C                     u5100:
  8165  00284C                     l1012:
  8166  00284C  B00A               	btfsc	___xxtofl@exp^0,0,c
  8167  00284E  EF2B  F014         	goto	u5111
  8168  002852  EF2D  F014         	goto	u5110
  8169  002856                     u5111:
  8170  002856  EF2E  F014         	goto	l4349
  8171  00285A                     u5110:
  8172  00285A  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  8173  00285C                     l4349:
  8174  00285C  90D8               	bcf	status,0,c
  8175  00285E  320A               	rrcf	___xxtofl@exp^0,f,c
  8176  002860  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8177  002864  6A06               	clrf	(??___xxtofl+1)^0,c
  8178  002866  6A07               	clrf	(??___xxtofl+2)^0,c
  8179  002868  6A08               	clrf	(??___xxtofl+3)^0,c
  8180  00286A  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8181  00286E  6A07               	clrf	(??___xxtofl+2)^0,c
  8182  002870  6A06               	clrf	(??___xxtofl+1)^0,c
  8183  002872  6A05               	clrf	??___xxtofl^0,c
  8184  002874  5005               	movf	??___xxtofl^0,w,c
  8185  002876  120B               	iorwf	___xxtofl@arg^0,f,c
  8186  002878  5006               	movf	(??___xxtofl+1)^0,w,c
  8187  00287A  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  8188  00287C  5007               	movf	(??___xxtofl+2)^0,w,c
  8189  00287E  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  8190  002880  5008               	movf	(??___xxtofl+3)^0,w,c
  8191  002882  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  8192  002884  5009               	movf	___xxtofl@sign^0,w,c
  8193  002886  B4D8               	btfsc	status,2,c
  8194  002888  EF48  F014         	goto	u5121
  8195  00288C  EF4A  F014         	goto	u5120
  8196  002890                     u5121:
  8197  002890  EF52  F014         	goto	l4359
  8198  002894                     u5120:
  8199  002894  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8200  002896  EF51  F014         	goto	u5130
  8201  00289A  EF4F  F014         	goto	u5131
  8202  00289E                     u5131:
  8203  00289E  EF52  F014         	goto	l4359
  8204  0028A2                     u5130:
  8205  0028A2  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  8206  0028A4                     l4359:
  8207  0028A4  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8208  0028A8  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8209  0028AC  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8210  0028B0  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8211  0028B4                     l1001:
  8212  0028B4  0012               	return		;funcret
  8213  0028B6                     __end_of___xxtofl:
  8214                           	opt callstack 0
  8215                           
  8216 ;; *************** function _LCD_gotoXY *****************
  8217 ;; Defined at:
  8218 ;;		line 55 in file "LCD_libreria.c"
  8219 ;; Parameters:    Size  Location     Type
  8220 ;;  x               2    1[COMRAM] int 
  8221 ;;  y               2    3[COMRAM] int 
  8222 ;; Auto vars:     Size  Location     Type
  8223 ;;		None
  8224 ;; Return value:  Size  Location     Type
  8225 ;;                  1    wreg      void 
  8226 ;; Registers used:
  8227 ;;		wreg, status,2, status,0, cstack
  8228 ;; Tracked objects:
  8229 ;;		On entry : 0/0
  8230 ;;		On exit  : 0/0
  8231 ;;		Unchanged: 0/0
  8232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8233 ;;      Params:         4       0       0       0       0       0       0       0       0
  8234 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8235 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8236 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8237 ;;Total ram usage:        4 bytes
  8238 ;; Hardware stack levels used:    1
  8239 ;; Hardware stack levels required when called:    2
  8240 ;; This function calls:
  8241 ;;		_WriteCmdXLCD
  8242 ;; This function is called by:
  8243 ;;		_main
  8244 ;; This function uses a non-reentrant model
  8245 ;;
  8246                           
  8247                           	psect	text33
  8248  003970                     __ptext33:
  8249                           	opt callstack 0
  8250  003970                     _LCD_gotoXY:
  8251                           	opt callstack 28
  8252  003970                     
  8253                           ;LCD_libreria.c: 55: void LCD_gotoXY(int x,int y);LCD_libreria.c: 56: {;LCD_libreria.c: 
      +                          57:     if ( x>0 ){WriteCmdXLCD(0b11000000 +y);}
  8254  003970  BE03               	btfsc	(LCD_gotoXY@x+1)^0,7,c
  8255  003972  EFC3  F01C         	goto	u4961
  8256  003976  5003               	movf	(LCD_gotoXY@x+1)^0,w,c
  8257  003978  E108               	bnz	u4960
  8258  00397A  0402               	decf	LCD_gotoXY@x^0,w,c
  8259  00397C  A0D8               	btfss	status,0,c
  8260  00397E  EFC3  F01C         	goto	u4961
  8261  003982  EFC5  F01C         	goto	u4960
  8262  003986                     u4961:
  8263  003986  EFCB  F01C         	goto	l4267
  8264  00398A                     u4960:
  8265  00398A  5004               	movf	LCD_gotoXY@y^0,w,c
  8266  00398C  0FC0               	addlw	192
  8267  00398E  EC2A  F01C         	call	_WriteCmdXLCD
  8268  003992  EFCF  F01C         	goto	l36
  8269  003996                     l4267:
  8270  003996  5004               	movf	LCD_gotoXY@y^0,w,c
  8271  003998  0F80               	addlw	128
  8272  00399A  EC2A  F01C         	call	_WriteCmdXLCD
  8273  00399E                     l36:
  8274  00399E  0012               	return		;funcret
  8275  0039A0                     __end_of_LCD_gotoXY:
  8276                           	opt callstack 0
  8277                           
  8278 ;; *************** function _LCD_Init *****************
  8279 ;; Defined at:
  8280 ;;		line 19 in file "Main.c"
  8281 ;; Parameters:    Size  Location     Type
  8282 ;;		None
  8283 ;; Auto vars:     Size  Location     Type
  8284 ;;		None
  8285 ;; Return value:  Size  Location     Type
  8286 ;;                  1    wreg      void 
  8287 ;; Registers used:
  8288 ;;		wreg, status,2, status,0, cstack
  8289 ;; Tracked objects:
  8290 ;;		On entry : 0/0
  8291 ;;		On exit  : 0/0
  8292 ;;		Unchanged: 0/0
  8293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8294 ;;      Params:         0       0       0       0       0       0       0       0       0
  8295 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8296 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8297 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8298 ;;Total ram usage:        0 bytes
  8299 ;; Hardware stack levels used:    1
  8300 ;; Hardware stack levels required when called:    3
  8301 ;; This function calls:
  8302 ;;		_BusyXLCD
  8303 ;;		_OpenXLCD
  8304 ;;		_WriteCmdXLCD
  8305 ;; This function is called by:
  8306 ;;		_main
  8307 ;; This function uses a non-reentrant model
  8308 ;;
  8309                           
  8310                           	psect	text34
  8311  0039A0                     __ptext34:
  8312                           	opt callstack 0
  8313  0039A0                     _LCD_Init:
  8314                           	opt callstack 27
  8315  0039A0                     
  8316                           ;Main.c: 20:     OpenXLCD(0b00101100 & 0b00111000);
  8317  0039A0  0E28               	movlw	40
  8318  0039A2  EC77  F017         	call	_OpenXLCD
  8319  0039A6                     l4283:
  8320  0039A6  ECE5  F01B         	call	_BusyXLCD	;wreg free
  8321  0039AA  0900               	iorlw	0
  8322  0039AC  A4D8               	btfss	status,2,c
  8323  0039AE  EFDB  F01C         	goto	u5011
  8324  0039B2  EFDD  F01C         	goto	u5010
  8325  0039B6                     u5011:
  8326  0039B6  EFD3  F01C         	goto	l4283
  8327  0039BA                     u5010:
  8328  0039BA                     
  8329                           ;Main.c: 22:     WriteCmdXLCD(0x06);
  8330  0039BA  0E06               	movlw	6
  8331  0039BC  EC2A  F01C         	call	_WriteCmdXLCD
  8332                           
  8333                           ;Main.c: 23:     WriteCmdXLCD(0x0C);
  8334  0039C0  0E0C               	movlw	12
  8335  0039C2  EC2A  F01C         	call	_WriteCmdXLCD
  8336  0039C6  0012               	return		;funcret
  8337  0039C8                     __end_of_LCD_Init:
  8338                           	opt callstack 0
  8339                           
  8340 ;; *************** function _OpenXLCD *****************
  8341 ;; Defined at:
  8342 ;;		line 74 in file "LCD_libreria.c"
  8343 ;; Parameters:    Size  Location     Type
  8344 ;;  lcdtype         1    wreg     unsigned char 
  8345 ;; Auto vars:     Size  Location     Type
  8346 ;;  lcdtype         1    4[COMRAM] unsigned char 
  8347 ;; Return value:  Size  Location     Type
  8348 ;;                  1    wreg      void 
  8349 ;; Registers used:
  8350 ;;		wreg, status,2, status,0, cstack
  8351 ;; Tracked objects:
  8352 ;;		On entry : 0/0
  8353 ;;		On exit  : 0/0
  8354 ;;		Unchanged: 0/0
  8355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8356 ;;      Params:         0       0       0       0       0       0       0       0       0
  8357 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8358 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8359 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8360 ;;Total ram usage:        1 bytes
  8361 ;; Hardware stack levels used:    1
  8362 ;; Hardware stack levels required when called:    2
  8363 ;; This function calls:
  8364 ;;		_BusyXLCD
  8365 ;;		_DelayPORXLCD
  8366 ;;		_SetDDRamAddr
  8367 ;;		_WriteCmdXLCD
  8368 ;; This function is called by:
  8369 ;;		_LCD_Init
  8370 ;; This function uses a non-reentrant model
  8371 ;;
  8372                           
  8373                           	psect	text35
  8374  002EEE                     __ptext35:
  8375                           	opt callstack 0
  8376  002EEE                     _OpenXLCD:
  8377                           	opt callstack 27
  8378                           
  8379                           ;incstack = 0
  8380                           ;OpenXLCD@lcdtype stored from wreg
  8381  002EEE  6E05               	movwf	OpenXLCD@lcdtype^0,c
  8382  002EF0                     
  8383                           ;LCD_libreria.c: 74: void OpenXLCD(unsigned char lcdtype);LCD_libreria.c: 75: {;LCD_libr
      +                          eria.c: 86:         PORTD &= 0xf0;
  8384  002EF0  0EF0               	movlw	240
  8385  002EF2  1683               	andwf	131,f,c	;volatile
  8386                           
  8387                           ;LCD_libreria.c: 87:         TRISD &= 0xF0;
  8388  002EF4  0EF0               	movlw	240
  8389  002EF6  1695               	andwf	149,f,c	;volatile
  8390  002EF8                     
  8391                           ;LCD_libreria.c: 90:         TRISDbits.TRISD6 = 0;
  8392  002EF8  9C95               	bcf	149,6,c	;volatile
  8393  002EFA                     
  8394                           ;LCD_libreria.c: 91:         TRISDbits.TRISD5 = 0;
  8395  002EFA  9A95               	bcf	149,5,c	;volatile
  8396  002EFC                     
  8397                           ;LCD_libreria.c: 92:         TRISDbits.TRISD4 = 0;
  8398  002EFC  9895               	bcf	149,4,c	;volatile
  8399  002EFE                     
  8400                           ;LCD_libreria.c: 93:         LATDbits.LATD6 = 0;
  8401  002EFE  9C8C               	bcf	140,6,c	;volatile
  8402  002F00                     
  8403                           ;LCD_libreria.c: 94:         LATDbits.LATD5 = 0;
  8404  002F00  9A8C               	bcf	140,5,c	;volatile
  8405  002F02                     
  8406                           ;LCD_libreria.c: 95:         LATDbits.LATD4 = 0;
  8407  002F02  988C               	bcf	140,4,c	;volatile
  8408  002F04                     
  8409                           ;LCD_libreria.c: 98:         DelayPORXLCD();
  8410  002F04  EC25  F01D         	call	_DelayPORXLCD	;wreg free
  8411  002F08                     
  8412                           ;LCD_libreria.c: 100:    WriteCmdXLCD(0x30);
  8413  002F08  0E30               	movlw	48
  8414  002F0A  EC2A  F01C         	call	_WriteCmdXLCD
  8415  002F0E                     
  8416                           ;LCD_libreria.c: 101:          _delay((unsigned long)((1)*(20000000L/4000000.0)));
  8417  002F0E  D000               	nop2		;2 cycle nop
  8418  002F10  D000               	nop2		;2 cycle nop
  8419  002F12  F000               	nop	
  8420  002F14                     
  8421                           ;LCD_libreria.c: 103:    WriteCmdXLCD(0x30);
  8422  002F14  0E30               	movlw	48
  8423  002F16  EC2A  F01C         	call	_WriteCmdXLCD
  8424  002F1A                     
  8425                           ;LCD_libreria.c: 104:    _delay((unsigned long)((1)*(20000000L/4000000.0)));
  8426  002F1A  D000               	nop2		;2 cycle nop
  8427  002F1C  D000               	nop2		;2 cycle nop
  8428  002F1E  F000               	nop	
  8429  002F20                     
  8430                           ;LCD_libreria.c: 107:    WriteCmdXLCD(0x32);
  8431  002F20  0E32               	movlw	50
  8432  002F22  EC2A  F01C         	call	_WriteCmdXLCD
  8433  002F26                     l4227:
  8434  002F26  ECE5  F01B         	call	_BusyXLCD	;wreg free
  8435  002F2A  0900               	iorlw	0
  8436  002F2C  A4D8               	btfss	status,2,c
  8437  002F2E  EF9B  F017         	goto	u4881
  8438  002F32  EF9D  F017         	goto	u4880
  8439  002F36                     u4881:
  8440  002F36  EF93  F017         	goto	l4227
  8441  002F3A                     u4880:
  8442  002F3A                     l4229:
  8443  002F3A  ECE5  F01B         	call	_BusyXLCD	;wreg free
  8444  002F3E  0900               	iorlw	0
  8445  002F40  A4D8               	btfss	status,2,c
  8446  002F42  EFA5  F017         	goto	u4891
  8447  002F46  EFA7  F017         	goto	u4890
  8448  002F4A                     u4891:
  8449  002F4A  EF9D  F017         	goto	l4229
  8450  002F4E                     u4890:
  8451  002F4E                     
  8452                           ;LCD_libreria.c: 114:         WriteCmdXLCD(lcdtype);
  8453  002F4E  5005               	movf	OpenXLCD@lcdtype^0,w,c
  8454  002F50  EC2A  F01C         	call	_WriteCmdXLCD
  8455  002F54                     l4233:
  8456  002F54  ECE5  F01B         	call	_BusyXLCD	;wreg free
  8457  002F58  0900               	iorlw	0
  8458  002F5A  A4D8               	btfss	status,2,c
  8459  002F5C  EFB2  F017         	goto	u4901
  8460  002F60  EFB4  F017         	goto	u4900
  8461  002F64                     u4901:
  8462  002F64  EFAA  F017         	goto	l4233
  8463  002F68                     u4900:
  8464  002F68                     
  8465                           ;LCD_libreria.c: 118:         WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  8466  002F68  0E08               	movlw	8
  8467  002F6A  EC2A  F01C         	call	_WriteCmdXLCD
  8468  002F6E                     l4237:
  8469  002F6E  ECE5  F01B         	call	_BusyXLCD	;wreg free
  8470  002F72  0900               	iorlw	0
  8471  002F74  A4D8               	btfss	status,2,c
  8472  002F76  EFBF  F017         	goto	u4911
  8473  002F7A  EFC1  F017         	goto	u4910
  8474  002F7E                     u4911:
  8475  002F7E  EFB7  F017         	goto	l4237
  8476  002F82                     u4910:
  8477  002F82                     
  8478                           ;LCD_libreria.c: 120:         WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  8479  002F82  0E0F               	movlw	15
  8480  002F84  EC2A  F01C         	call	_WriteCmdXLCD
  8481  002F88                     l4241:
  8482  002F88  ECE5  F01B         	call	_BusyXLCD	;wreg free
  8483  002F8C  0900               	iorlw	0
  8484  002F8E  A4D8               	btfss	status,2,c
  8485  002F90  EFCC  F017         	goto	u4921
  8486  002F94  EFCE  F017         	goto	u4920
  8487  002F98                     u4921:
  8488  002F98  EFC4  F017         	goto	l4241
  8489  002F9C                     u4920:
  8490  002F9C                     
  8491                           ;LCD_libreria.c: 124:         WriteCmdXLCD(0x01);
  8492  002F9C  0E01               	movlw	1
  8493  002F9E  EC2A  F01C         	call	_WriteCmdXLCD
  8494  002FA2                     l4245:
  8495  002FA2  ECE5  F01B         	call	_BusyXLCD	;wreg free
  8496  002FA6  0900               	iorlw	0
  8497  002FA8  A4D8               	btfss	status,2,c
  8498  002FAA  EFD9  F017         	goto	u4931
  8499  002FAE  EFDB  F017         	goto	u4930
  8500  002FB2                     u4931:
  8501  002FB2  EFD1  F017         	goto	l4245
  8502  002FB6                     u4930:
  8503  002FB6                     
  8504                           ;LCD_libreria.c: 128:         WriteCmdXLCD(0b00000100);
  8505  002FB6  0E04               	movlw	4
  8506  002FB8  EC2A  F01C         	call	_WriteCmdXLCD
  8507  002FBC                     l4249:
  8508  002FBC  ECE5  F01B         	call	_BusyXLCD	;wreg free
  8509  002FC0  0900               	iorlw	0
  8510  002FC2  A4D8               	btfss	status,2,c
  8511  002FC4  EFE6  F017         	goto	u4941
  8512  002FC8  EFE8  F017         	goto	u4940
  8513  002FCC                     u4941:
  8514  002FCC  EFDE  F017         	goto	l4249
  8515  002FD0                     u4940:
  8516  002FD0                     
  8517                           ;LCD_libreria.c: 132:         SetDDRamAddr(0x80);
  8518  002FD0  0E80               	movlw	128
  8519  002FD2  ECF6  F01A         	call	_SetDDRamAddr
  8520  002FD6  0012               	return		;funcret
  8521  002FD8                     __end_of_OpenXLCD:
  8522                           	opt callstack 0
  8523                           
  8524 ;; *************** function _WriteCmdXLCD *****************
  8525 ;; Defined at:
  8526 ;;		line 162 in file "LCD_libreria.c"
  8527 ;; Parameters:    Size  Location     Type
  8528 ;;  cmd             1    wreg     unsigned char 
  8529 ;; Auto vars:     Size  Location     Type
  8530 ;;  cmd             1    0[COMRAM] unsigned char 
  8531 ;; Return value:  Size  Location     Type
  8532 ;;                  1    wreg      void 
  8533 ;; Registers used:
  8534 ;;		wreg, status,2, status,0, cstack
  8535 ;; Tracked objects:
  8536 ;;		On entry : 0/0
  8537 ;;		On exit  : 0/0
  8538 ;;		Unchanged: 0/0
  8539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8540 ;;      Params:         0       0       0       0       0       0       0       0       0
  8541 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8542 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8543 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8544 ;;Total ram usage:        1 bytes
  8545 ;; Hardware stack levels used:    1
  8546 ;; Hardware stack levels required when called:    1
  8547 ;; This function calls:
  8548 ;;		_DelayFor18TCY
  8549 ;; This function is called by:
  8550 ;;		_LCD_gotoXY
  8551 ;;		_OpenXLCD
  8552 ;;		_LCD_Init
  8553 ;;		_main
  8554 ;; This function uses a non-reentrant model
  8555 ;;
  8556                           
  8557                           	psect	text36
  8558  003854                     __ptext36:
  8559                           	opt callstack 0
  8560  003854                     _WriteCmdXLCD:
  8561                           	opt callstack 29
  8562                           
  8563                           ;incstack = 0
  8564                           ;WriteCmdXLCD@cmd stored from wreg
  8565  003854  6E01               	movwf	WriteCmdXLCD@cmd^0,c
  8566  003856                     
  8567                           ;LCD_libreria.c: 162: void WriteCmdXLCD(unsigned char cmd);LCD_libreria.c: 163: {;LCD_li
      +                          breria.c: 181:         TRISD &= 0xf0;
  8568  003856  0EF0               	movlw	240
  8569  003858  1695               	andwf	149,f,c	;volatile
  8570                           
  8571                           ;LCD_libreria.c: 182:         PORTD &= 0xf0;
  8572  00385A  0EF0               	movlw	240
  8573  00385C  1683               	andwf	131,f,c	;volatile
  8574                           
  8575                           ;LCD_libreria.c: 183:         PORTD |= (cmd>>4)&0x0f;
  8576  00385E  3801               	swapf	WriteCmdXLCD@cmd^0,w,c
  8577  003860  0B0F               	andlw	15
  8578  003862  0B0F               	andlw	15
  8579  003864  1283               	iorwf	131,f,c	;volatile
  8580  003866                     
  8581                           ;LCD_libreria.c: 185:         LATDbits.LATD6 = 0;
  8582  003866  9C8C               	bcf	140,6,c	;volatile
  8583  003868                     
  8584                           ;LCD_libreria.c: 186:         LATDbits.LATD5 = 0;
  8585  003868  9A8C               	bcf	140,5,c	;volatile
  8586  00386A                     
  8587                           ;LCD_libreria.c: 187:         DelayFor18TCY();
  8588  00386A  EC18  F01D         	call	_DelayFor18TCY	;wreg free
  8589  00386E                     
  8590                           ;LCD_libreria.c: 188:         LATDbits.LATD4 = 1;
  8591  00386E  888C               	bsf	140,4,c	;volatile
  8592  003870                     
  8593                           ;LCD_libreria.c: 189:         DelayFor18TCY();
  8594  003870  EC18  F01D         	call	_DelayFor18TCY	;wreg free
  8595  003874                     
  8596                           ;LCD_libreria.c: 190:         LATDbits.LATD4 = 0;
  8597  003874  988C               	bcf	140,4,c	;volatile
  8598                           
  8599                           ;LCD_libreria.c: 195:         PORTD &= 0xf0;
  8600  003876  0EF0               	movlw	240
  8601  003878  1683               	andwf	131,f,c	;volatile
  8602                           
  8603                           ;LCD_libreria.c: 196:         PORTD |= cmd&0x0f;
  8604  00387A  5001               	movf	WriteCmdXLCD@cmd^0,w,c
  8605  00387C  0B0F               	andlw	15
  8606  00387E  1283               	iorwf	131,f,c	;volatile
  8607  003880                     
  8608                           ;LCD_libreria.c: 198:         DelayFor18TCY();
  8609  003880  EC18  F01D         	call	_DelayFor18TCY	;wreg free
  8610  003884                     
  8611                           ;LCD_libreria.c: 199:         LATDbits.LATD4 = 1;
  8612  003884  888C               	bsf	140,4,c	;volatile
  8613  003886                     
  8614                           ;LCD_libreria.c: 200:         DelayFor18TCY();
  8615  003886  EC18  F01D         	call	_DelayFor18TCY	;wreg free
  8616  00388A                     
  8617                           ;LCD_libreria.c: 201:         LATDbits.LATD4 = 0;
  8618  00388A  988C               	bcf	140,4,c	;volatile
  8619                           
  8620                           ;LCD_libreria.c: 205:         TRISD |= 0x0f;
  8621  00388C  0E0F               	movlw	15
  8622  00388E  1295               	iorwf	149,f,c	;volatile
  8623  003890  0012               	return		;funcret
  8624  003892                     __end_of_WriteCmdXLCD:
  8625                           	opt callstack 0
  8626                           
  8627 ;; *************** function _SetDDRamAddr *****************
  8628 ;; Defined at:
  8629 ;;		line 303 in file "LCD_libreria.c"
  8630 ;; Parameters:    Size  Location     Type
  8631 ;;  DDaddr          1    wreg     unsigned char 
  8632 ;; Auto vars:     Size  Location     Type
  8633 ;;  DDaddr          1    3[COMRAM] unsigned char 
  8634 ;; Return value:  Size  Location     Type
  8635 ;;                  1    wreg      void 
  8636 ;; Registers used:
  8637 ;;		wreg, status,2, status,0, cstack
  8638 ;; Tracked objects:
  8639 ;;		On entry : 0/0
  8640 ;;		On exit  : 0/0
  8641 ;;		Unchanged: 0/0
  8642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8643 ;;      Params:         0       0       0       0       0       0       0       0       0
  8644 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8645 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8646 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8647 ;;Total ram usage:        4 bytes
  8648 ;; Hardware stack levels used:    1
  8649 ;; Hardware stack levels required when called:    1
  8650 ;; This function calls:
  8651 ;;		_DelayFor18TCY
  8652 ;; This function is called by:
  8653 ;;		_OpenXLCD
  8654 ;; This function uses a non-reentrant model
  8655 ;;
  8656                           
  8657                           	psect	text37
  8658  0035EC                     __ptext37:
  8659                           	opt callstack 0
  8660  0035EC                     _SetDDRamAddr:
  8661                           	opt callstack 27
  8662                           
  8663                           ;incstack = 0
  8664                           ;SetDDRamAddr@DDaddr stored from wreg
  8665  0035EC  6E04               	movwf	SetDDRamAddr@DDaddr^0,c
  8666  0035EE                     
  8667                           ;LCD_libreria.c: 303: void SetDDRamAddr(unsigned char DDaddr);LCD_libreria.c: 304: {;LCD
      +                          _libreria.c: 322:         TRISD &= 0xf0;
  8668  0035EE  0EF0               	movlw	240
  8669  0035F0  1695               	andwf	149,f,c	;volatile
  8670                           
  8671                           ;LCD_libreria.c: 323:         PORTD &= 0xf0;
  8672  0035F2  0EF0               	movlw	240
  8673  0035F4  1683               	andwf	131,f,c	;volatile
  8674                           
  8675                           ;LCD_libreria.c: 324:         PORTD |= (((DDaddr | 0b10000000)>>4) & 0x0f);
  8676  0035F6  5004               	movf	SetDDRamAddr@DDaddr^0,w,c
  8677  0035F8  6E01               	movwf	??_SetDDRamAddr^0,c
  8678  0035FA  6A02               	clrf	(??_SetDDRamAddr+1)^0,c
  8679  0035FC  0E80               	movlw	128
  8680  0035FE  1201               	iorwf	??_SetDDRamAddr^0,f,c
  8681  003600  0E00               	movlw	0
  8682  003602  1202               	iorwf	(??_SetDDRamAddr+1)^0,f,c
  8683  003604  0E04               	movlw	4
  8684  003606  6E03               	movwf	(??_SetDDRamAddr+2)^0,c
  8685  003608                     u4725:
  8686  003608  3402               	rlcf	(??_SetDDRamAddr+1)^0,w,c
  8687  00360A  3202               	rrcf	(??_SetDDRamAddr+1)^0,f,c
  8688  00360C  3201               	rrcf	??_SetDDRamAddr^0,f,c
  8689  00360E  2E03               	decfsz	(??_SetDDRamAddr+2)^0,f,c
  8690  003610  EF04  F01B         	goto	u4725
  8691  003614  5001               	movf	??_SetDDRamAddr^0,w,c
  8692  003616  0B0F               	andlw	15
  8693  003618  1283               	iorwf	131,f,c	;volatile
  8694  00361A                     
  8695                           ;LCD_libreria.c: 326:         LATDbits.LATD6 = 0;
  8696  00361A  9C8C               	bcf	140,6,c	;volatile
  8697  00361C                     
  8698                           ;LCD_libreria.c: 327:         LATDbits.LATD5 = 0;
  8699  00361C  9A8C               	bcf	140,5,c	;volatile
  8700  00361E                     
  8701                           ;LCD_libreria.c: 328:         DelayFor18TCY();
  8702  00361E  EC18  F01D         	call	_DelayFor18TCY	;wreg free
  8703  003622                     
  8704                           ;LCD_libreria.c: 329:         LATDbits.LATD4 = 1;
  8705  003622  888C               	bsf	140,4,c	;volatile
  8706  003624                     
  8707                           ;LCD_libreria.c: 330:         DelayFor18TCY();
  8708  003624  EC18  F01D         	call	_DelayFor18TCY	;wreg free
  8709  003628                     
  8710                           ;LCD_libreria.c: 331:         LATDbits.LATD4 = 0;
  8711  003628  988C               	bcf	140,4,c	;volatile
  8712                           
  8713                           ;LCD_libreria.c: 336:         PORTD &= 0xf0;
  8714  00362A  0EF0               	movlw	240
  8715  00362C  1683               	andwf	131,f,c	;volatile
  8716                           
  8717                           ;LCD_libreria.c: 337:         PORTD |= (DDaddr&0x0f);
  8718  00362E  5004               	movf	SetDDRamAddr@DDaddr^0,w,c
  8719  003630  0B0F               	andlw	15
  8720  003632  1283               	iorwf	131,f,c	;volatile
  8721  003634                     
  8722                           ;LCD_libreria.c: 339:         DelayFor18TCY();
  8723  003634  EC18  F01D         	call	_DelayFor18TCY	;wreg free
  8724  003638                     
  8725                           ;LCD_libreria.c: 340:         LATDbits.LATD4 = 1;
  8726  003638  888C               	bsf	140,4,c	;volatile
  8727  00363A                     
  8728                           ;LCD_libreria.c: 341:         DelayFor18TCY();
  8729  00363A  EC18  F01D         	call	_DelayFor18TCY	;wreg free
  8730  00363E                     
  8731                           ;LCD_libreria.c: 342:         LATDbits.LATD4 = 0;
  8732  00363E  988C               	bcf	140,4,c	;volatile
  8733                           
  8734                           ;LCD_libreria.c: 346:         TRISD |= 0x0f;
  8735  003640  0E0F               	movlw	15
  8736  003642  1295               	iorwf	149,f,c	;volatile
  8737  003644  0012               	return		;funcret
  8738  003646                     __end_of_SetDDRamAddr:
  8739                           	opt callstack 0
  8740                           
  8741 ;; *************** function _DelayPORXLCD *****************
  8742 ;; Defined at:
  8743 ;;		line 44 in file "LCD_libreria.c"
  8744 ;; Parameters:    Size  Location     Type
  8745 ;;		None
  8746 ;; Auto vars:     Size  Location     Type
  8747 ;;		None
  8748 ;; Return value:  Size  Location     Type
  8749 ;;                  1    wreg      void 
  8750 ;; Registers used:
  8751 ;;		wreg
  8752 ;; Tracked objects:
  8753 ;;		On entry : 0/0
  8754 ;;		On exit  : 0/0
  8755 ;;		Unchanged: 0/0
  8756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8757 ;;      Params:         0       0       0       0       0       0       0       0       0
  8758 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8759 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8760 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8761 ;;Total ram usage:        1 bytes
  8762 ;; Hardware stack levels used:    1
  8763 ;; This function calls:
  8764 ;;		Nothing
  8765 ;; This function is called by:
  8766 ;;		_OpenXLCD
  8767 ;; This function uses a non-reentrant model
  8768 ;;
  8769                           
  8770                           	psect	text38
  8771  003A4A                     __ptext38:
  8772                           	opt callstack 0
  8773  003A4A                     _DelayPORXLCD:
  8774                           	opt callstack 28
  8775  003A4A                     
  8776                           ;LCD_libreria.c: 45:     _delay((unsigned long)((15)*(20000000L/4000.0)));
  8777  003A4A  0E62               	movlw	98
  8778  003A4C  6E01               	movwf	??_DelayPORXLCD^0,c
  8779  003A4E  0E66               	movlw	102
  8780  003A50                     u5237:
  8781  003A50  2EE8               	decfsz	wreg,f,c
  8782  003A52  D7FE               	bra	u5237
  8783  003A54  2E01               	decfsz	??_DelayPORXLCD^0,f,c
  8784  003A56  D7FC               	bra	u5237
  8785  003A58  0012               	return		;funcret
  8786  003A5A                     __end_of_DelayPORXLCD:
  8787                           	opt callstack 0
  8788                           
  8789 ;; *************** function _BusyXLCD *****************
  8790 ;; Defined at:
  8791 ;;		line 446 in file "LCD_libreria.c"
  8792 ;; Parameters:    Size  Location     Type
  8793 ;;		None
  8794 ;; Auto vars:     Size  Location     Type
  8795 ;;		None
  8796 ;; Return value:  Size  Location     Type
  8797 ;;                  1    wreg      unsigned char 
  8798 ;; Registers used:
  8799 ;;		wreg, cstack
  8800 ;; Tracked objects:
  8801 ;;		On entry : 0/0
  8802 ;;		On exit  : 0/0
  8803 ;;		Unchanged: 0/0
  8804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8805 ;;      Params:         0       0       0       0       0       0       0       0       0
  8806 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8807 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8808 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8809 ;;Total ram usage:        0 bytes
  8810 ;; Hardware stack levels used:    1
  8811 ;; Hardware stack levels required when called:    1
  8812 ;; This function calls:
  8813 ;;		_DelayFor18TCY
  8814 ;; This function is called by:
  8815 ;;		_OpenXLCD
  8816 ;;		_putrsXLCD
  8817 ;;		_WriteDataXLCD
  8818 ;;		_LCD_Init
  8819 ;;		_putsXLCD
  8820 ;;		_SetCGRamAddr
  8821 ;; This function uses a non-reentrant model
  8822 ;;
  8823                           
  8824                           	psect	text39
  8825  0037CA                     __ptext39:
  8826                           	opt callstack 0
  8827  0037CA                     _BusyXLCD:
  8828                           	opt callstack 27
  8829  0037CA                     
  8830                           ;LCD_libreria.c: 448:         LATDbits.LATD6 = 1;
  8831  0037CA  8C8C               	bsf	140,6,c	;volatile
  8832                           
  8833                           ;LCD_libreria.c: 449:         LATDbits.LATD5 = 0;
  8834  0037CC  9A8C               	bcf	140,5,c	;volatile
  8835  0037CE                     
  8836                           ;LCD_libreria.c: 450:         DelayFor18TCY();
  8837  0037CE  EC18  F01D         	call	_DelayFor18TCY	;wreg free
  8838  0037D2                     
  8839                           ;LCD_libreria.c: 451:         LATDbits.LATD4 = 1;
  8840  0037D2  888C               	bsf	140,4,c	;volatile
  8841                           
  8842                           ;LCD_libreria.c: 452:         DelayFor18TCY();
  8843  0037D4  EC18  F01D         	call	_DelayFor18TCY	;wreg free
  8844  0037D8                     
  8845                           ;LCD_libreria.c: 470:         if(PORTD&0x08)
  8846  0037D8  A683               	btfss	131,3,c	;volatile
  8847  0037DA  EFF1  F01B         	goto	u4711
  8848  0037DE  EFF3  F01B         	goto	u4710
  8849  0037E2                     u4711:
  8850  0037E2  EFFE  F01B         	goto	l110
  8851  0037E6                     u4710:
  8852  0037E6                     
  8853                           ;LCD_libreria.c: 472:         {;LCD_libreria.c: 473:                 LATDbits.LATD4 = 0;
  8854  0037E6  988C               	bcf	140,4,c	;volatile
  8855  0037E8                     
  8856                           ;LCD_libreria.c: 474:                 DelayFor18TCY();
  8857  0037E8  EC18  F01D         	call	_DelayFor18TCY	;wreg free
  8858  0037EC                     
  8859                           ;LCD_libreria.c: 475:                 LATDbits.LATD4 = 1;
  8860  0037EC  888C               	bsf	140,4,c	;volatile
  8861                           
  8862                           ;LCD_libreria.c: 476:                 DelayFor18TCY();
  8863  0037EE  EC18  F01D         	call	_DelayFor18TCY	;wreg free
  8864  0037F2                     
  8865                           ;LCD_libreria.c: 477:                 LATDbits.LATD4 = 0;
  8866  0037F2  988C               	bcf	140,4,c	;volatile
  8867  0037F4                     
  8868                           ;LCD_libreria.c: 478:                 LATDbits.LATD6 = 0;
  8869  0037F4  9C8C               	bcf	140,6,c	;volatile
  8870  0037F6                     
  8871                           ;LCD_libreria.c: 479:                 return 1;
  8872  0037F6  0E01               	movlw	1
  8873  0037F8  EF07  F01C         	goto	l111
  8874  0037FC                     l110:
  8875                           
  8876                           ;LCD_libreria.c: 482:         {;LCD_libreria.c: 483:                 LATDbits.LATD4 = 0;
  8877  0037FC  988C               	bcf	140,4,c	;volatile
  8878  0037FE                     
  8879                           ;LCD_libreria.c: 484:                 DelayFor18TCY();
  8880  0037FE  EC18  F01D         	call	_DelayFor18TCY	;wreg free
  8881  003802                     
  8882                           ;LCD_libreria.c: 485:                 LATDbits.LATD4 = 1;
  8883  003802  888C               	bsf	140,4,c	;volatile
  8884                           
  8885                           ;LCD_libreria.c: 486:                 DelayFor18TCY();
  8886  003804  EC18  F01D         	call	_DelayFor18TCY	;wreg free
  8887  003808                     
  8888                           ;LCD_libreria.c: 487:                 LATDbits.LATD4 = 0;
  8889  003808  988C               	bcf	140,4,c	;volatile
  8890  00380A                     
  8891                           ;LCD_libreria.c: 488:                 LATDbits.LATD6 = 0;
  8892  00380A  9C8C               	bcf	140,6,c	;volatile
  8893  00380C                     
  8894                           ;LCD_libreria.c: 489:                 return 0;
  8895  00380C  0E00               	movlw	0
  8896  00380E                     l111:
  8897  00380E  0012               	return		;funcret
  8898  003810                     __end_of_BusyXLCD:
  8899                           	opt callstack 0
  8900                           
  8901 ;; *************** function _DelayFor18TCY *****************
  8902 ;; Defined at:
  8903 ;;		line 27 in file "LCD_libreria.c"
  8904 ;; Parameters:    Size  Location     Type
  8905 ;;		None
  8906 ;; Auto vars:     Size  Location     Type
  8907 ;;		None
  8908 ;; Return value:  Size  Location     Type
  8909 ;;                  1    wreg      void 
  8910 ;; Registers used:
  8911 ;;		None
  8912 ;; Tracked objects:
  8913 ;;		On entry : 0/0
  8914 ;;		On exit  : 0/0
  8915 ;;		Unchanged: 0/0
  8916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8917 ;;      Params:         0       0       0       0       0       0       0       0       0
  8918 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8919 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8920 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8921 ;;Total ram usage:        0 bytes
  8922 ;; Hardware stack levels used:    1
  8923 ;; This function calls:
  8924 ;;		Nothing
  8925 ;; This function is called by:
  8926 ;;		_WriteCmdXLCD
  8927 ;;		_SetDDRamAddr
  8928 ;;		_WriteDataXLCD
  8929 ;;		_BusyXLCD
  8930 ;;		_ReadAddrXLCD
  8931 ;;		_ReadDataXLCD
  8932 ;; This function uses a non-reentrant model
  8933 ;;
  8934                           
  8935                           	psect	text40
  8936  003A30                     __ptext40:
  8937                           	opt callstack 0
  8938  003A30                     _DelayFor18TCY:
  8939                           	opt callstack 28
  8940  003A30                     
  8941                           ;LCD_libreria.c: 28:     __nop();
  8942  003A30  F000               	nop	
  8943                           
  8944                           ;LCD_libreria.c: 29:     __nop();
  8945  003A32  F000               	nop	
  8946                           
  8947                           ;LCD_libreria.c: 30:     __nop();
  8948  003A34  F000               	nop	
  8949                           
  8950                           ;LCD_libreria.c: 31:     __nop();
  8951  003A36  F000               	nop	
  8952                           
  8953                           ;LCD_libreria.c: 32:     __nop();
  8954  003A38  F000               	nop	
  8955                           
  8956                           ;LCD_libreria.c: 33:     __nop();
  8957  003A3A  F000               	nop	
  8958                           
  8959                           ;LCD_libreria.c: 34:     __nop();
  8960  003A3C  F000               	nop	
  8961                           
  8962                           ;LCD_libreria.c: 35:     __nop();
  8963  003A3E  F000               	nop	
  8964                           
  8965                           ;LCD_libreria.c: 36:     __nop();
  8966  003A40  F000               	nop	
  8967                           
  8968                           ;LCD_libreria.c: 37:     __nop();
  8969  003A42  F000               	nop	
  8970                           
  8971                           ;LCD_libreria.c: 38:     __nop();
  8972  003A44  F000               	nop	
  8973                           
  8974                           ;LCD_libreria.c: 39:     __nop();
  8975  003A46  F000               	nop	
  8976  003A48  0012               	return		;funcret
  8977  003A4A                     __end_of_DelayFor18TCY:
  8978                           	opt callstack 0
  8979                           
  8980 ;; *************** function _ADC_Read *****************
  8981 ;; Defined at:
  8982 ;;		line 34 in file "ADC_Libreria.c"
  8983 ;; Parameters:    Size  Location     Type
  8984 ;;  ch              1    wreg     unsigned char 
  8985 ;; Auto vars:     Size  Location     Type
  8986 ;;  ch              1    2[COMRAM] unsigned char 
  8987 ;; Return value:  Size  Location     Type
  8988 ;;                  2    0[COMRAM] unsigned int 
  8989 ;; Registers used:
  8990 ;;		wreg, status,2, status,0
  8991 ;; Tracked objects:
  8992 ;;		On entry : 0/0
  8993 ;;		On exit  : 0/0
  8994 ;;		Unchanged: 0/0
  8995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8996 ;;      Params:         2       0       0       0       0       0       0       0       0
  8997 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8998 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8999 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9000 ;;Total ram usage:        3 bytes
  9001 ;; Hardware stack levels used:    1
  9002 ;; This function calls:
  9003 ;;		Nothing
  9004 ;; This function is called by:
  9005 ;;		_main
  9006 ;; This function uses a non-reentrant model
  9007 ;;
  9008                           
  9009                           	psect	text41
  9010  00373C                     __ptext41:
  9011                           	opt callstack 0
  9012  00373C                     _ADC_Read:
  9013                           	opt callstack 30
  9014                           
  9015                           ;incstack = 0
  9016                           ;ADC_Read@ch stored from wreg
  9017  00373C  6E03               	movwf	ADC_Read@ch^0,c
  9018  00373E                     
  9019                           ;ADC_Libreria.c: 35:     if(ch > 13)return 0;
  9020  00373E  0E0D               	movlw	13
  9021  003740  6403               	cpfsgt	ADC_Read@ch^0,c
  9022  003742  EFA5  F01B         	goto	u5021
  9023  003746  EFA7  F01B         	goto	u5020
  9024  00374A                     u5021:
  9025  00374A  EFAD  F01B         	goto	l4297
  9026  00374E                     u5020:
  9027  00374E  0E00               	movlw	0
  9028  003750  6E02               	movwf	(?_ADC_Read+1)^0,c
  9029  003752  0E00               	movlw	0
  9030  003754  6E01               	movwf	?_ADC_Read^0,c
  9031  003756  EFC1  F01B         	goto	l169
  9032  00375A                     l4297:
  9033                           
  9034                           ;ADC_Libreria.c: 36:     ADCON0 = 0x00;
  9035  00375A  0E00               	movlw	0
  9036  00375C  6EC2               	movwf	194,c	;volatile
  9037  00375E                     
  9038                           ;ADC_Libreria.c: 37:     ADCON0 = (ch<<2);
  9039  00375E  4403               	rlncf	ADC_Read@ch^0,w,c
  9040  003760  46E8               	rlncf	wreg,f,c
  9041  003762  0BFC               	andlw	252
  9042  003764  6EC2               	movwf	194,c	;volatile
  9043  003766                     
  9044                           ;ADC_Libreria.c: 41:     ADCON0bits.ADON = 1;
  9045  003766  80C2               	bsf	194,0,c	;volatile
  9046  003768                     
  9047                           ;ADC_Libreria.c: 42:     ADCON0bits.GO_DONE = 1;
  9048  003768  82C2               	bsf	194,1,c	;volatile
  9049  00376A                     l170:
  9050  00376A  B2C2               	btfsc	194,1,c	;volatile
  9051  00376C  EFBA  F01B         	goto	u5031
  9052  003770  EFBC  F01B         	goto	u5030
  9053  003774                     u5031:
  9054  003774  EFB5  F01B         	goto	l170
  9055  003778                     u5030:
  9056  003778                     
  9057                           ;ADC_Libreria.c: 44:     ADCON0bits.ADON = 0;
  9058  003778  90C2               	bcf	194,0,c	;volatile
  9059                           
  9060                           ;ADC_Libreria.c: 45:     return ADRES;
  9061  00377A  CFC3 F001          	movff	4035,?_ADC_Read	;volatile
  9062  00377E  CFC4 F002          	movff	4036,?_ADC_Read+1	;volatile
  9063  003782                     l169:
  9064  003782  0012               	return		;funcret
  9065  003784                     __end_of_ADC_Read:
  9066                           	opt callstack 0
  9067                           
  9068 ;; *************** function _ADC_Init *****************
  9069 ;; Defined at:
  9070 ;;		line 19 in file "ADC_Libreria.c"
  9071 ;; Parameters:    Size  Location     Type
  9072 ;;		None
  9073 ;; Auto vars:     Size  Location     Type
  9074 ;;		None
  9075 ;; Return value:  Size  Location     Type
  9076 ;;                  1    wreg      void 
  9077 ;; Registers used:
  9078 ;;		wreg, status,2
  9079 ;; Tracked objects:
  9080 ;;		On entry : 0/0
  9081 ;;		On exit  : 0/0
  9082 ;;		Unchanged: 0/0
  9083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9084 ;;      Params:         0       0       0       0       0       0       0       0       0
  9085 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9086 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9087 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9088 ;;Total ram usage:        0 bytes
  9089 ;; Hardware stack levels used:    1
  9090 ;; This function calls:
  9091 ;;		Nothing
  9092 ;; This function is called by:
  9093 ;;		_main
  9094 ;; This function uses a non-reentrant model
  9095 ;;
  9096                           
  9097                           	psect	text42
  9098  003A10                     __ptext42:
  9099                           	opt callstack 0
  9100  003A10                     _ADC_Init:
  9101                           	opt callstack 30
  9102  003A10                     
  9103                           ;ADC_Libreria.c: 20:     ADCON1bits.PCFG = 0;
  9104  003A10  0EF0               	movlw	-16
  9105  003A12  16C1               	andwf	193,f,c	;volatile
  9106                           
  9107                           ;ADC_Libreria.c: 21:     ADCON1bits.VCFG = 0;
  9108  003A14  0ECF               	movlw	-49
  9109  003A16  16C1               	andwf	193,f,c	;volatile
  9110                           
  9111                           ;ADC_Libreria.c: 22:     ADCON0 = 0;
  9112  003A18  0E00               	movlw	0
  9113  003A1A  6EC2               	movwf	194,c	;volatile
  9114                           
  9115                           ;ADC_Libreria.c: 29:     ADCON2bits.ACQT = 3;
  9116  003A1C  50C0               	movf	192,w,c	;volatile
  9117  003A1E  0BC7               	andlw	-57
  9118  003A20  0918               	iorlw	24
  9119  003A22  6EC0               	movwf	192,c	;volatile
  9120                           
  9121                           ;ADC_Libreria.c: 30:     ADCON2bits.ADCS = 5;
  9122  003A24  50C0               	movf	192,w,c	;volatile
  9123  003A26  0BF8               	andlw	-8
  9124  003A28  0905               	iorlw	5
  9125  003A2A  6EC0               	movwf	192,c	;volatile
  9126  003A2C                     
  9127                           ;ADC_Libreria.c: 31:     ADCON2bits.ADFM = 1;
  9128  003A2C  8EC0               	bsf	192,7,c	;volatile
  9129  003A2E  0012               	return		;funcret
  9130  003A30                     __end_of_ADC_Init:
  9131                           	opt callstack 0
  9132                           
  9133                           	psect	rparam
  9134  0000                     tosu	equ	0xFFF
  9135                           tosh	equ	0xFFE
  9136                           tosl	equ	0xFFD
  9137                           stkptr	equ	0xFFC
  9138                           pclatu	equ	0xFFB
  9139                           pclath	equ	0xFFA
  9140                           pcl	equ	0xFF9
  9141                           tblptru	equ	0xFF8
  9142                           tblptrh	equ	0xFF7
  9143                           tblptrl	equ	0xFF6
  9144                           tablat	equ	0xFF5
  9145                           prodh	equ	0xFF4
  9146                           prodl	equ	0xFF3
  9147                           indf0	equ	0xFEF
  9148                           postinc0	equ	0xFEE
  9149                           postdec0	equ	0xFED
  9150                           preinc0	equ	0xFEC
  9151                           plusw0	equ	0xFEB
  9152                           fsr0h	equ	0xFEA
  9153                           fsr0l	equ	0xFE9
  9154                           wreg	equ	0xFE8
  9155                           indf1	equ	0xFE7
  9156                           postinc1	equ	0xFE6
  9157                           postdec1	equ	0xFE5
  9158                           preinc1	equ	0xFE4
  9159                           plusw1	equ	0xFE3
  9160                           fsr1h	equ	0xFE2
  9161                           fsr1l	equ	0xFE1
  9162                           bsr	equ	0xFE0
  9163                           indf2	equ	0xFDF
  9164                           postinc2	equ	0xFDE
  9165                           postdec2	equ	0xFDD
  9166                           preinc2	equ	0xFDC
  9167                           plusw2	equ	0xFDB
  9168                           fsr2h	equ	0xFDA
  9169                           fsr2l	equ	0xFD9
  9170                           status	equ	0xFD8


Data Sizes:
    Strings     76
    Constant    0
    Data        0
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    107     149
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> datos(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> datos(BANK0[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1022_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> datos(BANK0[20]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> datos(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 20
		 -> datos(BANK0[20]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[18]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _atoi->_isspace
    _putrsXLCD->_WriteDataXLCD
    _LCD_gotoXY->_WriteCmdXLCD
    _LCD_Init->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   34287
                                            105 BANK0      2     2      0
                           _ADC_Init
                           _ADC_Read
                           _LCD_Init
                         _LCD_gotoXY
                       _WriteCmdXLCD
                            ___fldiv
                            ___flmul
                           ___xxtofl
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   27873
                                             87 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   27516
                                             79 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   27144
                                             91 COMRAM     4     4      0
                                             61 BANK0     18    12      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   21845
                                             84 COMRAM     7     0      7
                                              0 BANK0     61    61      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2504
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     638
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1152
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _putrsXLCD                                            2     0      2     393
                                              1 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      44
                                              0 COMRAM     1     1      0
                           _BusyXLCD
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _LCD_gotoXY                                           4     0      4     718
                                              1 COMRAM     4     0      4
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     154
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0     110
                                              4 COMRAM     1     1      0
                           _BusyXLCD
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (1) _WriteCmdXLCD                                         1     1      0      44
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         4     4      0      44
                                              0 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             3     1      2      44
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _LCD_Init
     _BusyXLCD
       _DelayFor18TCY
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
       _DelayPORXLCD
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
   _LCD_gotoXY
     _WriteCmdXLCD
       _DelayFor18TCY
   _WriteCmdXLCD
     _DelayFor18TCY
   ___fldiv
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _putrsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _BusyXLCD
         _DelayFor18TCY
       _DelayFor18TCY
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6B      95       5       93.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     144      20        0.0%
DATA                 0      0     144       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Mar 29 19:42:25 2020

           ___fldiv@aexp 0040             ___fldiv@bexp 003F             ___fldiv@sign 0038  
                     l25 3A48                       l28 3A58                       l36 399E  
                     l65 2FD6                       l74 34CC                       l86 3890  
                     l98 3644             ___awdiv@sign 0006      ___wmul@multiplicand 0003  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l110 37FC  
                    l111 380E                      l107 373A                      l213 31BE  
                    l144 39C6                      l216 3200                      l170 376A  
                    l218 323C                      l172 3778                      l236 13FC  
                    l340 352E                      l165 3A2E                      l333 1C70  
                    l254 0C3A                      l326 1D2A                      l343 39EC  
                    l280 0FD2                      l169 3782                      l602 345A  
                    l339 3526                      l613 2DEE                      l608 2DA8  
                    l640 2CEA                      l617 3900                      l574 3300  
                    l913 37C8                      l930 2312                      l587 33B0  
                    l925 24EE                      l927 234E                      l871 15EC  
                    l936 2394                      l880 18BC                      l872 15DA  
                    l961 2154                      l873 15A0                      l938 240C  
                    l939 23FA                      l964 1FE6                      l957 1DF0  
                    l974 2116                      l966 205E                      l967 204C  
                    l888 1706                      l897 17D6                      l898 17C4  
                    l998 2758             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
            ?_LCD_gotoXY 0002             __CFG_BOR$OFF 000000                      _pad 3178  
  __size_of_WriteCmdXLCD 003E             ___awmod@sign 0006                      wreg 000FE8  
           __CFG_FOSC$HS 000000             ___flmul@aexp 0020             ___flmul@bexp 0021  
           ___flmul@sign 001B             ___flmul@temp 0026             ___flmul@prod 0022  
           __CFG_LVP$OFF 000000             ___fltol@exp1 000A             __CFG_WDT$OFF 000000  
                   l1001 28B4                     l1012 284C                     l1005 27F0  
                   l1101 3176                     l1024 2EEC                     l1131 396E  
                   l1116 3696                     l1053 2BDC                     l1109 3852  
                   l1125 35EA                     l1062 2700                     l1150 358E  
                   l1119 3A5A                     l1135 30AC                     l1072 3938  
                   l1080 36E8                     l1056 2BE4                     l3001 1674  
                   l1065 2644                     l1145 3586                     l3011 16E6  
                   l3003 167A                     l3021 1740                     l3005 16A0  
                   l3013 16F6                     l1086 38C8                     l3031 1770  
                   l3023 174A                     l3015 171C                     l3007 16D4  
                   l3111 2E82                     l3103 2DF0                     l4001 3866  
                   l3201 21D6                     l3041 1798                     l3033 1774  
                   l3025 1758                     l3017 172C                     l3009 16D6  
                   l3121 2EE4                     l3105 2E10                     l4011 3874  
                   l4003 3868                     l3211 220A                     l3203 21D8  
                   l3051 17F2                     l3043 17A6                     l3035 1784  
                   l3027 175A                     l3107 2E4E                     l3115 2E8E  
                   l4013 3880                     l4005 386A                     l3301 24CE  
                   l3221 2250                     l3205 21E8                     l3213 2212  
                   l3061 185C                     l3053 1800                     l3045 17BC  
                   l3029 1768                     l3037 1786                     l3117 2EA0  
                   l3109 2E76                     l3141 2510                     l3125 3590  
                   l3133 3566                     l4101 199E                     l4031 37E6  
                   l4023 37CA                     l4015 3884                     l4007 386E  
                   l3303 24DC                     l3231 2278                     l3223 2254  
                   l3215 2222                     l3207 21F8                     l3071 1896  
                   l3063 187C                     l3055 183A                     l3039 1794  
                   l3151 25F8                     l3143 2566                     l3127 35A0  
                   l3135 3578                     l4103 19BE                     l4111 1A26  
                   l4041 37F6                     l4033 37E8                     l4025 37CE  
                   l4017 3886                     l4009 3870                     l4201 2EF0  
                   l3305 24E2                     l3241 22C6                     l3217 2238  
                   l3209 2208                     l3401 1FE4                     l3321 1D48  
                   l3073 189C                     l3065 1880                     l3049 17E6  
                   l3057 183C                     l3161 26E0                     l3153 2634  
                   l3145 257A                     l3081 3178                     l3129 3530  
                   l4121 1ACC                     l4113 1A48                     l4105 19CC  
                   l4051 3808                     l4035 37EC                     l4027 37D2  
                   l4019 388A                     l4211 2F00                     l4203 2EF8  
                   l3171 39C8                     l3307 24E4                     l3251 2310  
                   l3243 22D6                     l3235 228C                     l3219 2248  
                   l3227 2268                     l3411 2044                     l3403 1FF6  
                   l3331 1D8E                     l3323 1D58                     l3315 1D2C  
                   l3075 18AA                     l3067 188E                     l3059 184C  
                   l3163 26F0                     l3147 2588                     l3155 2668  
                   l3139 24F0                     l3091 31CA                     l3083 3188  
                   l4123 1ADE                     l4115 1A58                     l4301 3766  
                   l4053 380A                     l4037 37F2                     l4029 37D8  
                   l4061 361A                     l4221 2F14                     l4213 2F02  
                   l4205 2EFA                     l3173 39E4                     l3501 331C  
                   l3261 235E                     l3253 231C                     l3245 22DE  
                   l3237 22A6                     l3229 2278                     l3181 2170  
                   l3421 20B2                     l3405 2004                     l3341 1DBA  
                   l3333 1D94                     l3325 1D68                     l3317 1D38  
                   l3077 18AC                     l3069 1894                     l3157 26A4  
                   l3093 31DE                     l3085 319C                     l4141 1C0C  
                   l4125 1AF4                     l4133 1B5E                     l4117 1A8A  
                   l4109 1A14                     l4303 3768                     l4055 380C  
                   l4047 37FE                     l4039 37F4                     l4071 3628  
                   l4063 361C                     l4231 2F4E                     l4223 2F1A  
                   l4215 2F04                     l4207 2EFC                     l3167 3902  
                   l3511 3350                     l3503 3320                     l3263 2374  
                   l3271 23A4                     l3255 233A                     l3247 22EE  
                   l3239 22B6                     l3191 21A4                     l3183 2172  
                   l3431 211A                     l3415 206E                     l3423 20B6  
                   l3407 2008                     l3351 1E10                     l3343 1DCA  
                   l3335 1D9A                     l3327 1D78                     l3319 1D46  
                   l3159 26B8                     l3095 31E2                     l3087 31AA  
                   l4151 1CA8                     l4143 1C40                     l4135 1B8C  
                   l4127 1B02                     l4119 1A9A                     l4311 3668  
                   l4049 3802                     l4073 3634                     l4065 361E  
                   l4241 2F88                     l4233 2F54                     l4225 2F20  
                   l4217 2F08                     l4209 2EFE                     l4321 2722  
                   l3521 338A                     l3513 3358                     l3505 332E  
                   l3273 23B2                     l3265 237A                     l3257 233C  
                   l3249 2302                     l3185 2182                     l3193 21AC  
                   l3177 2156                     l3441 2144                     l3433 212A  
                   l3425 20D0                     l3417 207A                     l3409 2016  
                   l3361 1E50                     l3345 1DDA                     l3337 1DA8  
                   l3329 1D7E                     l3601 2C80                     l3097 3210  
                   l3089 31B6                     l4161 1CE6                     l4153 1CB6  
                   l4129 1B32                     l4313 3684                     l4305 3646  
                   l4075 3638                     l4067 3622                     l4059 35EE  
                   l4251 2FD0                     l4243 2F9C                     l4235 2F68  
                   l4227 2F26                     l4219 2F0E                     l4331 279A  
                   l4323 2768                     l3451 323E                     l3515 3366  
                   l3523 3390                     l3507 3336                     l3283 241C  
                   l3291 2464                     l3275 23B6                     l3267 2384  
                   l3259 234C                     l3195 21BC                     l3187 2192  
                   l3179 2162                     l3531 33B2                     l3435 2138  
                   l3427 20E4                     l3419 2088                     l3371 1E9A  
                   l3363 1E5C                     l3355 1E24                     l3347 1DE0  
                   l3339 1DAA                     l3611 2CAA                     l3603 2C8A  
                   l3099 3224                     l4155 1CCA                     l4139 1BFA  
                   l4091 1906                     l4083 18BE                     l4307 3658  
                   l4077 363A                     l4069 3624                     l4245 2FA2  
                   l4237 2F6E                     l4229 2F3A                     l4341 2822  
                   l4333 27A6                     l4325 277E                     l4317 2704  
                   l4181 3712                     l4173 36EC                     l3621 3698  
                   l3461 326A                     l3453 3242                     l3525 33A0  
                   l3517 337C                     l3509 3348                     l3293 247E  
                   l3285 2428                     l3277 23C4                     l3269 2392  
                   l3197 21C2                     l3189 21A2                     l3541 3452  
                   l3533 33E0                     l3437 213A                     l3429 20FE  
                   l3381 1EEC                     l3373 1EA6                     l3365 1E74  
                   l3357 1E30                     l3349 1E00                     l2901 147C  
                   l3445 3784                     l3613 2CBA                     l3701 0A82  
                   l4149 1C84                     l4093 192A                     l4085 18E2  
                   l4165 1CF4                     l4261 350A                     l4309 3660  
                   l4501 2A02                     l4079 363E                     l4247 2FB6  
                   l4239 2F82                     l4263 3970                     l4351 2860  
                   l4343 282E                     l4335 27D8                     l4319 2714  
                   l4191 372A                     l4183 3714                     l4175 36EC  
                   l4271 345C                     l3623 369C                     l3471 3298  
                   l3463 3272                     l3455 3250                     l3527 33A8  
                   l3519 3384                     l3295 2494                     l3287 2436  
                   l3279 23F2                     l3199 21C8                     l3543 3458  
                   l3535 33F0                     l3551 2D2A                     l3439 2140  
                   l3391 1F6A                     l3383 1EFC                     l3375 1EB6  
                   l3367 1E80                     l3359 1E3A                     l2911 14A4  
                   l2903 147E                     l3447 3794                     l3615 2CCA  
                   l3711 0B0C                     l3703 0A9C                     l4167 1D18  
                   l4159 1CD8                     l4095 1932                     l4087 18F0  
                   l4255 34CE                     l4503 2A28                     l3633 3A30  
                   l4249 2FBC                     l4281 39A0                     l4265 398A  
                   l4353 2884                     l4345 283C                     l4337 27DA  
                   l4329 2792                     l4193 372E                     l4185 3718  
                   l4177 3700                     l4273 3460                     l3625 36B0  
                   l3481 32D2                     l3473 32A0                     l3465 3276  
                   l3457 3258                     l3297 24AE                     l3289 2460  
                   l3537 341E                     l3561 2D96                     l3553 2D58  
                   l3393 1FA0                     l3385 1F18                     l3377 1EC2  
                   l3369 1E8C                     l2921 14DE                     l2913 14B4  
                   l2905 1484                     l3617 2CDA                     l3609 2C9E  
                   l3801 0FAA                     l3721 0BE4                     l3713 0B66  
                   l3641 0876                     l4097 1940                     l4089 1902  
                   l4257 34D6                     l4505 2A34                     l4291 373E  
                   l4283 39A6                     l4267 3996                     l4355 2894  
                   l4347 285A                     l4339 27E6                     l4195 3730  
                   l4187 371A                     l4179 3710                     l4275 3474  
                   l3627 36DE                     l3491 32F8                     l3483 32D4  
                   l3475 32AE                     l3467 327E                     l3459 325C  
                   l3299 24CA                     l3539 342E                     l3563 2DE6  
                   l3555 2D68                     l3547 2CEC                     l3395 1FAE  
                   l3387 1F24                     l3379 1ED2                     l3571 38E0  
                   l2931 150A                     l2923 14F0                     l2915 14C4  
                   l2907 1492                     l2851 30FA                     l2843 30AE  
                   l3811 1062                     l3803 0FBE                     l3731 0C2E  
                   l3723 0BE8                     l3715 0B9A                     l3707 0AD2  
                   l3651 08C6                     l3643 087E                     l3635 084E  
                   l4099 1964                     l4259 34E4                     l4293 374E  
                   l4285 39BA                     l4357 28A2                     l4349 285C  
                   l4197 3734                     l4189 371E                     l4277 3498  
                   l3629 36E2                     l3485 32DA                     l3477 32B4  
                   l3469 3290                     l3565 2DEC                     l3557 2D76  
                   l3549 2D1A                     l3397 1FCC                     l3389 1F40  
                   l3573 38F0                     l2941 151E                     l2933 150E  
                   l2925 14FE                     l2917 14C6                     l2909 1494  
                   l2853 3130                     l2845 30C0                     l2861 382E  
                   l3901 132A                     l3821 10AE                     l3813 1074  
                   l3805 0FCA                     l3741 0C6A                     l3725 0BFA  
                   l3733 0C46                     l3717 0BA2                     l3709 0B06  
                   l3661 08FE                     l3653 08D4                     l3645 08A2  
                   l3637 0858                     ?_pad 0011                     l4287 3A10  
                   l4359 28A4                     l4279 349C                     l4527 2B12  
                   l3479 32CA                     l3487 32E0                     l3495 3302  
                   l3559 2D88                     l3399 1FD6                     l2951 1532  
                   l2943 1522                     l2935 1512                     l2927 1502  
                   l2919 14CE                     l3591 2C50                     l3583 2C10  
                   l2847 30D2                     l2863 3832                     l2871 3962  
                   l3911 1366                     l3903 133C                     l3831 10E2  
                   l3823 10BC                     l3815 1086                     l3807 0FEE  
                   l3751 0CD0                     l3743 0C86                     l3727 0C0C  
                   l3719 0BD4                     l3671 0964                     l3663 0902  
                   l3655 08E6                     l3647 08AC                     l3639 0868  
                   l4471 28BA                     l4289 3A2C                     l4297 375A  
                   l3489 32F0                     l3497 3306                     l3569 38CA  
                   l2961 156C                     l2953 1536                     l2945 1526  
                   l2937 1516                     l2929 1506                     l2881 140A  
                   l3593 2C5E                     l3585 2C3A                     l3577 2BE6  
                   l2849 30DC                     l2857 3810                     l2865 393A  
                   l3921 13BE                     l3913 136C                     l3905 1348  
                   l3841 1114                     l3833 10F2                     l3825 10CC  
                   l3817 1094                     l3809 1052                     l3761 0D18  
                   l3753 0CE2                     l3745 0CBC                     l3729 0C14  
                   l3673 0976                     l3657 08F2                     l3665 0908  
                   l3649 08B4                     l4481 28FC                     l4473 28BE  
                   l4299 375E                     l3499 3314                     l2971 15BE  
                   l2963 1588                     l2955 153A                     l2947 152A  
                   l2939 151A                     l2891 144A                     l2883 1418  
                   l3587 2C3C                     l3579 2BFC                     l2859 381C  
                   l2867 3946                     l2875 3892                     l3923 13C6  
                   l3907 1350                     l3851 11BC                     l3843 1126  
                   l3835 10F6                     l3827 10D0                     l3819 109C  
                   l3771 0D60                     l3763 0D26                     l3755 0CF4  
                   l3747 0CC4                     l3739 0C58                     l3691 0A4A  
                   l3675 0992                     l3667 092E                     l3683 09DC  
                   l3659 08FA                     l4491 2950                     l4483 2910  
                   l4475 28C2                     l3941 2A8E                     l3933 2A56  
                   l2981 160A                     l2973 15CC                     l2965 1598  
                   l2949 152E                     l2957 153E                     l2893 144C  
                   l2885 141A                     l3589 2C4C                     l2869 394A  
                   l3925 13D6                     l3917 13A0                     l3909 1360  
                   l3861 1214                     l3853 11C4                     l3845 112A  
                   l3837 10FC                     l3829 10D6                     l3781 0E74  
                   l3773 0D70                     l3765 0D3E                     l3757 0D02  
                   l3749 0CC8                     l3693 0A66                     l3685 0A02  
                   l3677 09AA                     l4493 295C                     l4485 291C  
                   l4477 28D6                     l4469 28B6                     l3951 2AE4  
                   l3943 2AC4                     l3935 2A6A                     l2991 164A  
                   l2975 15CE                     l2967 15AE                     l2959 1542  
                   l2887 142A                     l2895 1454                     l2879 13FE  
                   l3599 2C76                     l3927 13DC                     l3919 13B2  
                   l3871 1258                     l3863 1222                     l3839 1102  
                   l3847 1130                     l3855 11C8                     l3791 0F14  
                   l3775 0D84                     l3783 0E7A                     l3767 0D50  
                   l3759 0D06                     l3679 09B4                     l4495 2976  
                   l4487 2936                     l4479 28E2                     l3961 2B5E  
                   l3953 2AEC                     l3945 2AC8                     l3937 2A6E  
                   l2993 1656                     l2985 161E                     l2977 15D8  
                   l2969 15BA                     l2897 1464                     l2889 143A  
                   l3881 128E                     l3873 1260                     l3865 1232  
                   l3857 11E6                     l3849 1188                     l3793 0F46  
                   l3785 0E98                     l3777 0DE8                     l3769 0D58  
                   l3689 0A38                     l4497 2984                     l4489 293C  
                   l3955 2AF4                     l3939 2A72                     l2995 165A  
                   l2987 162E                     l2979 15FA                     l2899 146A  
                   l3891 12EA                     l3883 1296                     l3875 1270  
                   l3867 1236                     l3859 1202                     l3795 0F56  
                   l3787 0ECC                     l3779 0E40                     l4499 29EE  
                   l3965 2B9C                     l3957 2B28                     l3949 2ACE  
                   l2997 1668                     l2989 163C                     l3893 12F2  
                   l3885 12A2                     l3877 1278                     l3869 1246  
                   l3797 0F66                     l3789 0EFE                     l3981 300E  
                   l3967 2BAE                     l2999 166A                     l3887 12A8  
                   l3895 12F8                     l3879 1286                     l3799 0F9A  
                   l3991 308A                     l3983 301C                     l3975 2FD8  
                   l3969 2BC0                     l3897 130A                     l3889 12CE  
                   l3985 3034                     l3977 3002                     l3995 3A4A  
                   l3899 1324                     l3987 3050                     l3989 3062  
                   l3999 3856                     STR_1 0801                     STR_2 0813  
                   STR_3 0824                     STR_4 0835                     STR_5 083A  
                   STR_6 0842                     STR_9 083E                     u3000 1800  
                   u3001 17FC                     u3010 183A                     u3011 1836  
                   u3020 184C                     u3100 3210                     u3021 1848  
                   u3101 320C                     u3030 185C                     u3110 2E30  
                   u3031 1858                     u3040 187C                     u4000 2C5E  
                   u3120 2E4E                     u3200 3560                     u3041 1878  
                   u4001 2C5A                     u3121 2E4A                     u3201 355A  
                   u3050 188E                     u4010 2C72                     u3130 2E76  
                   u3210 3562                     u3051 188A                     u4011 2C6E  
                   u3131 2E72                     u3115 2E26                     u3060 18AA  
                   u4020 2C9A                     u3140 2EA0                     u3300 2688  
                   u3220 3578                     u4100 08E6                     u3061 18A6  
                   u4021 2C96                     u3141 2E9C                     u3221 3574  
                   u4101 08E2                     u4030 2CBA                     u3310 26A4  
                   u3230 2538                     u3070 3188                     u4110 092E  
                   u4031 2CB6                     u3311 26A0                     u3071 3184  
                   u4111 092A                     u5000 34CC                     u3400 21F8  
                   u4040 2CCA                     u3160 2EDA                     u3320 26E0  
                   u3240 2566                     u2600 30C0                     u3080 31AA  
                   u4200 0B62                     u4120 095E                     u5001 34C8  
                   u3401 21F4                     u4041 2CC6                     u3161 2ED4  
                   u3321 26DC                     u3305 267E                     u3241 2562  
                   u2601 30BC                     u3081 31A6                     u4201 0B5E  
                   u4121 0958                     u5010 39BA                     u3330 3932  
                   u4050 36B0                     u3410 2238                     u3170 2EDC  
                   u3250 2588                     u2610 30D2                     u3090 3200  
                   u4210 0BD4                     u4130 0960                     u5011 39B6  
                   u3331 392C                     u4051 36AC                     u3411 2234  
                   u3155 2EB2                     u3251 2584                     u3235 252E  
                   u2611 30CE                     u3091 31FC                     u4211 0BD0  
                   u5020 374E                     u5100 284C                     u3340 3934  
                   u4060 36DE                     u3500 23C4                     u3420 2278  
                   u2700 143A                     u2620 30FA                     u3180 35D8  
                   u4300 0CF4                     u4220 0BFA                     u4140 0976  
                   u5021 374A                     u5101 2848                     u4061 36DA  
                   u3501 23C0                     u3421 2274                     u2701 1436  
                   u2621 30F6                     u4301 0CF0                     u4221 0BF6  
                   u4141 0972                     u5030 3778                     u5110 285A  
                   u3510 23F2                     u3430 22EE                     u3350 2170  
                   u2710 147C                     u3270 25F4                     u2630 3130  
                   u3190 35EA                     u4310 0D02                     u4230 0C0C  
                   u4150 0A02                     u4070 0876                     u5031 3774  
                   u5111 2856                     u3511 23EE                     u3431 22EA  
                   u3351 216C                     u2711 1478                     u3271 25F0  
                   u2631 312C                     u3191 35E6                     u4311 0CFE  
                   u4231 0C08                     u4151 09FE                     u4071 0872  
                   u5120 2894                     u5040 2714                     u3520 2408  
                   u3440 2310                     u3360 2182                     u3600 1D68  
                   u2800 15AE                     u2720 1492                     u3280 2618  
                   u2640 3852                     u4400 1062                     u4320 0D18  
                   u4240 0C2E                     u4160 0A32                     u4080 08C6  
                   u5121 2890                     u5041 2710                     u3521 2404  
                   u3441 230C                     u3361 217E                     u3601 1D64  
                   u2801 15AA                     u2721 148E                     u3265 259C  
                   u2641 384E                     u4401 105E                     u4321 0D14  
                   u4241 0C2A                     u4161 0A2C                     u4081 08C2  
                   u5130 28A2                     u5050 2722                     u3530 241C  
                   u3450 233A                     u3370 2192                     u3610 1DA8  
                   u2810 15CC                     u2730 14A4                     u3290 2634  
                   u3266 25A6                     u2650 3962                     u4410 1074  
                   u4330 0D26                     u4250 0C54                     u4170 0A34  
                   u4090 08D4                     u5131 289E                     u5051 271E  
                   u3531 2418                     u3451 2336                     u3371 218E  
                   u3611 1DA4                     u2811 15C8                     u2731 14A0  
                   u3291 2630                     u3267 25B6                     u2651 395E  
                   u3187 35CE                     u4411 1070                     u4331 0D22  
                   u4251 0C50                     u4091 08D0                     u5060 277E  
                   u3540 2436                     u3460 235E                     u3380 21D6  
                   u3700 2044                     u3620 1DBA                     u2900 171C  
                   u2820 15EC                     u2740 14B4                     u2660 38C2  
                   u4500 1222                     u4420 1086                     u4340 0D50  
                   u4260 0C6A                     u4180 0A4A                     u5061 277A  
                   u3541 2432                     u3461 235A                     u3381 21D2  
                   u3701 2040                     u3621 1DB6                     u2901 1718  
                   u2821 15E8                     u2741 14B0                     u3285 260E  
                   u2661 38BC                     u4501 121E                     u4421 1082  
                   u4341 0D4C                     u4261 0C66                     u4181 0A46  
                   u5070 27D4                     u3550 247E                     u3470 2374  
                   u3390 21E8                     u3710 205A                     u3630 1DCA  
                   u2910 172C                     u2830 15FA                     u2750 14F0  
                   u2670 38C4                     u4510 1258                     u4430 1094  
                   u4350 0E98                     u4270 0C86                     u4190 0ACE  
                   u5071 27D0                     u3551 247A                     u3471 2370  
                   u3391 21E4                     u3711 2056                     u3631 1DC6  
                   u2911 1728                     u2831 15F6                     u2751 14EC  
                   u4511 1254                     u4431 1090                     u4351 0E94  
                   u4271 0C82                     u4191 0ACA                     u5207 2928  
                   u5080 281E                     u4600 2AC4                     u3800 32AE  
                   u3560 24AE                     u3480 2392                     u3720 206E  
                   u3640 1E00                     u2920 1758                     u2840 160A  
                   u2760 14FE                     u2680 1418                     u4520 1286  
                   u4440 10AE                     u4360 0EFE                     u4280 0CBC  
                   u5081 281A                     u4601 2AC0                     u3801 32AA  
                   u3561 24AA                     u3481 238E                     u3721 206A  
                   u3641 1DFC                     u2921 1754                     u2841 1606  
                   u2761 14FA                     u2681 1414                     u4521 1282  
                   u4441 10AA                     u4361 0EFA                     u4281 0CB8  
                   u5217 2968                     u5090 283C                     u4610 2AE0  
                   u3810 32CA                     u3570 24DC                     u3490 23B2  
                   u3730 2088                     u3650 1E10                     u2930 1768  
                   u2850 163C                     u2770 156C                     u2690 142A  
                   u4530 130A                     u4450 10BC                     u4370 0F46  
                   u4290 0CE2                     u5091 2838                     u4611 2ADC  
                   u3811 32C6                     u3571 24D8                     u3491 23AE  
                   u3731 2084                     u3651 1E0C                     u2931 1764  
                   u2851 1638                     u2771 1568                     u2691 1426  
                   u4531 1306                     u4451 10B8                     u4371 0F42  
                   u4291 0CDE                     u5227 2A40                     u4620 2B96  
                   u3820 32F0                     u3900 341E                     u3740 20D0  
                   u3660 1F8A                     u3580 1D46                     u2940 1784  
                   u2860 164A                     u2780 1584                     u4540 1324  
                   u4460 1114                     u4380 0F56                     u4700 308A  
                   u5237 3A50                     u4621 2B90                     u3821 32EC  
                   u3901 341A                     u3741 20CC                     u3581 1D42  
                   u2941 1780                     u2861 1646                     u2781 157E  
                   u4541 1320                     u4461 1110                     u4381 0F52  
                   u4701 3086                     u4710 37E6                     u4630 2B98  
                   u3830 3314                     u3910 3452                     u3750 20FE  
                   u3670 1FE4                     u3590 1D58                     u2950 1794  
                   u2870 1668                     u2790 1586                     u4550 133C  
                   u4470 11E6                     u4390 0FBE                     u4711 37E2  
                   u3831 3310                     u3911 344E                     u3751 20FA  
                   u3671 1FE0                     u3591 1D54                     u2951 1790  
                   u2871 1664                     u4551 1338                     u4471 11E2  
                   u4391 0FBA                     u4640 2BAE                     u3840 332E  
                   u3920 2D1A                     u3760 2138                     u3680 2004  
                   u2960 17A6                     u2880 16A0                     u4560 139A  
                   u4480 1202                     u4800 1A9A                     u4641 2BAA  
                   u3841 332A                     u3921 2D16                     u3761 2134  
                   u3681 2000                     u3665 1F80                     u2961 17A2  
                   u2881 169C                     u4561 1394                     u4481 11FE  
                   u4801 1A96                     u4650 2BC0                     u3770 3250  
                   u3850 3348                     u3930 2D58                     u3690 2016  
                   u2970 17BC                     u2890 16E6                     u4570 139C  
                   u4490 1214                     u4810 1ADE                     u4730 18E2  
                   u4651 2BBC                     u3771 324C                     u3851 3344  
                   u3931 2D54                     u3691 2012                     u2971 17B8  
                   u2891 16E2                     u4491 1210                     u4811 1ADA  
                   u4731 18DE                     u4900 2F68                     u3780 326A  
                   u3860 3366                     u3940 2D76                     u2980 17D2  
                   u4580 13B2                     u4660 3002                     u4820 1B8C  
                   u4740 192A                     u4725 3608                     u4901 2F64  
                   u3781 3266                     u3861 3362                     u3941 2D72  
                   u2981 17CE                     u4581 13AE                     u4661 2FFE  
                   u4821 1B88                     u4741 1926                     u5197 28EE  
                   u4910 2F82                     u4590 2A8E                     u3790 3290  
                   u3870 337C                     u3950 2D96                     u2990 17E6  
                   u4670 3034                     u4830 1BF2                     u4750 1964  
                   u4911 2F7E                     u4591 2A8A                     u3791 328C  
                   u3871 3378                     u3951 2D92                     u2991 17E2  
                   u4671 3030                     u4831 1BEC                     u4751 1960  
                   u4920 2F9C                     u3880 33A0                     u3960 2DE6  
                   u4680 3050                     u4840 1BF4                     u4760 1A0C  
                   u4921 2F98                     u3881 339C                     u3961 2DE2  
                   u4681 304C                     u4761 1A06                     u4930 2FB6  
                   u3890 33E0                     u3970 38E0                     u4690 3062  
                   u4850 1C0C                     u4770 1A0E                     u4931 2FB2  
                   u3891 33DC                     u3971 38DC                     u4691 305E  
                   u4851 1C08                     u4940 2FD0                     u3980 2BFC  
                   u4860 1CA8                     u4780 1A26                     u4941 2FCC  
                   u3981 2BF8                     u4861 1CA4                     u4781 1A22  
                   u4870 3700                     u3990 2C30                     u4790 1A58  
                   u4950 3526                     u4871 36FC                     u4791 1A54  
                   u4951 3522                     u4880 2F3A                     u4960 398A  
                   u4881 2F36                     u4961 3986                     u4890 2F4E  
                   u4970 3474                     u4891 2F4A                     u4971 3470  
                   u3995 2C26                     u4980 3494                     u4990 34BC  
                   u4987 348A                     u4997 34B2             __CFG_PWRT$ON 000000  
                   _dbuf 0100                     _atoi 2A56                     _main 28B6  
                   _prec 00DB                     _nout 00D7                     pad@i 0018  
                   pad@p 0015                     fsr0h 000FEA                     fsr1h 000FE2  
                   indf0 000FEF                     fsr2h 000FDA                     fsr0l 000FE9  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001A  
                   fsr2l 000FD9         __end_of_ADC_Init 3A30         __end_of_ADC_Read 3784  
          ___fpclassifyf 2DF0   __size_of_WriteDataXLCD 0052                     prodh 000FF4  
                   prodl 000FF3                     start 0000            __CFG_IESO$OFF 000000  
        ___fldiv@new_exp 0039             _tolower$1094 000D            __CFG_MCLRE$ON 000000  
           ___param_bank 000000                    ??_pad 0017             _WriteCmdXLCD 3854  
       __end_of_LCD_Init 39C8            __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000  
          ___fltol@sign1 0009                    ?_atoi 0008            ?_SetDDRamAddr 0001  
        __end_of___fladd 18BE                    ?_main 0001          __end_of___fldiv 24F0  
        __end_of___awdiv 3302          __end_of___flneg 3902                    _ADRES 000FC3  
                  STR_10 0846                    STR_13 084A                    STR_15 084A  
        __end_of___awmod 33B2          __end_of___flmul 2156          __end_of___flsub 37CA  
        __end_of___fltol 2CEC          ___awdiv@divisor 0003          ___awdiv@counter 0005  
           vfpfcnvrt@fmt 009F                    _PORTD 000F83            __CFG_USBDIV$1 000000  
                  _TRISA 000F92                    _TRISD 000F95            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  _datos 00E1                    _flags 00DD                    _fputc 30AE  
                  _fputs 3810          __end_of_isdigit 393A                    atoi@n 0015  
                  pad@fp 0011                    atoi@s 0008                    _width 00D9  
                  _putch 3A5A          __end_of_isspace 36EA          __end_of_isupper 38CA  
                  tablat 000FF5                    status 000FD8          __end_of_sprintf 3698  
         ?___fpclassifyf 0001          __end_of_tolower 3590          __end_of_strncmp 30AE  
         __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000      __size_of_LCD_gotoXY 0030  
        __initialization 39EE              LCD_gotoXY@x 0002              LCD_gotoXY@y 0004  
           __end_of_atoi 2BE6             __end_of_main 2A56         __end_of_BusyXLCD 3810  
  __size_of_DelayPORXLCD 0010           ??_SetDDRamAddr 0001         __end_of_OpenXLCD 2FD8  
                 ??_atoi 000A                   ??_main 00C9            __activetblptr 000002  
          _WriteDataXLCD 36EA                   _ADCON0 000FC2                   ?_fputc 0001  
                 ?_fputs 000A         ___awdiv@dividend 0001                   ?_putch 0001  
       __end_of___xxtofl 28B6             _DelayPORXLCD 3A4A           __CFG_XINST$OFF 000000  
           vfprintf@cfmt 00B5                   ___flge 2CEC                   ___fleq 33B2  
              ??___fladd 0009                   ___wmul 39C8                ??___fldiv 0030  
              ??___awdiv 0005                ??___flneg 0005           __CFG_STVREN$ON 000000  
              ??___awmod 0005                ??___flmul 0017                ??___flsub 0030  
              ??___fltol 0005                   _efgtoa 084E                   _floorf 24F0  
                 clear_0 39F4                   clear_1 3A00         ___awdiv@quotient 0007  
        ___awmod@divisor 0003          ___awmod@counter 0005                   pad@buf 0013  
         ?_WriteDataXLCD 0001                   _strcpy 3590                   _strlen 393A  
                 fputc@c 0001                   fputs@c 000E                   fputs@i 000F  
                 fputs@s 000A                ??_isdigit 0003          ___fpclassifyf@e 0009  
              ?_ADC_Init 0001          ___fpclassifyf@u 000B                ?_ADC_Read 0001  
        ___fpclassifyf@x 0001             __mediumconst 0000                ??_isspace 0003  
                 tblptrh 000FF7                ??_isupper 0003                   tblptrl 000FF6  
                 tblptru 000FF8                   putch@c 0001         __end_of_vfprintf 3530  
              ??_sprintf 0060                ??_tolower 0009                ??_strncmp 0007  
             ___flge@ff1 0028               ___flge@ff2 002C          ??___fpclassifyf 0005  
           ___xxtofl@arg 000B             ___xxtofl@exp 000A             ___xxtofl@val 0001  
             ___fleq@ff1 0001               ___fleq@ff2 0005               __accesstop 0060  
__end_of__initialization 3A06                ?_LCD_Init 0001               ___flneg@f1 0001  
          ___rparam_used 000001               ___fltol@f1 0001           __pcstackCOMRAM 0001  
          __end_of_fputc 3178            __end_of_fputs 3854            __end_of_putch 3A5C  
           ??_LCD_gotoXY 0006               ??_ADC_Init 0001               ??_ADC_Read 0003  
                ??_fputc 0005                  ??_fputs 000E   __size_of_DelayFor18TCY 001A  
                ??_putch 0001               __pbssBANK0 00CB               __pbssBANK1 0100  
              ?_BusyXLCD 0001          WriteCmdXLCD@cmd 0001               ??_LCD_Init 0006  
   __end_of_SetDDRamAddr 3646                ?_OpenXLCD 0001               _efgtoa$483 006D  
             _efgtoa$477 0069               _efgtoa$478 006B               _efgtoa$487 006F  
             _efgtoa$488 0071               _efgtoa$489 0073       __end_of_LCD_gotoXY 39A0  
                ?___flge 0028                  ?___fleq 0001        WriteDataXLCD@data 0001  
                ?___wmul 0001                  ?_efgtoa 0055                  ?_floorf 0041  
        ??_WriteDataXLCD 0001               ADC_Read@ch 0003                  ?_strcpy 0001  
                ?_strlen 0001                ?___xxtofl 0001       __size_of_vfpfcnvrt 046E  
     __size_of_putrsXLCD 0072               ??_BusyXLCD 0001          __CFG_VREGEN$OFF 000000  
             ??_OpenXLCD 0005                  __Hparam 0000                  __Lparam 0000  
        __size_of___flge 0104          __size_of___fleq 00AA                  ___fladd 13FE  
                ___fldiv 2156                  ___awdiv 323E            _DelayFor18TCY 3A30  
                ___flneg 38CA                  ___awmod 3302                  ___flmul 1D2C  
                ___flsub 3784                  ___fltol 2BE6          __size_of___wmul 0026  
              ?_vfprintf 00AF             __psmallconst 0800          __size_of_efgtoa 0BB0  
        __size_of_floorf 0212                  __pcinit 39EE          putrsXLCD@buffer 0002  
                __ramtop 0800                  __ptext0 28B6                  __ptext1 3646  
                __ptext2 34CE                  __ptext3 18BE                  __ptext4 2FD8  
                __ptext5 084E                  __ptext6 3530                  __ptext7 3892  
                __ptext8 3590                  __ptext9 3178          __size_of_strcpy 005C  
        __size_of_strlen 0036             __size_of_pad 00C6                  _isdigit 3902  
             ??___xxtofl 0005         ___awmod@dividend 0001                  _isspace 3698  
                _isupper 3892                  efgtoa@c 005B                  efgtoa@d 007D  
                efgtoa@e 0095                  efgtoa@f 0057                  efgtoa@g 0091  
                efgtoa@h 0087                  efgtoa@i 008F                  efgtoa@l 008B  
                efgtoa@m 0079                  efgtoa@n 0097                  efgtoa@p 0081  
                efgtoa@t 0075                  efgtoa@u 0099                  efgtoa@w 0084  
                _tension 00D3                  atoi@neg 000E                  _sprintf 3646  
                _tolower 3530                  _strncmp 2FD8     end_of_initialization 3A06  
                floorf@e 004F                  floorf@m 004B                  floorf@u 0051  
                floorf@x 0041                  fputc@fp 0003            __Lmediumconst 0000  
                fputs@fp 000C        __end_of_vfpfcnvrt 1D2C               efgtoa@mode 0086  
             efgtoa@sign 007F           ?_DelayFor18TCY 0001                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
             ??_vfprintf 0060                  strcpy@d 0009                  strlen@a 0003  
                strcpy@s 0007                  strlen@s 0001        __end_of_putrsXLCD 34CE  
            ___fladd@grs 0010            ___xxtofl@sign 0009                _TRISDbits 000F95  
            ___fldiv@grs 003B              ___fldiv@rem 0034    __size_of_SetDDRamAddr 005A  
      __size_of_ADC_Init 0020        __size_of_ADC_Read 0048              ___flmul@grs 001C  
      __size_of_LCD_Init 0028           __end_of___flge 2DF0           __end_of___fleq 345C  
            vfpfcnvrt@ap 00A1              vfpfcnvrt@ct 00AB              vfpfcnvrt@fp 009D  
         __end_of___wmul 39EE           __end_of_efgtoa 13FE           __end_of_floorf 2702  
             floorf@F524 00CB             _SetDDRamAddr 35EC       SetDDRamAddr@DDaddr 0004  
         __end_of_strcpy 35EC           __end_of_strlen 3970      start_initialization 39EE  
            __end_of_pad 323E    __end_of___fpclassifyf 2EEE        __size_of_BusyXLCD 0046  
        ??_DelayFor18TCY 0001              vfprintf@fmt 00B1        __size_of_OpenXLCD 00EA  
               ??___flge 0030                 ??___fleq 0009                 ??___wmul 0005  
               ??_efgtoa 0060            ?_WriteCmdXLCD 0001                 ??_floorf 0045  
       __CFG_LPT1OSC$OFF 000000                 ??_strcpy 0005                 ??_strlen 0003  
              ___fladd@a 0005                ___fladd@b 0001                ___fldiv@a 002C  
              ___fldiv@b 0028                ___flmul@a 0013                ___flmul@b 000F  
              ___flsub@a 002C                ___flsub@b 0028            __pcstackBANK0 0060  
      __size_of___xxtofl 01B4           ??_WriteCmdXLCD 0001                 ?___fladd 0001  
               ?___fldiv 0028                 ?___awdiv 0001                 ?___flneg 0001  
               ?___awmod 0001                 ?___flmul 000F                 ?___flsub 0028  
               ?___fltol 0001    __end_of_WriteDataXLCD 373C        __size_of_vfprintf 0062  
            __smallconst 0800                 ?_isdigit 0001                 _ADC_Init 3A10  
               _ADC_Read 373C                 ?_isspace 0001                 ?_isupper 0001  
               ?_sprintf 00B7                 ?_tolower 0007           __size_of_fputc 00CA  
         __size_of_fputs 0044                 ?_strncmp 0001           __size_of_putch 0002  
               _LCD_Init 39A0           ___wmul@product 0005                 _LATDbits 000F8C  
          ?_DelayPORXLCD 0001          OpenXLCD@lcdtype 0005         __CFG_WDTPS$32768 000000  
              _vfpfcnvrt 18BE               _ADCON0bits 000FC2               _ADCON1bits 000FC1  
             _ADCON2bits 000FC0        ___wmul@multiplier 0001                _putrsXLCD 345C  
           _isspace$1009 0007               vfpfcnvrt@c 00AE               vfpfcnvrt@f 00A7  
               _BusyXLCD 37CA           ??_DelayPORXLCD 0001                 _OpenXLCD 2EEE  
               __Hrparam 0000               vfprintf@ap 00B3                 __Lrparam 0000  
             vfprintf@fp 00AF         __size_of___fladd 04C0         __size_of___fldiv 039A  
       __size_of___awdiv 00C4         __size_of___flneg 0038         __size_of___awmod 00B0  
       __size_of___flmul 042A         __size_of___flsub 0046         __size_of___fltol 0106  
             ?_vfpfcnvrt 009D       ___fpclassifyf@F463 00CF               sprintf@fmt 00B9  
             ?_putrsXLCD 0002                 ___xxtofl 2702                 _atoi$980 0012  
               _atoi$978 0010                 _atoi$979 0014         __size_of_isdigit 0038  
       __size_of_isspace 0052                 __ptext10 393A                 __ptext11 3810  
               __ptext20 1D2C                 __ptext12 30AE                 __ptext21 2CEC  
               __ptext13 3A5A                 __ptext30 345C                 __ptext22 33B2  
               __ptext14 24F0                 __ptext31 36EA                 __ptext23 2156  
               __ptext15 2DF0                 __ptext40 3A30                 __ptext32 2702  
               __ptext24 3302                 __ptext16 2BE6                 __ptext41 373C  
               __ptext33 3970                 __ptext25 323E                 __ptext17 3784  
               __ptext42 3A10                 __ptext34 39A0                 __ptext26 2A56  
               __ptext18 13FE                 __ptext35 2EEE                 __ptext27 3698  
               __ptext19 38CA                 __ptext36 3854                 __ptext28 3902  
               __ptext37 35EC                 __ptext29 39C8                 __ptext38 3A4A  
               __ptext39 37CA         __size_of_isupper 0038     __end_of_WriteCmdXLCD 3892  
       __size_of_sprintf 0052         __size_of_tolower 0060               strcpy@dest 0001  
       __size_of_strncmp 00D6            __size_of_atoi 0190            __size_of_main 01A0  
               efgtoa@fp 0055                 efgtoa@ne 007B                 efgtoa@pp 0077  
               efgtoa@ou 0065                 _vfprintf 34CE             _valorLectura 00DF  
  __CFG_CPUDIV$OSC1_PLL2 000000               _LCD_gotoXY 3970                 isdigit@c 0001  
              sprintf@ap 00C1                 isspace@c 0001                strcpy@src 0003  
               isupper@c 0001                strncmp@_l 0001                strncmp@_r 0003  
  __end_of_DelayFor18TCY 3A4A              efgtoa@nmode 0083              ??_vfpfcnvrt 005C  
          _vfpfcnvrt$503 00A3            _vfpfcnvrt$507 00A5                 sprintf@f 00C3  
               tolower@c 0007                 sprintf@s 00B7   __size_of___fpclassifyf 00FE  
   __end_of_DelayPORXLCD 3A5A              ??_putrsXLCD 0004                 strncmp@l 0008  
               strncmp@n 0005                 strncmp@r 000A            ___fladd@signs 000D  
           ___fladd@aexp 000E             ___fladd@bexp 000F  
