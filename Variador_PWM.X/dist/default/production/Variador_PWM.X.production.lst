

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Mar 28 15:46:20 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12  0000                     
    13                           ; Version 2.10
    14                           ; Generated 31/07/2019 GMT
    15                           ; 
    16                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F4550 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     
    48                           	psect	nvCOMRAM
    49  000004                     __pnvCOMRAM:
    50                           	opt callstack 0
    51  000004                     _duty_cicle:
    52                           	opt callstack 0
    53  000004                     	ds	2
    54  0000                     _T2CONbits	set	4042
    55  0000                     _TMR2	set	4044
    56  0000                     _CCP1CON	set	4029
    57  0000                     _T2CON	set	4042
    58  0000                     _CCPR1L	set	4030
    59  0000                     _PR2	set	4043
    60  0000                     _TRISCbits	set	3988
    61                           
    62                           ; #config settings
    63  0000                     
    64                           	psect	cinit
    65  007F22                     __pcinit:
    66                           	opt callstack 0
    67  007F22                     start_initialization:
    68                           	opt callstack 0
    69  007F22                     __initialization:
    70                           	opt callstack 0
    71  007F22                     end_of_initialization:
    72                           	opt callstack 0
    73  007F22                     __end_of__initialization:
    74                           	opt callstack 0
    75  007F22  0100               	movlb	0
    76  007F24  EFA2  F03F         	goto	_main	;jump to C main() function
    77                           
    78                           	psect	cstackCOMRAM
    79  000001                     __pcstackCOMRAM:
    80                           	opt callstack 0
    81  000001                     ??_main:
    82                           
    83                           ; 1 bytes @ 0x0
    84  000001                     	ds	3
    85                           
    86 ;;
    87 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
    88 ;;
    89 ;; *************** function _main *****************
    90 ;; Defined at:
    91 ;;		line 50 in file "Main.c"
    92 ;; Parameters:    Size  Location     Type
    93 ;;		None
    94 ;; Auto vars:     Size  Location     Type
    95 ;;		None
    96 ;; Return value:  Size  Location     Type
    97 ;;                  1    wreg      void 
    98 ;; Registers used:
    99 ;;		wreg, status,2, status,0, cstack
   100 ;; Tracked objects:
   101 ;;		On entry : 0/0
   102 ;;		On exit  : 0/0
   103 ;;		Unchanged: 0/0
   104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   105 ;;      Params:         0       0       0       0       0       0       0       0       0
   106 ;;      Locals:         0       0       0       0       0       0       0       0       0
   107 ;;      Temps:          3       0       0       0       0       0       0       0       0
   108 ;;      Totals:         3       0       0       0       0       0       0       0       0
   109 ;;Total ram usage:        3 bytes
   110 ;; Hardware stack levels required when called:    1
   111 ;; This function calls:
   112 ;;		_InitPWM_CCP1
   113 ;; This function is called by:
   114 ;;		Startup code after reset
   115 ;; This function uses a non-reentrant model
   116 ;;
   117                           
   118                           	psect	text0
   119  007F44                     __ptext0:
   120                           	opt callstack 0
   121  007F44                     _main:
   122                           	opt callstack 30
   123  007F44                     
   124                           ;Main.c: 51:     InitPWM_CCP1();
   125  007F44  EC94  F03F         	call	_InitPWM_CCP1	;wreg free
   126  007F48                     l719:
   127                           
   128                           ;Main.c: 58:         for(duty_cicle = 0x01; duty_cicle < PR2; duty_cicle++){
   129  007F48  0E00               	movlw	0
   130  007F4A  6E05               	movwf	(_duty_cicle+1)^0,c
   131  007F4C  0E01               	movlw	1
   132  007F4E  6E04               	movwf	_duty_cicle^0,c
   133  007F50  EFB5  F03F         	goto	l27
   134  007F54                     l28:
   135                           
   136                           ;Main.c: 59:             CCPR1L = duty_cicle;
   137  007F54  C004  FFBE         	movff	_duty_cicle,4030	;volatile
   138  007F58                     
   139                           ;Main.c: 60:             _delay((unsigned long)((20)*(20000000L/4000.0)));
   140  007F58  0E82               	movlw	130
   141  007F5A  6E01               	movwf	??_main^0,c
   142  007F5C  0EDE               	movlw	222
   143  007F5E                     u37:
   144  007F5E  2EE8               	decfsz	wreg,f,c
   145  007F60  D7FE               	bra	u37
   146  007F62  2E01               	decfsz	??_main^0,f,c
   147  007F64  D7FC               	bra	u37
   148  007F66                     
   149                           ;Main.c: 61:         }
   150  007F66  4A04               	infsnz	_duty_cicle^0,f,c
   151  007F68  2A05               	incf	(_duty_cicle+1)^0,f,c
   152  007F6A                     l27:
   153  007F6A  50CB               	movf	203,w,c	;volatile
   154  007F6C  6E01               	movwf	??_main^0,c
   155  007F6E  6A02               	clrf	(??_main+1)^0,c
   156  007F70  5001               	movf	??_main^0,w,c
   157  007F72  5C04               	subwf	_duty_cicle^0,w,c
   158  007F74  5005               	movf	(_duty_cicle+1)^0,w,c
   159  007F76  0A80               	xorlw	128
   160  007F78  6E03               	movwf	(??_main+2)^0,c
   161  007F7A  5002               	movf	(??_main+1)^0,w,c
   162  007F7C  0A80               	xorlw	128
   163  007F7E  5803               	subwfb	(??_main+2)^0,w,c
   164  007F80  A0D8               	btfss	status,0,c
   165  007F82  EFC5  F03F         	goto	u11
   166  007F86  EFC7  F03F         	goto	u10
   167  007F8A                     u11:
   168  007F8A  EFAA  F03F         	goto	l28
   169  007F8E                     u10:
   170  007F8E                     
   171                           ;Main.c: 62:         _delay((unsigned long)((100)*(20000000L/4000.0)));
   172  007F8E  0E03               	movlw	3
   173  007F90  6E02               	movwf	(??_main+1)^0,c
   174  007F92  0E8A               	movlw	138
   175  007F94  6E01               	movwf	??_main^0,c
   176  007F96  0E56               	movlw	86
   177  007F98                     u47:
   178  007F98  2EE8               	decfsz	wreg,f,c
   179  007F9A  D7FE               	bra	u47
   180  007F9C  2E01               	decfsz	??_main^0,f,c
   181  007F9E  D7FC               	bra	u47
   182  007FA0  2E02               	decfsz	(??_main+1)^0,f,c
   183  007FA2  D7FA               	bra	u47
   184  007FA4                     
   185                           ;Main.c: 63:         for(duty_cicle = PR2; duty_cicle > 0x01; duty_cicle--){
   186  007FA4  CFCB F004          	movff	4043,_duty_cicle	;volatile
   187  007FA8  6A05               	clrf	(_duty_cicle+1)^0,c
   188  007FAA  EFE3  F03F         	goto	l30
   189  007FAE                     l31:
   190                           
   191                           ;Main.c: 64:             CCPR1L = duty_cicle;
   192  007FAE  C004  FFBE         	movff	_duty_cicle,4030	;volatile
   193  007FB2                     
   194                           ;Main.c: 65:             _delay((unsigned long)((20)*(20000000L/4000.0)));
   195  007FB2  0E82               	movlw	130
   196  007FB4  6E01               	movwf	??_main^0,c
   197  007FB6  0EDE               	movlw	222
   198  007FB8                     u57:
   199  007FB8  2EE8               	decfsz	wreg,f,c
   200  007FBA  D7FE               	bra	u57
   201  007FBC  2E01               	decfsz	??_main^0,f,c
   202  007FBE  D7FC               	bra	u57
   203  007FC0                     
   204                           ;Main.c: 66:         }
   205  007FC0  0604               	decf	_duty_cicle^0,f,c
   206  007FC2  A0D8               	btfss	status,0,c
   207  007FC4  0605               	decf	(_duty_cicle+1)^0,f,c
   208  007FC6                     l30:
   209  007FC6  BE05               	btfsc	(_duty_cicle+1)^0,7,c
   210  007FC8  EFF1  F03F         	goto	u20
   211  007FCC  5005               	movf	(_duty_cicle+1)^0,w,c
   212  007FCE  E107               	bnz	u21
   213  007FD0  0E02               	movlw	2
   214  007FD2  5C04               	subwf	_duty_cicle^0,w,c
   215  007FD4  B0D8               	btfsc	status,0,c
   216  007FD6  EFEF  F03F         	goto	u21
   217  007FDA  EFF1  F03F         	goto	u20
   218  007FDE                     u21:
   219  007FDE  EFD7  F03F         	goto	l31
   220  007FE2                     u20:
   221  007FE2                     
   222                           ;Main.c: 67:         _delay((unsigned long)((100)*(20000000L/4000.0)));
   223  007FE2  0E03               	movlw	3
   224  007FE4  6E02               	movwf	(??_main+1)^0,c
   225  007FE6  0E8A               	movlw	138
   226  007FE8  6E01               	movwf	??_main^0,c
   227  007FEA  0E56               	movlw	86
   228  007FEC                     u67:
   229  007FEC  2EE8               	decfsz	wreg,f,c
   230  007FEE  D7FE               	bra	u67
   231  007FF0  2E01               	decfsz	??_main^0,f,c
   232  007FF2  D7FC               	bra	u67
   233  007FF4  2E02               	decfsz	(??_main+1)^0,f,c
   234  007FF6  D7FA               	bra	u67
   235  007FF8  EFA4  F03F         	goto	l719
   236  007FFC  EF00  F000         	goto	start
   237  008000                     __end_of_main:
   238                           	opt callstack 0
   239                           
   240 ;; *************** function _InitPWM_CCP1 *****************
   241 ;; Defined at:
   242 ;;		line 39 in file "Main.c"
   243 ;; Parameters:    Size  Location     Type
   244 ;;		None
   245 ;; Auto vars:     Size  Location     Type
   246 ;;		None
   247 ;; Return value:  Size  Location     Type
   248 ;;                  1    wreg      void 
   249 ;; Registers used:
   250 ;;		wreg, status,2
   251 ;; Tracked objects:
   252 ;;		On entry : 0/0
   253 ;;		On exit  : 0/0
   254 ;;		Unchanged: 0/0
   255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   256 ;;      Params:         0       0       0       0       0       0       0       0       0
   257 ;;      Locals:         0       0       0       0       0       0       0       0       0
   258 ;;      Temps:          0       0       0       0       0       0       0       0       0
   259 ;;      Totals:         0       0       0       0       0       0       0       0       0
   260 ;;Total ram usage:        0 bytes
   261 ;; Hardware stack levels used:    1
   262 ;; This function calls:
   263 ;;		Nothing
   264 ;; This function is called by:
   265 ;;		_main
   266 ;; This function uses a non-reentrant model
   267 ;;
   268                           
   269                           	psect	text1
   270  007F28                     __ptext1:
   271                           	opt callstack 0
   272  007F28                     _InitPWM_CCP1:
   273                           	opt callstack 30
   274  007F28                     
   275                           ;Main.c: 40:     TRISCbits.RC1 = 0;
   276  007F28  9294               	bcf	148,1,c	;volatile
   277                           
   278                           ;Main.c: 41:     TRISCbits.RC2 = 0;
   279  007F2A  9494               	bcf	148,2,c	;volatile
   280  007F2C                     
   281                           ;Main.c: 42:     PR2 = 0x26;
   282  007F2C  0E26               	movlw	38
   283  007F2E  6ECB               	movwf	203,c	;volatile
   284                           
   285                           ;Main.c: 43:     CCPR1L = 0x1F;
   286  007F30  0E1F               	movlw	31
   287  007F32  6EBE               	movwf	190,c	;volatile
   288                           
   289                           ;Main.c: 44:     T2CON = 0x03;
   290  007F34  0E03               	movlw	3
   291  007F36  6ECA               	movwf	202,c	;volatile
   292                           
   293                           ;Main.c: 45:     CCP1CON = 0x0C;
   294  007F38  0E0C               	movlw	12
   295  007F3A  6EBD               	movwf	189,c	;volatile
   296                           
   297                           ;Main.c: 46:     TMR2 = 0;
   298  007F3C  0E00               	movlw	0
   299  007F3E  6ECC               	movwf	204,c	;volatile
   300  007F40                     
   301                           ;Main.c: 47:     T2CONbits.TMR2ON = 1;
   302  007F40  84CA               	bsf	202,2,c	;volatile
   303  007F42  0012               	return		;funcret
   304  007F44                     __end_of_InitPWM_CCP1:
   305                           	opt callstack 0
   306  0000                     
   307                           	psect	rparam
   308  0000                     tosu	equ	0xFFF
   309                           tosh	equ	0xFFE
   310                           tosl	equ	0xFFD
   311                           stkptr	equ	0xFFC
   312                           pclatu	equ	0xFFB
   313                           pclath	equ	0xFFA
   314                           pcl	equ	0xFF9
   315                           tblptru	equ	0xFF8
   316                           tblptrh	equ	0xFF7
   317                           tblptrl	equ	0xFF6
   318                           tablat	equ	0xFF5
   319                           prodh	equ	0xFF4
   320                           prodl	equ	0xFF3
   321                           indf0	equ	0xFEF
   322                           postinc0	equ	0xFEE
   323                           postdec0	equ	0xFED
   324                           preinc0	equ	0xFEC
   325                           plusw0	equ	0xFEB
   326                           fsr0h	equ	0xFEA
   327                           fsr0l	equ	0xFE9
   328                           wreg	equ	0xFE8
   329                           indf1	equ	0xFE7
   330                           postinc1	equ	0xFE6
   331                           postdec1	equ	0xFE5
   332                           preinc1	equ	0xFE4
   333                           plusw1	equ	0xFE3
   334                           fsr1h	equ	0xFE2
   335                           fsr1l	equ	0xFE1
   336                           bsr	equ	0xFE0
   337                           indf2	equ	0xFDF
   338                           postinc2	equ	0xFDE
   339                           postdec2	equ	0xFDD
   340                           preinc2	equ	0xFDC
   341                           plusw2	equ	0xFDB
   342                           fsr2h	equ	0xFDA
   343                           fsr2l	equ	0xFD9
   344                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      3       5
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 COMRAM     3     3      0
                       _InitPWM_CCP1
 ---------------------------------------------------------------------------------
 (1) _InitPWM_CCP1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitPWM_CCP1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      3       5       1        5.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       5       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       5      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Mar 28 15:46:20 2020

                     l21 7F42                       l30 7FC6                       l31 7FAE  
                     l27 7F6A                       l28 7F54                       u10 7F8E  
                     u11 7F8A                       u20 7FE2                       u21 7FDE  
                     u37 7F5E                       u47 7F98                       u57 7FB8  
                     u67 7FEC              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l711 7F28                      l713 7F2C                      l721 7F58  
                    l715 7F40                      l731 7FC0                      l723 7F66  
                    l733 7FE2                      l725 7F8E                      l717 7F44  
                    l727 7FA4                      l719 7F48                      l729 7FB2  
           __CFG_CPB$OFF 000000            ?_InitPWM_CCP1 0001                      _PR2 000FCB  
           __CFG_CPD$OFF 000000             __CFG_BOR$OFF 000000                      wreg 000FE8  
           __CFG_FOSC$HS 000000             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   _TMR2 000FCC             __CFG_PWRT$ON 000000                     _main 7F44  
                   start 0000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000            __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000  
         ??_InitPWM_CCP1 0001                    ?_main 0001                    _T2CON 000FCA  
          __CFG_USBDIV$1 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    status 000FD8  
         __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000          __initialization 7F22  
           __end_of_main 8000                   ??_main 0001            __activetblptr 000000  
                 _CCPR1L 000FBE           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
             __accesstop 0060  __end_of__initialization 7F22     __end_of_InitPWM_CCP1 7F44  
          ___rparam_used 000001           __pcstackCOMRAM 0001               __pnvCOMRAM 0004  
                _CCP1CON 000FBD          __CFG_VREGEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7F22                  __ramtop 0800  
                __ptext0 7F44                  __ptext1 7F28                _T2CONbits 000FCA  
             _duty_cicle 0004    __size_of_InitPWM_CCP1 001C     end_of_initialization 7F22  
           _InitPWM_CCP1 7F28                _TRISCbits 000F94      start_initialization 7F22  
       __CFG_LPT1OSC$OFF 000000         __CFG_WDTPS$32768 000000                 __Hrparam 0000  
               __Lrparam 0000            __size_of_main 00BC    __CFG_CPUDIV$OSC1_PLL2 000000  
